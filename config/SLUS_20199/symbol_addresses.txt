//ltmvu0HitCheckSkip2                      = 0x00000000; // (Region->LOCAL)  (Type->NOTYPE) 
//ltmvu0VertexCheckEnd                     = 0x00000000; // (Region->LOCAL)  (Type->NOTYPE) 
//ltmvu0HitCheckEnd2                       = 0x00000000; // (Region->LOCAL)  (Type->NOTYPE) 
//ltmvu0HitCheckSkip                       = 0x00000000; // (Region->LOCAL)  (Type->NOTYPE) 
//ltmvu0HitCheckEnd                        = 0x00000000; // (Region->LOCAL)  (Type->NOTYPE) 
//__start_.DVP.overlay..0x0.672023395.51.0 = 0x00000000; // (Region->LOCAL)  (Type->NOTYPE) 
//.DVP.overlay..0x0.672023395.51.0         = 0x00000000; // (Region->LOCAL)  (Type->SECTION)
//David_OB                                 = 0x00000000; // (Region->LOCAL)  (Type->NOTYPE) 
//David_TestRay                            = 0x00000000; // (Region->GLOBAL) (Type->NOTYPE) 
//David_CheckBoundAndMakeMatrix            = 0x00000000; // (Region->GLOBAL) (Type->NOTYPE) 
//David_CheckBodyBound                     = 0x00000000; // (Region->GLOBAL) (Type->NOTYPE) 
//ltmvu0HitCheck                           = 0x00000000; // (Region->GLOBAL) (Type->NOTYPE) 
//ltmvu0HitCheck2                          = 0x00000000; // (Region->GLOBAL) (Type->NOTYPE) 
//ltmvu0SetMatrix                          = 0x00000000; // (Region->GLOBAL) (Type->NOTYPE) 
//ltmvu0VertexCheck                        = 0x00000000; // (Region->GLOBAL) (Type->NOTYPE) 
_align_segment                           = 0x00000080; // (Region->GLOBAL) (Type->NOTYPE) 
_stack_size                              = 0x00010000; // (Region->GLOBAL) (Type->NOTYPE) 
__data_size                              = 0x00038054; // (Region->GLOBAL) (Type->NOTYPE) 
__bss_size                               = 0x000E1824; // (Region->GLOBAL) (Type->NOTYPE) 

// Text Section
// SDK/Lib functions start
//ENTRYPOINT                               = 0x00100008; // (Region->GLOBAL) (Type->NOTYPE) 
__start                                  = 0x00100008; // type:func (Region->GLOBAL) (Type->NOTYPE) 
_exit                                    = 0x001000B8; // (Region->GLOBAL) (Type->NOTYPE) 
_root                                    = 0x001000C0; // (Region->LOCAL)  (Type->NOTYPE) 
_f_ulltof                                = 0x001000D0; // type:func    (Size->60)    
_dpflt                                   = 0x00100110; // type:func    (Size->32)    
_dpfgt                                   = 0x00100130; // type:func    (Size->32)    
sceGsResetGraph                          = 0x00100150; // type:func    (Size->400)   
sceGsGetGParam                           = 0x001002E0; // type:func    (Size->12)    
sceGsResetPath                           = 0x001002F0; // type:func    (Size->104)   
sceGsSetDefDispEnv                       = 0x00100358; // type:func    (Size->624)   
sceGsPutDispEnv                          = 0x001005C8; // type:func    (Size->188)   
sceGszbufaddr                            = 0x00100688; // type:func    (Size->200)   
sceGsSetDefDrawEnv                       = 0x00100750; // type:func    (Size->484)   
sceGsSetDefClear                         = 0x00100938; // type:func    (Size->260)   
sceGsPutDrawEnv                          = 0x00100A40; // type:func    (Size->232)   
sceGsSyncV                               = 0x00100B28; // type:func    (Size->148)   
sceGsSyncPath                            = 0x00100BC0; // type:func    (Size->788)   
sceGsSetDefLoadImage                     = 0x00100ED8; // type:func    (Size->484)   
sceGsSetDefStoreImage                    = 0x001010C0; // type:func    (Size->320)   
sceGsExecLoadImage                       = 0x00101200; // type:func    (Size->380)   
sceGsExecStoreImage                      = 0x00101380; // type:func    (Size->1676)  
sceGsSetHalfOffset                       = 0x00101A10; // type:func    (Size->136)   
sceGsSetDefDrawEnv2                      = 0x00101A98; // type:func    (Size->480)   
sceGsSetHalfOffset2                      = 0x00101C78; // type:func    (Size->136)   
sceGsSetDefDBuffDc                       = 0x00101D00; // type:func    (Size->740)   
sceGsSwapDBuffDc                         = 0x00101FE8; // type:func    (Size->92)    
memclr                                   = 0x00102048; // type:func    (Size->52)    
sceDmaGetChan                            = 0x00102080; // type:func    (Size->40)    
sceDmaReset                              = 0x001020A8; // type:func    (Size->220)   
sceDmaDebug                              = 0x00102188; // type:func    (Size->16)    
sceDmaPutEnv                             = 0x00102198; // type:func    (Size->472)   
sceDmaGetEnv                             = 0x00102370; // type:func    (Size->56)    
sceDmaPutStallAddr                       = 0x001023A8; // type:func    (Size->40)    
sceDmaSend                               = 0x001023D0; // type:func    (Size->216)   
sceDmaSendN                              = 0x001024A8; // type:func    (Size->228)   
sceDmaSendI                              = 0x00102590; // type:func    (Size->228)   
sceDmaRecv                               = 0x00102678; // type:func    (Size->196)   
sceDmaRecvN                              = 0x00102740; // type:func    (Size->236)   
sceDmaRecvI                              = 0x00102830; // type:func    (Size->240)   
sceDmaSync                               = 0x00102920; // type:func    (Size->196)   
sceDmaWatch                              = 0x001029E8; // type:func    (Size->208)   
sceDmaPause                              = 0x00102AB8; // type:func    (Size->72)    
sceDmaRestart                            = 0x00102B00; // type:func    (Size->20)    
sceGifPkInit                             = 0x00102B18; // type:func    (Size->16)    
sceGifPkReset                            = 0x00102B28; // type:func    (Size->16)    
sceGifPkTerminate                        = 0x00102B38; // type:func    (Size->88)    
sceGifPkCnt                              = 0x00102B90; // type:func    (Size->116)   
sceGifPkRef                              = 0x00102C08; // type:func    (Size->152)   
sceGifPkEnd                              = 0x00102CA0; // type:func    (Size->116)   
sceGifPkReserve                          = 0x00102D18; // type:func    (Size->20)    
sceGifPkOpenGifTag                       = 0x00102D30; // type:func    (Size->24)    
sceGifPkCloseGifTag                      = 0x00102D48; // type:func    (Size->164)   
sceGifPkAddGsAD                          = 0x00102DF0; // type:func    (Size->36)    
sceGifPkRefLoadImage                     = 0x00102E18; // type:func    (Size->448)   
sceVif1PkInit                            = 0x00102FD8; // type:func    (Size->16)    
sceVif1PkReset                           = 0x00102FE8; // type:func    (Size->16)    
sceVif1PkTerminate                       = 0x00102FF8; // type:func    (Size->88)    
sceVif1PkCnt                             = 0x00103050; // type:func    (Size->88)    
sceVif1PkRef                             = 0x001030A8; // type:func    (Size->152)   
sceVif1PkCall                            = 0x00103140; // type:func    (Size->112)   
sceVif1PkEnd                             = 0x001031B0; // type:func    (Size->88)    
sceVif1PkOpenDirectCode                  = 0x00103208; // type:func    (Size->88)    
sceVif1PkCloseDirectCode                 = 0x00103260; // type:func    (Size->44)    
sceVif1PkOpenGifTag                      = 0x00103290; // type:func    (Size->24)    
sceVif1PkCloseGifTag                     = 0x001032A8; // type:func    (Size->164)   
sceVif1PkReserve                         = 0x00103350; // type:func    (Size->20)    
sceVif1PkAlign                           = 0x00103368; // type:func    (Size->124)   
sceVif1PkAddCode                         = 0x001033E8; // type:func    (Size->20)    
sceVif1PkAddGsAD                         = 0x00103400; // type:func    (Size->48)    
sceVif1PkRefLoadImage                    = 0x00103430; // type:func    (Size->488)   
sceVif1PkOpenDirectHLCode                = 0x00103618; // type:func    (Size->88)    
sceVif1PkCloseDirectHLCode               = 0x00103670; // type:func    (Size->44)    
sceVu0ApplyMatrix                        = 0x001036A0; // type:func    (Size->44)    
sceVu0MulMatrix                          = 0x001036D0; // type:func    (Size->68)    
_loopMulMatrix                           = 0x001036E4; // (Region->LOCAL)  (Type->NOTYPE) 
sceVu0OuterProduct                       = 0x00103718; // type:func    (Size->28)    
sceVu0InnerProduct                       = 0x00103738; // type:func    (Size->36)    
sceVu0Normalize                          = 0x00103760; // type:func    (Size->52)    
sceVu0TransposeMatrix                    = 0x00103798; // type:func    (Size->68)    
sceVu0InversMatrix                       = 0x001037E0; // type:func    (Size->108)   
sceVu0DivVector                          = 0x00103850; // type:func    (Size->32)    
sceVu0DivVectorXYZ                       = 0x00103870; // type:func    (Size->32)    
sceVu0InterVector                        = 0x00103890; // type:func    (Size->40)    
sceVu0AddVector                          = 0x001038B8; // type:func    (Size->20)    
sceVu0SubVector                          = 0x001038D0; // type:func    (Size->20)    
sceVu0MulVector                          = 0x001038E8; // type:func    (Size->20)    
sceVu0ScaleVector                        = 0x00103900; // type:func    (Size->24)    
sceVu0TransMatrix                        = 0x00103918; // type:func    (Size->44)    
sceVu0CopyVector                         = 0x00103948; // type:func    (Size->12)    
sceVu0CopyMatrix                         = 0x00103958; // type:func    (Size->36)    
sceVu0FTOI4Vector                        = 0x00103980; // type:func    (Size->16)    
sceVu0FTOI0Vector                        = 0x00103990; // type:func    (Size->16)    
sceVu0ITOF4Vector                        = 0x001039A0; // type:func    (Size->16)    
sceVu0ITOF0Vector                        = 0x001039B0; // type:func    (Size->16)    
sceVu0UnitMatrix                         = 0x001039C0; // type:func    (Size->40)    
_sceVu0ecossin                           = 0x001039E8; // type:func    (Size->116)   
_ecossin_01                              = 0x00103A50; // (Region->LOCAL)  (Type->NOTYPE) 
_ecossin_02                              = 0x00103A54; // (Region->LOCAL)  (Type->NOTYPE) 
sceVu0RotMatrixZ                         = 0x00103A60; // type:func    (Size->164)   
_RotMatrixZ_01                           = 0x00103A88; // (Region->LOCAL)  (Type->NOTYPE) 
_RotMatrixZ_02                           = 0x00103A90; // (Region->LOCAL)  (Type->NOTYPE) 
_loopRotMatrixZ                          = 0x00103AD4; // (Region->LOCAL)  (Type->NOTYPE) 
sceVu0RotMatrixX                         = 0x00103B08; // type:func    (Size->168)   
_RotMatrixX_01                           = 0x00103B30; // (Region->LOCAL)  (Type->NOTYPE) 
_RotMatrixX_02                           = 0x00103B38; // (Region->LOCAL)  (Type->NOTYPE) 
_loopRotMatrixX                          = 0x00103B80; // (Region->LOCAL)  (Type->NOTYPE) 
sceVu0RotMatrixY                         = 0x00103BB0; // type:func    (Size->168)   
_RotMatrixY_01                           = 0x00103BD8; // (Region->LOCAL)  (Type->NOTYPE) 
_RotMatrixY_02                           = 0x00103BE0; // (Region->LOCAL)  (Type->NOTYPE) 
_loopRotMatrixY                          = 0x00103C28; // (Region->LOCAL)  (Type->NOTYPE) 
sceVu0RotMatrix                          = 0x00103C58; // type:func    (Size->80)    
sceVu0ClampVector                        = 0x00103CA8; // type:func    (Size->36)    
sceVu0CameraMatrix                       = 0x00103CD0; // type:func    (Size->176)   
sceVu0NormalLightMatrix                  = 0x00103D80; // type:func    (Size->192)   
sceVu0LightColorMatrix                   = 0x00103E40; // type:func    (Size->104)   
sceVu0ViewScreenMatrix                   = 0x00103EA8; // type:func    (Size->260)   
sceVu0DropShadowMatrix                   = 0x00103FB0; // type:func    (Size->400)   
sceVu0RotTransPersN                      = 0x00104140; // type:func    (Size->88)    
_rotTPN_loop                             = 0x00104150; // (Region->LOCAL)  (Type->NOTYPE) 
_rotTPN                                  = 0x0010417C; // (Region->LOCAL)  (Type->NOTYPE) 
sceVu0RotTransPers                       = 0x00104198; // type:func    (Size->68)    
_rotTP                                   = 0x001041D4; // (Region->LOCAL)  (Type->NOTYPE) 
sceVu0CopyVectorXYZ                      = 0x001041E0; // type:func    (Size->28)    
sceVu0InterVectorXYZ                     = 0x00104200; // type:func    (Size->44)    
sceVu0ScaleVectorXYZ                     = 0x00104230; // type:func    (Size->24)    
sceVu0ClipScreen                         = 0x00104248; // type:func    (Size->72)    
sceVu0ClipScreen3                        = 0x00104290; // type:func    (Size->96)    
sceVu0ClipAll                            = 0x001042F0; // type:func    (Size->140)   
loop_clip_all                            = 0x00104314; // (Region->LOCAL)  (Type->NOTYPE) 
end_clip_all                             = 0x00104374; // (Region->LOCAL)  (Type->NOTYPE) 
sceVpu0Reset                             = 0x00104380; // type:func    (Size->92)    
//__gnu_compiled_c                         = 0x001043E0; // (Region->LOCAL)  (Type->NOTYPE) 
_motionComp0                             = 0x001043E0; // type:func    (Size->820)   
//gcc2_compiled.                         = 0x001043E0; // (Region->LOCAL)  (Type->NOTYPE) 
_getAllRefs                              = 0x00104718; // type:func    (Size->1712)  
_getRef0                                 = 0x00104DC8; // type:func    (Size->1056)  
_doMC                                    = 0x001051E8; // type:func    (Size->396)   
_rix_000                                 = 0x00105378; // type:func    (Size->116)   
_ri0_000                                 = 0x001053F0; // type:func    (Size->148)   
_rix_001                                 = 0x00105488; // type:func    (Size->180)   
_ri0_001                                 = 0x00105540; // type:func    (Size->204)   
_rix_010                                 = 0x00105610; // type:func    (Size->172)   
_ri0_010                                 = 0x001056C0; // type:func    (Size->184)   
_rix_011                                 = 0x00105778; // type:func    (Size->248)   
_ri0_011                                 = 0x00105870; // type:func    (Size->252)   
_rix_100                                 = 0x00105970; // type:func    (Size->164)   
_ri0_100                                 = 0x00105A18; // type:func    (Size->172)   
_rix_101                                 = 0x00105AC8; // type:func    (Size->228)   
_ri0_101                                 = 0x00105BB0; // type:func    (Size->228)   
_rix_110                                 = 0x00105C98; // type:func    (Size->220)   
_ri0_110                                 = 0x00105D78; // type:func    (Size->208)   
_rix_111                                 = 0x00105E48; // type:func    (Size->296)   
_ri0_111                                 = 0x00105F70; // type:func    (Size->276)   
_copyAddRefImage                         = 0x00106088; // type:func    (Size->92)    
_copyRefImage                            = 0x001060E8; // type:func    (Size->96)    
_maxval                                  = 0x00106130; // (Region->LOCAL)  (Type->NOTYPE) 
_ipuSetMPEG1                             = 0x00106148; // type:func    (Size->40)    
_waitBdecOut                             = 0x00106170; // type:func    (Size->484)   
_dmVector                                = 0x00106358; // type:func    (Size->28)    
_dualPrimeVector                         = 0x00106378; // type:func    (Size->392)   
_mbAddressIncrement                      = 0x00106500; // type:func    (Size->272)   
_pictureData0                            = 0x00106610; // type:func    (Size->292)   
_sliceA0                                 = 0x00106738; // type:func    (Size->292)   
_slice0                                  = 0x00106860; // type:func    (Size->512)   
_skipMB0                                 = 0x00106A60; // type:func    (Size->204)   
_decMB0                                  = 0x00106B30; // type:func    (Size->1316)  
_decode_motion_vector                    = 0x00107058; // type:func    (Size->136)   
_motionVectors                           = 0x001070E0; // type:func    (Size->380)   
_motionVector                            = 0x00107260; // type:func    (Size->316)   
_sendIpuCommand                          = 0x001073A0; // type:func    (Size->48)    
_waitIpuIdle                             = 0x001073D0; // type:func    (Size->164)   
_waitIpuIdle64                           = 0x00107478; // type:func    (Size->176)   
_ipuVdec                                 = 0x00107528; // type:func    (Size->436)   
_peepBit                                 = 0x001076E0; // type:func    (Size->308)   
_flushBuf                                = 0x00107818; // type:func    (Size->276)   
_nextBit                                 = 0x00107930; // type:func    (Size->360)   
_nextStartCode                           = 0x00107A98; // type:func    (Size->104)   
_sliceB                                  = 0x00107B00; // type:func    (Size->108)   
_nextHeader                              = 0x00107B70; // type:func    (Size->292)   
_pictureHeader                           = 0x00107C98; // type:func    (Size->204)   
_extensionAndUserdata                    = 0x00107D68; // type:func    (Size->176)   
_pictureCodingExtension                  = 0x00107E18; // type:func    (Size->556)   
_extrainfo                               = 0x00108048; // type:func    (Size->52)    
_updateTempTackData                      = 0x00108080; // type:func    (Size->224)   
_groupOfPicturesHeader                   = 0x00108160; // type:func    (Size->228)   
_quantMatrixExtension                    = 0x00108248; // type:func    (Size->172)   
_pictureDisplayExtension                 = 0x001082F8; // type:func    (Size->240)   
_copyrightExtension                      = 0x001083E8; // type:func    (Size->172)   
_decPicture                              = 0x00108498; // type:func    (Size->224)   
_outputFrame                             = 0x00108578; // type:func    (Size->184)   
_updateRefImage                          = 0x00108630; // type:func    (Size->988)   
_isOutSizeOK                             = 0x00108A10; // type:func    (Size->156)   
_cpr8                                    = 0x00108AB0; // type:func    (Size->492)   
_markOutput                              = 0x00108CA0; // type:func    (Size->56)    
_getPtsDtsFlags                          = 0x00108CD8; // type:func    (Size->404)   
_dispRefImage                            = 0x00108E70; // type:func    (Size->280)   
_dispRefImageField                       = 0x00108F88; // type:func    (Size->448)   
//__gnu_compiled_c                         = 0x00109148; // (Region->LOCAL)  (Type->NOTYPE) 
_doCSC                                   = 0x00109148; // type:func    (Size->232)   
//gcc2_compiled.                         = 0x00109148; // (Region->LOCAL)  (Type->NOTYPE) 
_ch3dmaCSC                               = 0x00109230; // type:func    (Size->328)   
_doCSC2                                  = 0x00109378; // type:func    (Size->448)   
_ch4dma                                  = 0x00109538; // type:func    (Size->212)   
_csc_storeRefImage                       = 0x00109610; // type:func    (Size->596)   
//__gnu_compiled_c                         = 0x00109868; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x00109868; // (Region->LOCAL)  (Type->NOTYPE) 
_sysbitInit                              = 0x00109868; // type:func    (Size->52)    
_sysbitNext                              = 0x001098A0; // type:func    (Size->28)    
_sysbitFlush                             = 0x001098C0; // type:func    (Size->152)   
_sysbitGet                               = 0x00109958; // type:func    (Size->76)    
_sysbitMarker                            = 0x001099A8; // type:func    (Size->68)    
_sysbitJump                              = 0x001099F0; // type:func    (Size->84)    
_sysbitPtr                               = 0x00109A48; // type:func    (Size->44)    
//__gnu_compiled_c                         = 0x00109A78; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x00109A78; // (Region->LOCAL)  (Type->NOTYPE) 
_type2id                                 = 0x00109A78; // type:func    (Size->136)   
_id2type                                 = 0x00109B00; // type:func    (Size->508)   
sceMpegDemuxPssRing                      = 0x00109D00; // type:func    (Size->752)   
sceMpegDemuxPss                          = 0x00109FF0; // type:func    (Size->32)    
sceMpegAddStrCallback                    = 0x0010A010; // type:func    (Size->244)   
_pack_header                             = 0x0010A108; // type:func    (Size->336)   
_system_header                           = 0x0010A258; // type:func    (Size->108)   
_PES_packet                              = 0x0010A2C8; // type:func    (Size->1416)  
//__gnu_compiled_c                         = 0x0010A850; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0010A850; // (Region->LOCAL)  (Type->NOTYPE) 
sceMpegInit                              = 0x0010A850; // type:func    (Size->156)   
sceMpegCreate                            = 0x0010A8F0; // type:func    (Size->572)   
sceMpegDelete                            = 0x0010AB30; // type:func    (Size->8)     
sceMpegAddBs                             = 0x0010AB38; // type:func    (Size->56)    
sceMpegGetPicture                        = 0x0010AB70; // type:func    (Size->72)    
sceMpegGetPictureRAW8                    = 0x0010ABB8; // type:func    (Size->68)    
sceMpegGetPictureRAW8xy                  = 0x0010AC00; // type:func    (Size->80)    
sceMpegSetDecodeMode                     = 0x0010AC50; // type:func    (Size->20)    
sceMpegGetDecodeMode                     = 0x0010AC68; // type:func    (Size->32)    
sceMpegIsEnd                             = 0x0010AC88; // type:func    (Size->12)    
sceMpegIsRefBuffEmpty                    = 0x0010AC98; // type:func    (Size->16)    
sceMpegReset                             = 0x0010ACA8; // type:func    (Size->64)    
sceMpegClearRefBuff                      = 0x0010ACE8; // type:func    (Size->104)   
sceMpegAddCallback                       = 0x0010AD50; // type:func    (Size->36)    
_dispatchMpegCallback                    = 0x0010AD78; // type:func    (Size->80)    
_dispatchMpegCbNodata                    = 0x0010ADC8; // type:func    (Size->36)    
sceMpegSetDefaultPtsGap                  = 0x0010ADF0; // type:func    (Size->20)    
sceMpegResetDefaultPtsGap                = 0x0010AE08; // type:func    (Size->16)    
sceMpegSetImageBuff                      = 0x0010AE18; // type:func    (Size->20)    
sceMpegDispWidth                         = 0x0010AE30; // type:func    (Size->12)    
sceMpegDispHeight                        = 0x0010AE40; // type:func    (Size->12)    
sceMpegDispCenterOffX                    = 0x0010AE50; // type:func    (Size->12)    
sceMpegDispCenterOffY                    = 0x0010AE60; // type:func    (Size->12)    
sceSetBrokenLink                         = 0x0010AE70; // type:func    (Size->16)    
sceSetPtm                                = 0x0010AE80; // type:func    (Size->20)    
_alalcInit                               = 0x0010AE98; // type:func    (Size->20)    
_alalcSetDynamic                         = 0x0010AEB0; // type:func    (Size->12)    
_alalcFree                               = 0x0010AEC0; // type:func    (Size->12)    
_alalcAlloc                              = 0x0010AED0; // type:func    (Size->104)   
_alalcRest                               = 0x0010AF38; // type:func    (Size->24)    
_getpic                                  = 0x0010AF50; // type:func    (Size->388)   
_decodeOrSkipFrame                       = 0x0010B0D8; // type:func    (Size->292)   
_decodeOrSkip                            = 0x0010B200; // type:func    (Size->60)    
_decodeOrSkipField                       = 0x0010B240; // type:func    (Size->368)   
_sceMpegFlush                            = 0x0010B3B0; // type:func    (Size->112)   
//__gnu_compiled_c                         = 0x0010B420; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0010B420; // (Region->LOCAL)  (Type->NOTYPE) 
_initSeqAgain                            = 0x0010B420; // type:func    (Size->16)    
_lastFrame                               = 0x0010B430; // type:func    (Size->132)   
_clearOnce                               = 0x0010B4B8; // type:func    (Size->76)    
_clearEach                               = 0x0010B508; // type:func    (Size->196)   
_ErrMessage                              = 0x0010B5D0; // type:func    (Size->16)    
_Error1                                  = 0x0010B5E0; // type:func    (Size->44)    
_Error                                   = 0x0010B610; // type:func    (Size->88)    
_sendDataToIPU                           = 0x0010B668; // type:func    (Size->212)   
_RefImageInit                            = 0x0010B740; // type:func    (Size->32)    
_sequenceHeader                          = 0x0010B760; // type:func    (Size->340)   
_initSeq                                 = 0x0010B8B8; // type:func    (Size->836)   
_initRefImages                           = 0x0010BC00; // type:func    (Size->232)   
_setDefaultQM                            = 0x0010BCE8; // type:func    (Size->192)   
_sequenceExtension                       = 0x0010BDA8; // type:func    (Size->356)   
_sequenceDisplayExtension                = 0x0010BF10; // type:func    (Size->160)   
_sequenceScalableExtension               = 0x0010BFB0; // type:func    (Size->12)    
_unknown_extension                       = 0x0010BFC0; // type:func    (Size->12)    
_pictureSpatialScalableExtension         = 0x0010BFD0; // type:func    (Size->12)    
_pictureTemporalScalableExtension        = 0x0010BFE0; // type:func    (Size->12)    
//__gnu_compiled_c                         = 0x0010BFF0; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0010BFF0; // (Region->LOCAL)  (Type->NOTYPE) 
_defStopDMA                              = 0x0010BFF0; // type:func    (Size->12)    
_defRestartDMA                           = 0x0010C000; // type:func    (Size->12)    
//__gnu_compiled_c                         = 0x0010C010; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0010C010; // (Region->LOCAL)  (Type->NOTYPE) 
//setD3_CHCR                               = 0x0010C010; // type:func    (Size->100)   
//setD4_CHCR                               = 0x0010C078; // type:func    (Size->100)   
sceIpuStopDMA                            = 0x0010C0E0; // type:func    (Size->228)   
sceIpuRestartDMA                         = 0x0010C1C8; // type:func    (Size->336)   
sceIpuSync                               = 0x0010C318; // type:func    (Size->104)   
//__gnu_compiled_c                         = 0x0010C380; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0010C380; // (Region->LOCAL)  (Type->NOTYPE) 
//setD4_CHCR                               = 0x0010C380; // type:func    (Size->100)   
sceIpuInit                               = 0x0010C3E8; // type:func    (Size->568)   
RFU000_FullReset                         = 0x0010C640; // type:func    (Size->16)    
ResetEE                                  = 0x0010C650; // type:func    (Size->16)    
SetGsCrt                                 = 0x0010C660; // type:func    (Size->16)    
RFU003                                   = 0x0010C670; // type:func    (Size->16)    
Exit                                     = 0x0010C680; // type:func    (Size->16)    
RFU005                                   = 0x0010C690; // type:func    (Size->16)    
LoadExecPS2                              = 0x0010C6A0; // type:func    (Size->16)    
ExecPS2                                  = 0x0010C6B0; // type:func    (Size->16)    
RFU008                                   = 0x0010C6C0; // type:func    (Size->16)    
RFU009                                   = 0x0010C6D0; // type:func    (Size->16)    
AddSbusIntcHandler                       = 0x0010C6E0; // type:func    (Size->16)    
RemoveSbusIntcHandler                    = 0x0010C6F0; // type:func    (Size->16)    
Interrupt2Iop                            = 0x0010C700; // type:func    (Size->16)    
SetVTLBRefillHandler                     = 0x0010C710; // type:func    (Size->16)    
SetVCommonHandler                        = 0x0010C720; // type:func    (Size->16)    
SetVInterruptHandler                     = 0x0010C730; // type:func    (Size->16)    
AddIntcHandler                           = 0x0010C740; // type:func    (Size->16)    
AddIntcHandler2                          = 0x0010C750; // type:func    (Size->16)    
RemoveIntcHandler                        = 0x0010C760; // type:func    (Size->16)    
AddDmacHandler                           = 0x0010C770; // type:func    (Size->16)    
AddDmacHandler2                          = 0x0010C780; // type:func    (Size->16)    
RemoveDmacHandler                        = 0x0010C790; // type:func    (Size->16)    
_EnableIntc                              = 0x0010C7A0; // type:func    (Size->16)    
_DisableIntc                             = 0x0010C7B0; // type:func    (Size->16)    
_EnableDmac                              = 0x0010C7C0; // type:func    (Size->16)    
_DisableDmac                             = 0x0010C7D0; // type:func    (Size->16)    
SetAlarm                                 = 0x0010C7E0; // type:func    (Size->16)    
ReleaseAlarm                             = 0x0010C7F0; // type:func    (Size->16)    
_iEnableIntc                             = 0x0010C800; // type:func    (Size->16)    
_iDisableIntc                            = 0x0010C810; // type:func    (Size->16)    
_iEnableDmac                             = 0x0010C820; // type:func    (Size->16)    
_iDisableDmac                            = 0x0010C830; // type:func    (Size->16)    
iSetAlarm                                = 0x0010C840; // type:func    (Size->16)    
iReleaseAlarm                            = 0x0010C850; // type:func    (Size->16)    
CreateThread                             = 0x0010C860; // type:func    (Size->16)    
DeleteThread                             = 0x0010C870; // type:func    (Size->16)    
StartThread                              = 0x0010C880; // type:func    (Size->16)    
ExitThread                               = 0x0010C890; // type:func    (Size->16)    
ExitDeleteThread                         = 0x0010C8A0; // type:func    (Size->16)    
TerminateThread                          = 0x0010C8B0; // type:func    (Size->16)    
iTerminateThread                         = 0x0010C8C0; // type:func    (Size->16)    
DisableDispatchThread                    = 0x0010C8D0; // type:func    (Size->16)    
EnableDispatchThread                     = 0x0010C8E0; // type:func    (Size->16)    
ChangeThreadPriority                     = 0x0010C8F0; // type:func    (Size->16)    
iChangeThreadPriority                    = 0x0010C900; // type:func    (Size->16)    
RotateThreadReadyQueue                   = 0x0010C910; // type:func    (Size->16)    
_iRotateThreadReadyQueue                 = 0x0010C920; // type:func    (Size->16)    
ReleaseWaitThread                        = 0x0010C930; // type:func    (Size->16)    
iReleaseWaitThread                       = 0x0010C940; // type:func    (Size->16)    
GetThreadId                              = 0x0010C950; // type:func    (Size->16)    
ReferThreadStatus                        = 0x0010C960; // type:func    (Size->16)    
iReferThreadStatus                       = 0x0010C970; // type:func    (Size->16)    
SleepThread                              = 0x0010C980; // type:func    (Size->16)    
WakeupThread                             = 0x0010C990; // type:func    (Size->16)    
_iWakeupThread                           = 0x0010C9A0; // type:func    (Size->16)    
CancelWakeupThread                       = 0x0010C9B0; // type:func    (Size->16)    
iCancelWakeupThread                      = 0x0010C9C0; // type:func    (Size->16)    
SuspendThread                            = 0x0010C9D0; // type:func    (Size->16)    
_iSuspendThread                          = 0x0010C9E0; // type:func    (Size->16)    
ResumeThread                             = 0x0010C9F0; // type:func    (Size->16)    
iResumeThread                            = 0x0010CA00; // type:func    (Size->16)    
JoinThread                               = 0x0010CA10; // type:func    (Size->16)    
RFU060                                   = 0x0010CA20; // type:func    (Size->16)    
RFU061                                   = 0x0010CA30; // type:func    (Size->16)    
EndOfHeap                                = 0x0010CA40; // type:func    (Size->16)    
RFU063                                   = 0x0010CA50; // type:func    (Size->16)    
CreateSema                               = 0x0010CA60; // type:func    (Size->16)    
DeleteSema                               = 0x0010CA70; // type:func    (Size->16)    
SignalSema                               = 0x0010CA80; // type:func    (Size->16)    
iSignalSema                              = 0x0010CA90; // type:func    (Size->16)    
WaitSema                                 = 0x0010CAA0; // type:func    (Size->16)    
PollSema                                 = 0x0010CAB0; // type:func    (Size->16)    
iPollSema                                = 0x0010CAC0; // type:func    (Size->16)    
ReferSemaStatus                          = 0x0010CAD0; // type:func    (Size->16)    
iReferSemaStatus                         = 0x0010CAE0; // type:func    (Size->16)    
RFU073                                   = 0x0010CAF0; // type:func    (Size->16)    
SetOsdConfigParam                        = 0x0010CB00; // type:func    (Size->16)    
GetOsdConfigParam                        = 0x0010CB10; // type:func    (Size->16)    
GetGsHParam                              = 0x0010CB20; // type:func    (Size->16)    
GetGsVParam                              = 0x0010CB30; // type:func    (Size->16)    
SetGsHParam                              = 0x0010CB40; // type:func    (Size->16)    
SetGsVParam                              = 0x0010CB50; // type:func    (Size->16)    
RFU080_CreateEventFlag                   = 0x0010CB60; // type:func    (Size->16)    
RFU081_DeleteEventFlag                   = 0x0010CB70; // type:func    (Size->16)    
RFU082_SetEventFlag                      = 0x0010CB80; // type:func    (Size->16)    
RFU083_iSetEventFlag                     = 0x0010CB90; // type:func    (Size->16)    
RFU084_ClearEventFlag                    = 0x0010CBA0; // type:func    (Size->16)    
RFU085_iClearEventFlag                   = 0x0010CBB0; // type:func    (Size->16)    
RFU086_WaitEvnetFlag                     = 0x0010CBC0; // type:func    (Size->16)    
RFU087_PollEvnetFlag                     = 0x0010CBD0; // type:func    (Size->16)    
RFU088_iPollEvnetFlag                    = 0x0010CBE0; // type:func    (Size->16)    
RFU089_ReferEventFlagStatus              = 0x0010CBF0; // type:func    (Size->16)    
RFU090_iReferEventFlagStatus             = 0x0010CC00; // type:func    (Size->16)    
RFU091                                   = 0x0010CC10; // type:func    (Size->16)    
EnableIntcHandler                        = 0x0010CC20; // type:func    (Size->16)    
iEnableIntcHandler                       = 0x0010CC30; // type:func    (Size->16)    
DisableIntcHandler                       = 0x0010CC40; // type:func    (Size->16)    
iDisableIntcHandler                      = 0x0010CC50; // type:func    (Size->16)    
EnableDmacHandler                        = 0x0010CC60; // type:func    (Size->16)    
iEnableDmacHandler                       = 0x0010CC70; // type:func    (Size->16)    
DisableDmacHandler                       = 0x0010CC80; // type:func    (Size->16)    
iDisableDmacHandler                      = 0x0010CC90; // type:func    (Size->16)    
KSeg0                                    = 0x0010CCA0; // type:func    (Size->16)    
EnableCache                              = 0x0010CCB0; // type:func    (Size->16)    
DisableCache                             = 0x0010CCC0; // type:func    (Size->16)    
GetCop0                                  = 0x0010CCD0; // type:func    (Size->16)    
FlushCache                               = 0x0010CCE0; // type:func    (Size->16)    
CpuConfig                                = 0x0010CCF0; // type:func    (Size->16)    
iGetCop0                                 = 0x0010CD00; // type:func    (Size->16)    
iFlushCache                              = 0x0010CD10; // type:func    (Size->16)    
iCpuConfig                               = 0x0010CD20; // type:func    (Size->16)    
sceSifStopDma                            = 0x0010CD30; // type:func    (Size->16)    
SetCPUTimerHandler                       = 0x0010CD40; // type:func    (Size->16)    
SetCPUTimer                              = 0x0010CD50; // type:func    (Size->16)    
SetOsdConfigParam2                       = 0x0010CD60; // type:func    (Size->16)    
GetOsdConfigParam2                       = 0x0010CD70; // type:func    (Size->16)    
GsGetIMR                                 = 0x0010CD80; // type:func    (Size->16)    
iGsGetIMR                                = 0x0010CD90; // type:func    (Size->16)    
GsPutIMR                                 = 0x0010CDA0; // type:func    (Size->16)    
iGsPutIMR                                = 0x0010CDB0; // type:func    (Size->16)    
SetPgifHandler                           = 0x0010CDC0; // type:func    (Size->16)    
SetVSyncFlag                             = 0x0010CDD0; // type:func    (Size->16)    
RFU116                                   = 0x0010CDE0; // type:func    (Size->16)    
_print                                   = 0x0010CDF0; // type:func    (Size->16)    
sceSifDmaStat                            = 0x0010CE00; // type:func    (Size->16)    
isceSifDmaStat                           = 0x0010CE10; // type:func    (Size->16)    
sceSifSetDma                             = 0x0010CE20; // type:func    (Size->16)    
isceSifSetDma                            = 0x0010CE30; // type:func    (Size->16)    
sceSifSetDChain                          = 0x0010CE40; // type:func    (Size->16)    
isceSifSetDChain                         = 0x0010CE50; // type:func    (Size->16)    
sceSifSetReg                             = 0x0010CE60; // type:func    (Size->16)    
sceSifGetReg                             = 0x0010CE70; // type:func    (Size->16)    
ExecOSD                                  = 0x0010CE80; // type:func    (Size->16)    
Deci2Call                                = 0x0010CE90; // type:func    (Size->16)    
PSMode                                   = 0x0010CEA0; // type:func    (Size->16)    
MachineType                              = 0x0010CEB0; // type:func    (Size->16)    
GetMemorySize                            = 0x0010CEC0; // type:func    (Size->16)    
//__gnu_compiled_c                         = 0x0010CED0; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0010CED0; // (Region->LOCAL)  (Type->NOTYPE) 
sceResetttyinit                          = 0x0010CED0; // type:func    (Size->12)    
VSync                                    = 0x0010CEE0; // type:func    (Size->64)    
VSync2                                   = 0x0010CF20; // type:func    (Size->96)    
write                                    = 0x0010CF80; // type:func    (Size->124)   
read                                     = 0x0010D000; // type:func    (Size->116)   
open                                     = 0x0010D078; // type:func    (Size->40)    
close                                    = 0x0010D0A0; // type:func    (Size->8)     
ioctl                                    = 0x0010D0A8; // type:func    (Size->8)     
lseek                                    = 0x0010D0B0; // type:func    (Size->8)     
sbrk                                     = 0x0010D0B8; // type:func    (Size->172)   
isatty                                   = 0x0010D168; // type:func    (Size->8)     
fstat                                    = 0x0010D170; // type:func    (Size->20)    
getpid                                   = 0x0010D188; // type:func    (Size->8)     
kill                                     = 0x0010D190; // type:func    (Size->40)    
stat                                     = 0x0010D1B8; // type:func    (Size->40)    
unlink                                   = 0x0010D1E0; // type:func    (Size->40)    
//__gnu_compiled_c                         = 0x0010D208; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0010D208; // (Region->LOCAL)  (Type->NOTYPE) 
_sceSDC                                  = 0x0010D208; // type:func    (Size->164)   
SyncDCache                               = 0x0010D2B0; // type:func    (Size->124)   
iSyncDCache                              = 0x0010D330; // type:func    (Size->20)    
_sceIDC                                  = 0x0010D348; // type:func    (Size->164)   
InvalidDCache                            = 0x0010D3F0; // type:func    (Size->124)   
iInvalidDCache                           = 0x0010D470; // type:func    (Size->20)    
//__gnu_compiled_c                         = 0x0010D488; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0010D488; // (Region->LOCAL)  (Type->NOTYPE) 
DisableIntc                              = 0x0010D488; // type:func    (Size->104)   
EnableIntc                               = 0x0010D4F0; // type:func    (Size->104)   
DisableDmac                              = 0x0010D558; // type:func    (Size->104)   
EnableDmac                               = 0x0010D5C0; // type:func    (Size->104)   
iEnableIntc                              = 0x0010D628; // type:func    (Size->32)    
iDisableIntc                             = 0x0010D648; // type:func    (Size->32)    
iEnableDmac                              = 0x0010D668; // type:func    (Size->32)    
iDisableDmac                             = 0x0010D688; // type:func    (Size->32)    
setup                                    = 0x0010D6A8; // type:func    (Size->16)    
Copy                                     = 0x0010D6B8; // type:func    (Size->16)    
kCopy                                    = 0x0010D6C8; // type:func    (Size->56)    
GetEntryAddress                          = 0x0010D700; // type:func    (Size->16)    
InitAlarm                                = 0x0010D710; // type:func    (Size->212)   
//__gnu_compiled_c                         = 0x0010D7E8; // (Region->LOCAL)  (Type->NOTYPE) 
topThread                                = 0x0010D7E8; // type:func    (Size->216)   
//gcc2_compiled.                         = 0x0010D7E8; // (Region->LOCAL)  (Type->NOTYPE) 
InitThread                               = 0x0010D8C0; // type:func    (Size->212)   
iWakeupThread                            = 0x0010D998; // type:func    (Size->148)   
iRotateThreadReadyQueue                  = 0x0010DA30; // type:func    (Size->124)   
iSuspendThread                           = 0x0010DAB0; // type:func    (Size->152)   
//__gnu_compiled_c                         = 0x0010DB48; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0010DB48; // (Region->LOCAL)  (Type->NOTYPE) 
sceDeci2Open                             = 0x0010DB48; // type:func    (Size->68)    
sceDeci2Close                            = 0x0010DB90; // type:func    (Size->36)    
sceDeci2ReqSend                          = 0x0010DBB8; // type:func    (Size->48)    
sceDeci2Poll                             = 0x0010DBE8; // type:func    (Size->36)    
sceDeci2ExRecv                           = 0x0010DC10; // type:func    (Size->52)    
sceDeci2ExSend                           = 0x0010DC48; // type:func    (Size->52)    
sceDeci2ExReqSend                        = 0x0010DC80; // type:func    (Size->48)    
sceDeci2ExLock                           = 0x0010DCB0; // type:func    (Size->36)    
sceDeci2ExUnLock                         = 0x0010DCD8; // type:func    (Size->36)    
kputs                                    = 0x0010DD00; // type:func    (Size->36)    
//__gnu_compiled_c                         = 0x0010DD28; // (Region->LOCAL)  (Type->NOTYPE) 
QueueInit                                = 0x0010DD28; // type:func    (Size->36)    
//gcc2_compiled.                         = 0x0010DD28; // (Region->LOCAL)  (Type->NOTYPE) 
QueuePeekWriteDone                       = 0x0010DD50; // type:func    (Size->60)    
QueuePeekReadDone                        = 0x0010DD90; // type:func    (Size->60)    
sceTtyHandler                            = 0x0010DDD0; // type:func    (Size->404)   
sceTtyWrite                              = 0x0010DF68; // type:func    (Size->336)   
sceTtyRead                               = 0x0010E0B8; // type:func    (Size->208)   
sceTtyInit                               = 0x0010E188; // type:func    (Size->188)   
//__gnu_compiled_c                         = 0x0010E248; // (Region->LOCAL)  (Type->NOTYPE) 
kputchar                                 = 0x0010E248; // type:func    (Size->56)    
//gcc2_compiled.                         = 0x0010E248; // (Region->LOCAL)  (Type->NOTYPE) 
deci2Putchar                             = 0x0010E280; // type:func    (Size->176)   
serialPutchar                            = 0x0010E330; // type:func    (Size->52)    
ftoi                                     = 0x0010E368; // type:func    (Size->144)   
printfloat                               = 0x0010E3F8; // type:func    (Size->360)   
_printf                                  = 0x0010E560; // type:func    (Size->1480)  
kprintf                                  = 0x0010EB28; // type:func    (Size->56)    
scePrintf                                = 0x0010EB60; // type:func    (Size->96)    
//__gnu_compiled_c                         = 0x0010EBC0; // (Region->LOCAL)  (Type->NOTYPE) 
_set_sreg                                = 0x0010EBC0; // type:func    (Size->28)    
//gcc2_compiled.                         = 0x0010EBC0; // (Region->LOCAL)  (Type->NOTYPE) 
_change_addr                             = 0x0010EBE0; // type:func    (Size->12)    
sceSifGetSreg                            = 0x0010EBF0; // type:func    (Size->24)    
sceSifSetSreg                            = 0x0010EC08; // type:func    (Size->28)    
sceSifGetDataTable                       = 0x0010EC28; // type:func    (Size->12)    
sceSifInitCmd                            = 0x0010EC38; // type:func    (Size->640)   
sceSifExitCmd                            = 0x0010EEB8; // type:func    (Size->52)    
sceSifSetCmdBuffer                       = 0x0010EEF0; // type:func    (Size->24)    
sceSifSetSysCmdBuffer                    = 0x0010EF08; // type:func    (Size->24)    
sceSifAddCmdHandler                      = 0x0010EF20; // type:func    (Size->44)    
sceSifRemoveCmdHandler                   = 0x0010EF50; // type:func    (Size->40)    
_sceSifSendCmd                           = 0x0010EF78; // type:func    (Size->308)   
sceSifSendCmd                            = 0x0010F0B0; // type:func    (Size->60)    
isceSifSendCmd                           = 0x0010F0F0; // type:func    (Size->60)    
_sceSifCmdIntrHdlr                       = 0x0010F130; // type:func    (Size->296)   
sceSifWriteBackDCache                    = 0x0010F258; // type:func    (Size->176)   
loop1                                    = 0x0010F28C; // (Region->LOCAL)  (Type->NOTYPE) 
eight                                    = 0x0010F2A8; // (Region->LOCAL)  (Type->NOTYPE) 
loop8                                    = 0x0010F2AC; // (Region->LOCAL)  (Type->NOTYPE) 
last                                     = 0x0010F2FC; // (Region->LOCAL)  (Type->NOTYPE) 
//__gnu_compiled_c                         = 0x0010F308; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0010F308; // (Region->LOCAL)  (Type->NOTYPE) 
sceSifInitRpc                            = 0x0010F308; // type:func    (Size->412)   
sceSifExitRpc                            = 0x0010F4A8; // type:func    (Size->36)    
_sceRpcGetPacket                         = 0x0010F4D0; // type:func    (Size->168)   
_sceRpcFreePacket                        = 0x0010F578; // type:func    (Size->28)    
_sceRpcGetFPacket                        = 0x0010F598; // type:func    (Size->48)    
_sceRpcGetFPacket2                       = 0x0010F5C8; // type:func    (Size->64)    
_request_end                             = 0x0010F608; // type:func    (Size->180)   
_request_rdata                           = 0x0010F6C0; // type:func    (Size->96)    
sceSifGetOtherdata                       = 0x0010F720; // type:func    (Size->344)   
_search_svdata                           = 0x0010F878; // type:func    (Size->76)    
_request_bind                            = 0x0010F8C8; // type:func    (Size->176)   
sceSifBindRpc                            = 0x0010F978; // type:func    (Size->320)   
_request_call                            = 0x0010FAB8; // type:func    (Size->140)   
sceSifCallRpc                            = 0x0010FB48; // type:func    (Size->492)   
sceSifCheckStatRpc                       = 0x0010FD38; // type:func    (Size->60)    
sceSifSetRpcQueue                        = 0x0010FD78; // type:func    (Size->148)   
sceSifRegisterRpc                        = 0x0010FE10; // type:func    (Size->208)   
sceSifRemoveRpc                          = 0x0010FEE0; // type:func    (Size->148)   
sceSifRemoveRpcQueue                     = 0x0010FF78; // type:func    (Size->144)   
sceSifGetNextRequest                     = 0x00110008; // type:func    (Size->88)    
sceSifExecRequest                        = 0x00110060; // type:func    (Size->452)   
sceSifRpcLoop                            = 0x00110228; // type:func    (Size->64)    
//__gnu_compiled_c                         = 0x00110268; // (Region->LOCAL)  (Type->NOTYPE) 
_sceFsIobSemaMK                          = 0x00110268; // type:func    (Size->92)    
//gcc2_compiled.                         = 0x00110268; // (Region->LOCAL)  (Type->NOTYPE) 
new_iob                                  = 0x001102C8; // type:func    (Size->136)   
get_iob                                  = 0x00110350; // type:func    (Size->108)   
_sceFs_Rcv_Intr                          = 0x001103C0; // type:func    (Size->960)   
_sceFsSemInit                            = 0x00110780; // type:func    (Size->76)    
_sceFsWaitS                              = 0x001107D0; // type:func    (Size->44)    
_sceFsSigSema                            = 0x00110800; // type:func    (Size->12)    
scePowerOffHandler                       = 0x00110810; // type:func    (Size->144)   
_sceFs_Poff_Intr                         = 0x001108A0; // type:func    (Size->44)    
sceFsInit                                = 0x001108D0; // type:func    (Size->456)   
_fs_version                              = 0x00110A98; // type:func    (Size->140)   
sceFsReset                               = 0x00110B28; // type:func    (Size->52)    
sceOpen                                  = 0x00110B60; // type:func    (Size->644)   
sceClose                                 = 0x00110DE8; // type:func    (Size->380)   
sceLseek                                 = 0x00110F68; // type:func    (Size->568)   
sceRead                                  = 0x001111A0; // type:func    (Size->624)   
sceWrite                                 = 0x00111410; // type:func    (Size->704)   
sceIoctl                                 = 0x001116D0; // type:func    (Size->844)   
sceIoctl2                                = 0x00111A20; // type:func    (Size->468)   
_sceCallCode                             = 0x00111BF8; // type:func    (Size->420)   
sceRemove                                = 0x00111DA0; // type:func    (Size->28)    
sceMkdir                                 = 0x00111DC0; // type:func    (Size->428)   
sceRmdir                                 = 0x00111F70; // type:func    (Size->28)    
sceFormat                                = 0x00111F90; // type:func    (Size->620)   
sceAddDrv                                = 0x00112200; // type:func    (Size->288)   
sceDelDrv                                = 0x00112320; // type:func    (Size->28)    
sceDopen                                 = 0x00112340; // type:func    (Size->200)   
sceDclose                                = 0x00112408; // type:func    (Size->360)   
sceDread                                 = 0x00112570; // type:func    (Size->344)   
sceGetstat                               = 0x001126C8; // type:func    (Size->416)   
sceChstat                                = 0x00112868; // type:func    (Size->572)   
sceRename                                = 0x00112AA8; // type:func    (Size->496)   
sceChdir                                 = 0x00112C98; // type:func    (Size->28)    
sceSync                                  = 0x00112CB8; // type:func    (Size->408)   
sceMount                                 = 0x00112E50; // type:func    (Size->620)   
sceUmount                                = 0x001130C0; // type:func    (Size->28)    
sceLseek64                               = 0x001130E0; // type:func    (Size->568)   
sceDevctl                                = 0x00113318; // type:func    (Size->560)   
sceSymlink                               = 0x00113548; // type:func    (Size->480)   
sceReadlink                              = 0x00113728; // type:func    (Size->456)   
//__gnu_compiled_c                         = 0x001138F0; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x001138F0; // (Region->LOCAL)  (Type->NOTYPE) 
sceSifInitIopHeap                        = 0x001138F0; // type:func    (Size->136)   
sceSifAllocIopHeap                       = 0x00113978; // type:func    (Size->112)   
sceSifAllocSysMemory                     = 0x001139E8; // type:func    (Size->128)   
sceSifFreeSysMemory                      = 0x00113A68; // type:func    (Size->120)   
sceSifFreeIopHeap                        = 0x00113AE0; // type:func    (Size->28)    
sceSifLoadIopHeap                        = 0x00113B00; // type:func    (Size->240)   
//__gnu_compiled_c                         = 0x00113BF0; // (Region->LOCAL)  (Type->NOTYPE) 
_lf_bind                                 = 0x00113BF0; // type:func    (Size->256)   
//gcc2_compiled.                         = 0x00113BF0; // (Region->LOCAL)  (Type->NOTYPE) 
_lf_version                              = 0x00113CF0; // type:func    (Size->140)   
sceSifLoadFileReset                      = 0x00113D80; // type:func    (Size->56)    
_sceSifLoadModuleBuffer                  = 0x00113DB8; // type:func    (Size->520)   
sceSifStopModule                         = 0x00113FC0; // type:func    (Size->520)   
sceSifUnloadModule                       = 0x001141C8; // type:func    (Size->144)   
sceSifSearchModuleByName                 = 0x00114258; // type:func    (Size->160)   
sceSifSearchModuleByAddress              = 0x001142F8; // type:func    (Size->144)   
sceSifLoadModuleBuffer                   = 0x00114388; // type:func    (Size->28)    
sceSifLoadStartModuleBuffer              = 0x001143A8; // type:func    (Size->28)    
_sceSifLoadModule                        = 0x001143C8; // type:func    (Size->548)   
sceSifLoadModule                         = 0x001145F0; // type:func    (Size->32)    
sceSifLoadStartModule                    = 0x00114610; // type:func    (Size->28)    
_sceSifLoadElfPart                       = 0x00114630; // type:func    (Size->260)   
sceSifLoadElfPart                        = 0x00114738; // type:func    (Size->28)    
sceSifLoadElf                            = 0x00114758; // type:func    (Size->40)    
sceSifGetIopAddr                         = 0x00114780; // type:func    (Size->236)   
sceSifSetIopAddr                         = 0x00114870; // type:func    (Size->220)   
//__gnu_compiled_c                         = 0x00114950; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x00114950; // (Region->LOCAL)  (Type->NOTYPE) 
sceSifResetIop                           = 0x00114950; // type:func    (Size->316)   
sceSifIsAliveIop                         = 0x00114A90; // type:func    (Size->40)    
sceSifSyncIop                            = 0x00114AB8; // type:func    (Size->56)    
sceSifRebootIop                          = 0x00114AF0; // type:func    (Size->272)   
//__gnu_compiled_c                         = 0x00114C00; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x00114C00; // (Region->LOCAL)  (Type->NOTYPE) 
DIntr                                    = 0x00114C00; // type:func    (Size->72)    
EIntr                                    = 0x00114C48; // type:func    (Size->24)    
//__gnu_compiled_c                         = 0x00114C60; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x00114C60; // (Region->LOCAL)  (Type->NOTYPE) 
supplement_crt0                          = 0x00114C60; // type:func    (Size->72)    
_InitSys                                 = 0x00114CA8; // type:func    (Size->36)    
//__gnu_compiled_c                         = 0x00114CD0; // (Region->LOCAL)  (Type->NOTYPE) 
_send_to_iop                             = 0x00114CD0; // type:func    (Size->304)   
//gcc2_compiled.                         = 0x00114CD0; // (Region->LOCAL)  (Type->NOTYPE) 
scePadInit                               = 0x00114E00; // type:func    (Size->320)   
scePadInit2                              = 0x00114F40; // type:func    (Size->156)   
scePadEnd                                = 0x00114FE0; // type:func    (Size->128)   
scePadPortOpen                           = 0x00115060; // type:func    (Size->484)   
scePadPortClose                          = 0x00115248; // type:func    (Size->184)   
scePadGetDmaStr                          = 0x00115300; // type:func    (Size->96)    
scePadGetFrameCount                      = 0x00115360; // type:func    (Size->80)    
scePadRead                               = 0x001153B0; // type:func    (Size->124)   
scePadGetState                           = 0x00115430; // type:func    (Size->120)   
scePadStateIntToStr                      = 0x001154A8; // type:func    (Size->52)    
scePadSetReqState                        = 0x001154E0; // type:func    (Size->100)   
scePadGetReqState                        = 0x00115548; // type:func    (Size->80)    
scePadReqIntToStr                        = 0x00115598; // type:func    (Size->52)    
scePadInfoAct                            = 0x001155D0; // type:func    (Size->288)   
scePadInfoComb                           = 0x001156F0; // type:func    (Size->284)   
scePadInfoMode                           = 0x00115810; // type:func    (Size->312)   
scePadSetMainMode                        = 0x00115948; // type:func    (Size->180)   
scePadSetActDirect                       = 0x00115A00; // type:func    (Size->184)   
scePadSetActAlign                        = 0x00115AB8; // type:func    (Size->216)   
scePadGetButtonMask                      = 0x00115B90; // type:func    (Size->180)   
scePadSetButtonInfo                      = 0x00115C48; // type:func    (Size->176)   
scePadInfoPressMode                      = 0x00115CF8; // type:func    (Size->92)    
scePadEnterPressMode                     = 0x00115D58; // type:func    (Size->84)    
scePadExitPressMode                      = 0x00115DB0; // type:func    (Size->84)    
scePadSetVrefParam                       = 0x00115E08; // type:func    (Size->204)   
scePadGetPortMax                         = 0x00115ED8; // type:func    (Size->100)   
scePadGetSlotMax                         = 0x00115F40; // type:func    (Size->104)   
scePadGetModVersion                      = 0x00115FA8; // type:func    (Size->100)   
scePadSetWarningLevel                    = 0x00116010; // type:func    (Size->104)   
//__gnu_compiled_c                         = 0x00116078; // (Region->LOCAL)  (Type->NOTYPE) 
CB_DelayTh                               = 0x00116078; // type:func    (Size->36)    
//gcc2_compiled.                         = 0x00116078; // (Region->LOCAL)  (Type->NOTYPE) 
sceCdDelayThread                         = 0x001160A0; // type:func    (Size->104)   
sceCdCallback                            = 0x00116108; // type:func    (Size->84)    
_sceCd_cd_callback                       = 0x00116160; // type:func    (Size->160)   
_Cdvd_cbLoop                             = 0x00116200; // type:func    (Size->188)   
sceCdInitEeCB                            = 0x001162C0; // type:func    (Size->212)   
_sceCd_cd_read_intr                      = 0x00116398; // type:func    (Size->160)   
cmd_sem_init                             = 0x00116438; // type:func    (Size->148)   
//cdvd_exit                                = 0x001164D0; // type:func    (Size->128)   
sceCdPOffCallback                        = 0x00116550; // type:func    (Size->108)   
_sceCd_Poff_Intr                         = 0x001165C0; // type:func    (Size->60)    
PowerOffCB                               = 0x00116600; // type:func    (Size->100)   
sceCdSearchFile                          = 0x00116668; // type:func    (Size->764)   
_sceCd_ncmd_prechk                       = 0x00116968; // type:func    (Size->368)   
sceCdNcmdDiskReady                       = 0x00116AD8; // type:func    (Size->152)   
sceCdSync                                = 0x00116B70; // type:func    (Size->160)   
sceCdSyncS                               = 0x00116C10; // type:func    (Size->108)   
_sceCd_scmd_prechk                       = 0x00116C80; // type:func    (Size->368)   
sceCdInit                                = 0x00116DF0; // type:func    (Size->736)   
sceCdDiskReady                           = 0x001170D0; // type:func    (Size->504)   
sceCdMmode                               = 0x001172C8; // type:func    (Size->196)   
//__gnu_compiled_c                         = 0x00117390; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x00117390; // (Region->LOCAL)  (Type->NOTYPE) 
sceCdGetReadPos                          = 0x00117390; // type:func    (Size->48)    
//__gnu_compiled_c                         = 0x001173C0; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x001173C0; // (Region->LOCAL)  (Type->NOTYPE) 
sceCdRead                                = 0x001173C0; // type:func    (Size->480)   
//__gnu_compiled_c                         = 0x001175A0; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x001175A0; // (Region->LOCAL)  (Type->NOTYPE) 
sceCdReadIOPm                            = 0x001175A0; // type:func    (Size->340)   
//__gnu_compiled_c                         = 0x001176F8; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x001176F8; // (Region->LOCAL)  (Type->NOTYPE) 
sceCdGetDiskType                         = 0x001176F8; // type:func    (Size->152)   
//__gnu_compiled_c                         = 0x00117790; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x00117790; // (Region->LOCAL)  (Type->NOTYPE) 
sceCdGetError                            = 0x00117790; // type:func    (Size->152)   
//__gnu_compiled_c                         = 0x00117828; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x00117828; // (Region->LOCAL)  (Type->NOTYPE) 
sceCdBreak                               = 0x00117828; // type:func    (Size->184)   
//__gnu_compiled_c                         = 0x001178E0; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x001178E0; // (Region->LOCAL)  (Type->NOTYPE) 
sceCdReadClock                           = 0x001178E0; // type:func    (Size->248)   
//__gnu_compiled_c                         = 0x001179D8; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x001179D8; // (Region->LOCAL)  (Type->NOTYPE) 
sceCdStInit                              = 0x001179D8; // type:func    (Size->44)    
sceCdStStart                             = 0x00117A08; // type:func    (Size->52)    
sceCdStSeekF                             = 0x00117A40; // type:func    (Size->44)    
sceCdStSeek                              = 0x00117A70; // type:func    (Size->44)    
sceCdStStop                              = 0x00117AA0; // type:func    (Size->56)    
sceCdStRead                              = 0x00117AD8; // type:func    (Size->392)   
sceCdStPause                             = 0x00117C60; // type:func    (Size->80)    
sceCdStResume                            = 0x00117CB0; // type:func    (Size->84)    
sceCdStStat                              = 0x00117D08; // type:func    (Size->72)    
sceCdStream                              = 0x00117D50; // type:func    (Size->360)   
//__gnu_compiled_c                         = 0x00117EB8; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x00117EB8; // (Region->LOCAL)  (Type->NOTYPE) 
sceMcInit                                = 0x00117EB8; // type:func    (Size->436)   
_lmcGetClientPtr                         = 0x00118070; // type:func    (Size->48)    
sceMcChangeThreadPriority                = 0x001180A0; // type:func    (Size->180)   
sceMcGetSlotMax                          = 0x00118158; // type:func    (Size->192)   
sceMcOpen                                = 0x00118218; // type:func    (Size->308)   
sceMcMkdir                               = 0x00118350; // type:func    (Size->52)    
sceMcClose                               = 0x00118388; // type:func    (Size->180)   
sceMcSeek                                = 0x00118440; // type:func    (Size->212)   
mceIntrReadFixAlign                      = 0x00118518; // type:func    (Size->144)   
sceMcRead                                = 0x001185A8; // type:func    (Size->284)   
sceMcWrite                               = 0x001186C8; // type:func    (Size->380)   
mcHearAlarm                              = 0x00118848; // type:func    (Size->36)    
mcDelayThread                            = 0x00118870; // type:func    (Size->68)    
sceMcSync                                = 0x001188B8; // type:func    (Size->224)   
mceGetInfoApdx                           = 0x00118998; // type:func    (Size->84)    
sceMcGetInfo                             = 0x001189F0; // type:func    (Size->388)   
sceMcGetDir                              = 0x00118B78; // type:func    (Size->344)   
mceStorePwd                              = 0x00118CD0; // type:func    (Size->132)   
sceMcChdir                               = 0x00118D58; // type:func    (Size->336)   
sceMcFormat                              = 0x00118EA8; // type:func    (Size->200)   
sceMcDelete                              = 0x00118F70; // type:func    (Size->296)   
sceMcFlush                               = 0x00119098; // type:func    (Size->180)   
sceMcSetFileInfo                         = 0x00119150; // type:func    (Size->472)   
sceMcRename                              = 0x00119328; // type:func    (Size->360)   
sceMcUnformat                            = 0x00119490; // type:func    (Size->200)   
sceMcGetEntSpace                         = 0x00119558; // type:func    (Size->280)   
//__gnu_compiled_c                         = 0x00119670; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x00119670; // (Region->LOCAL)  (Type->NOTYPE) 
sceSdRemoteInit                          = 0x00119670; // type:func    (Size->164)   
sceSdTransToIOP                          = 0x00119718; // type:func    (Size->132)   
sceSdCallBack                            = 0x001197A0; // type:func    (Size->16)    
sceSdRemote                              = 0x001197B0; // type:func    (Size->440)   
sceDevVu0CheckBusy                       = 0x00119968; // type:func    (Size->20)    
//__gnu_compiled_c                         = 0x00119968; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x00119968; // (Region->LOCAL)  (Type->NOTYPE) 
sceDevVu0Reset                           = 0x00119980; // type:func    (Size->20)    
sceDevVu0Pause                           = 0x00119998; // type:func    (Size->96)    
sceDevVu0Continue                        = 0x001199F8; // type:func    (Size->80)    
sceDevVu0PutDBit                         = 0x00119A48; // type:func    (Size->48)    
sceDevVu0PutTBit                         = 0x00119A78; // type:func    (Size->48)    
sceDevVu0GetDBit                         = 0x00119AA8; // type:func    (Size->16)    
sceDevVu0GetTBit                         = 0x00119AB8; // type:func    (Size->16)    
sceDevVu0Sync                            = 0x00119AC8; // type:func    (Size->64)    
sceDevVu0Exec                            = 0x00119B08; // type:func    (Size->16)    
sceDevVu0GetTpc                          = 0x00119B18; // type:func    (Size->12)    
sceDevVu0GetCnd                          = 0x00119B28; // type:func    (Size->224)   
sceDevVu0PutCnd                          = 0x00119C08; // type:func    (Size->364)   
sceVuCheckBusy                           = 0x00119D78; // type:func    (Size->44)    
//__gnu_compiled_c                         = 0x00119D78; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x00119D78; // (Region->LOCAL)  (Type->NOTYPE) 
sceVu0MemWriteQ                          = 0x00119DA8; // type:func    (Size->64)    
sceVu0MemReadQ                           = 0x00119DE8; // type:func    (Size->68)    
sceDevVu1Reset                           = 0x00119E30; // type:func    (Size->20)    
sceDevVu1Pause                           = 0x00119E48; // type:func    (Size->96)    
sceDevVu1Continue                        = 0x00119EA8; // type:func    (Size->80)    
sceDevVu1PutDBit                         = 0x00119EF8; // type:func    (Size->48)    
sceDevVu1PutTBit                         = 0x00119F28; // type:func    (Size->48)    
sceDevVu1GetDBit                         = 0x00119F58; // type:func    (Size->16)    
sceDevVu1GetTBit                         = 0x00119F68; // type:func    (Size->16)    
sceDevVu1Sync                            = 0x00119F78; // type:func    (Size->72)    
sceDevVu1Exec                            = 0x00119FC0; // type:func    (Size->16)    
sceDevVu1GetTpc                          = 0x00119FD0; // type:func    (Size->36)    
sceDevVu1GetCnd                          = 0x00119FF8; // type:func    (Size->396)   
sceDevVu1PutCnd                          = 0x0011A188; // type:func    (Size->328)   
//__gnu_compiled_c                         = 0x0011A2D0; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011A2D0; // (Region->LOCAL)  (Type->NOTYPE) 
sceDevGifReset                           = 0x0011A2D0; // type:func    (Size->20)    
sceDevGifPause                           = 0x0011A2E8; // type:func    (Size->24)    
sceDevGifContinue                        = 0x0011A300; // type:func    (Size->56)    
sceDevGifPutImtMode                      = 0x0011A338; // type:func    (Size->100)   
sceDevGifGetImtMode                      = 0x0011A3A0; // type:func    (Size->24)    
sceDevGifPutP3msk                        = 0x0011A3B8; // type:func    (Size->104)   
sceDevGifGetP3msk                        = 0x0011A420; // type:func    (Size->32)    
sceDevGifSync                            = 0x0011A440; // type:func    (Size->44)    
sceDevGifGetCnd                          = 0x0011A470; // type:func    (Size->184)   
sceDevGifPutFifo                         = 0x0011A528; // type:func    (Size->92)    
//__gnu_compiled_c                         = 0x0011A588; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011A588; // (Region->LOCAL)  (Type->NOTYPE) 
sceDevVif0Reset                          = 0x0011A588; // type:func    (Size->36)    
sceDevVif0Pause                          = 0x0011A5B0; // type:func    (Size->104)   
sceDevVif0Continue                       = 0x0011A618; // type:func    (Size->60)    
sceDevVif0PutErr                         = 0x0011A658; // type:func    (Size->32)    
sceDevVif0GetErr                         = 0x0011A678; // type:func    (Size->16)    
sceDevVif0Sync                           = 0x0011A688; // type:func    (Size->80)    
sceDevVif0GetCnd                         = 0x0011A6D8; // type:func    (Size->384)   
sceDevVif0PutFifo                        = 0x0011A858; // type:func    (Size->92)    
//__gnu_compiled_c                         = 0x0011A8B8; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011A8B8; // (Region->LOCAL)  (Type->NOTYPE) 
sceDevVif1Reset                          = 0x0011A8B8; // type:func    (Size->36)    
sceDevVif1Pause                          = 0x0011A8E0; // type:func    (Size->104)   
sceDevVif1Continue                       = 0x0011A948; // type:func    (Size->60)    
sceDevVif1PutErr                         = 0x0011A988; // type:func    (Size->32)    
sceDevVif1GetErr                         = 0x0011A9A8; // type:func    (Size->16)    
sceDevVif1Sync                           = 0x0011A9B8; // type:func    (Size->80)    
sceDevVif1GetCnd                         = 0x0011AA08; // type:func    (Size->472)   
sceDevVif1PutFifo                        = 0x0011ABE0; // type:func    (Size->92)    
sceDevVif1GetFifo                        = 0x0011AC40; // type:func    (Size->96)    
//__gnu_compiled_c                         = 0x0011ACA0; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011ACA0; // (Region->LOCAL)  (Type->NOTYPE) 
__ieee754_atan2                          = 0x0011ACA0; // type:func    (Size->820)   
//__gnu_compiled_c                         = 0x0011AFD8; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011AFD8; // (Region->LOCAL)  (Type->NOTYPE) 
__ieee754_acosf                          = 0x0011AFD8; // type:func    (Size->1072)  
//__gnu_compiled_c                         = 0x0011B408; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011B408; // (Region->LOCAL)  (Type->NOTYPE) 
__ieee754_atan2f                         = 0x0011B408; // type:func    (Size->744)   
//__gnu_compiled_c                         = 0x0011B6F0; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011B6F0; // (Region->LOCAL)  (Type->NOTYPE) 
__ieee754_rem_pio2f                      = 0x0011B6F0; // type:func    (Size->992)   
//__gnu_compiled_c                         = 0x0011BAD0; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011BAD0; // (Region->LOCAL)  (Type->NOTYPE) 
__ieee754_sqrtf                          = 0x0011BAD0; // type:func    (Size->312)   
//__gnu_compiled_c                         = 0x0011BC08; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011BC08; // (Region->LOCAL)  (Type->NOTYPE) 
__kernel_cosf                            = 0x0011BC08; // type:func    (Size->344)   
//__gnu_compiled_c                         = 0x0011BD60; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011BD60; // (Region->LOCAL)  (Type->NOTYPE) 
__kernel_rem_pio2f                       = 0x0011BD60; // type:func    (Size->2380)  
//__gnu_compiled_c                         = 0x0011C6B0; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011C6B0; // (Region->LOCAL)  (Type->NOTYPE) 
__kernel_sinf                            = 0x0011C6B0; // type:func    (Size->260)   
//__gnu_compiled_c                         = 0x0011C7B8; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011C7B8; // (Region->LOCAL)  (Type->NOTYPE) 
__kernel_tanf                            = 0x0011C7B8; // type:func    (Size->660)   
//__gnu_compiled_c                         = 0x0011CA50; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011CA50; // (Region->LOCAL)  (Type->NOTYPE) 
atan                                     = 0x0011CA50; // type:func    (Size->1036)  
//__gnu_compiled_c                         = 0x0011CE60; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011CE60; // (Region->LOCAL)  (Type->NOTYPE) 
fabs                                     = 0x0011CE60; // type:func    (Size->52)    
//__gnu_compiled_c                         = 0x0011CE98; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011CE98; // (Region->LOCAL)  (Type->NOTYPE) 
isinf                                    = 0x0011CE98; // type:func    (Size->72)    
//__gnu_compiled_c                         = 0x0011CEE0; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011CEE0; // (Region->LOCAL)  (Type->NOTYPE) 
isnan                                    = 0x0011CEE0; // type:func    (Size->56)    
//__gnu_compiled_c                         = 0x0011CF18; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011CF18; // (Region->LOCAL)  (Type->NOTYPE) 
matherr                                  = 0x0011CF18; // type:func    (Size->36)    
//__gnu_compiled_c                         = 0x0011CF40; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011CF40; // (Region->LOCAL)  (Type->NOTYPE) 
atanf                                    = 0x0011CF40; // type:func    (Size->680)   
//__gnu_compiled_c                         = 0x0011D1E8; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011D1E8; // (Region->LOCAL)  (Type->NOTYPE) 
copysignf                                = 0x0011D1E8; // type:func    (Size->48)    
//__gnu_compiled_c                         = 0x0011D218; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011D218; // (Region->LOCAL)  (Type->NOTYPE) 
cosf                                     = 0x0011D218; // type:func    (Size->232)   
//__gnu_compiled_c                         = 0x0011D300; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011D300; // (Region->LOCAL)  (Type->NOTYPE) 
fabsf                                    = 0x0011D300; // type:func    (Size->28)    
//__gnu_compiled_c                         = 0x0011D320; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011D320; // (Region->LOCAL)  (Type->NOTYPE) 
floorf                                   = 0x0011D320; // type:func    (Size->228)   
//__gnu_compiled_c                         = 0x0011D408; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011D408; // (Region->LOCAL)  (Type->NOTYPE) 
isnanf                                   = 0x0011D408; // type:func    (Size->36)    
//__gnu_compiled_c                         = 0x0011D430; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011D430; // (Region->LOCAL)  (Type->NOTYPE) 
scalbnf                                  = 0x0011D430; // type:func    (Size->352)   
//__gnu_compiled_c                         = 0x0011D590; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011D590; // (Region->LOCAL)  (Type->NOTYPE) 
sinf                                     = 0x0011D590; // type:func    (Size->240)   
//__gnu_compiled_c                         = 0x0011D680; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011D680; // (Region->LOCAL)  (Type->NOTYPE) 
tanf                                     = 0x0011D680; // type:func    (Size->136)   
//__gnu_compiled_c                         = 0x0011D708; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011D708; // (Region->LOCAL)  (Type->NOTYPE) 
atan2                                    = 0x0011D708; // type:func    (Size->280)   
//__gnu_compiled_c                         = 0x0011D820; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011D820; // (Region->LOCAL)  (Type->NOTYPE) 
acosf                                    = 0x0011D820; // type:func    (Size->252)   
//__gnu_compiled_c                         = 0x0011D920; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011D920; // (Region->LOCAL)  (Type->NOTYPE) 
atan2f                                   = 0x0011D920; // type:func    (Size->296)   
//__gnu_compiled_c                         = 0x0011DA48; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011DA48; // (Region->LOCAL)  (Type->NOTYPE) 
sqrtf                                    = 0x0011DA48; // type:func    (Size->276)   
//__gnu_compiled_c                         = 0x0011DB60; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011DB60; // (Region->LOCAL)  (Type->NOTYPE) 
abort                                    = 0x0011DB60; // type:func    (Size->32)    
//__gnu_compiled_c                         = 0x0011DB80; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011DB80; // (Region->LOCAL)  (Type->NOTYPE) 
abs                                      = 0x0011DB80; // type:func    (Size->20)    
//__gnu_compiled_c                         = 0x0011DB98; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011DB98; // (Region->LOCAL)  (Type->NOTYPE) 
__assert                                 = 0x0011DB98; // type:func    (Size->52)    
//__gnu_compiled_c                         = 0x0011DBD0; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011DBD0; // (Region->LOCAL)  (Type->NOTYPE) 
_calloc_r                                = 0x0011DBD0; // type:func    (Size->188)   
//__gnu_compiled_c                         = 0x0011DC90; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011DC90; // (Region->LOCAL)  (Type->NOTYPE) 
_close_r                                 = 0x0011DC90; // type:func    (Size->88)    
//__gnu_compiled_c                         = 0x0011DCE8; // (Region->LOCAL)  (Type->NOTYPE) 
quorem                                   = 0x0011DCE8; // type:func    (Size->532)   
//gcc2_compiled.                         = 0x0011DCE8; // (Region->LOCAL)  (Type->NOTYPE) 
_dtoa_r                                  = 0x0011DF00; // type:func    (Size->4556)  
//__gnu_compiled_c                         = 0x0011F0D0; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011F0D0; // (Region->LOCAL)  (Type->NOTYPE) 
__errno                                  = 0x0011F0D0; // type:func    (Size->12)    
//__gnu_compiled_c                         = 0x0011F0E0; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011F0E0; // (Region->LOCAL)  (Type->NOTYPE) 
fflush                                   = 0x0011F0E0; // type:func    (Size->260)   
//__gnu_compiled_c                         = 0x0011F1E8; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011F1E8; // (Region->LOCAL)  (Type->NOTYPE) 
std                                      = 0x0011F1E8; // type:func    (Size->88)    
__sfmoreglue                             = 0x0011F240; // type:func    (Size->112)   
__sfp                                    = 0x0011F2B0; // type:func    (Size->224)   
_cleanup_r                               = 0x0011F390; // type:func    (Size->12)    
_cleanup                                 = 0x0011F3A0; // type:func    (Size->12)    
__sinit                                  = 0x0011F3B0; // type:func    (Size->140)   
//__gnu_compiled_c                         = 0x0011F440; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011F440; // (Region->LOCAL)  (Type->NOTYPE) 
fiprintf                                 = 0x0011F440; // type:func    (Size->52)    
//__gnu_compiled_c                         = 0x0011F478; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011F478; // (Region->LOCAL)  (Type->NOTYPE) 
_free_r                                  = 0x0011F478; // type:func    (Size->796)   
_malloc_trim_r                           = 0x0011F798; // type:func    (Size->364)   
//__gnu_compiled_c                         = 0x0011F908; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011F908; // (Region->LOCAL)  (Type->NOTYPE) 
_fstat_r                                 = 0x0011F908; // type:func    (Size->92)    
//__gnu_compiled_c                         = 0x0011F968; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011F968; // (Region->LOCAL)  (Type->NOTYPE) 
__sfvwrite                               = 0x0011F968; // type:func    (Size->984)   
//__gnu_compiled_c                         = 0x0011FD40; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011FD40; // (Region->LOCAL)  (Type->NOTYPE) 
_fwalk                                   = 0x0011FD40; // type:func    (Size->148)   
//__gnu_compiled_c                         = 0x0011FDD8; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011FDD8; // (Region->LOCAL)  (Type->NOTYPE) 
_setlocale_r                             = 0x0011FDD8; // type:func    (Size->132)   
_localeconv_r                            = 0x0011FE60; // type:func    (Size->12)    
setlocale                                = 0x0011FE70; // type:func    (Size->44)    
localeconv                               = 0x0011FEA0; // type:func    (Size->36)    
//__gnu_compiled_c                         = 0x0011FEC8; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011FEC8; // (Region->LOCAL)  (Type->NOTYPE) 
_lseek_r                                 = 0x0011FEC8; // type:func    (Size->96)    
//__gnu_compiled_c                         = 0x0011FF28; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x0011FF28; // (Region->LOCAL)  (Type->NOTYPE) 
__smakebuf                               = 0x0011FF28; // type:func    (Size->336)   
//__gnu_compiled_c                         = 0x00120078; // (Region->LOCAL)  (Type->NOTYPE) 
malloc_extend_top                        = 0x00120078; // type:func    (Size->596)   
//gcc2_compiled.                         = 0x00120078; // (Region->LOCAL)  (Type->NOTYPE) 
_malloc_r                                = 0x001202D0; // type:func    (Size->1912)  
//__gnu_compiled_c                         = 0x00120A48; // (Region->LOCAL)  (Type->NOTYPE) 
//gcc2_compiled.                         = 0x00120A48; // (Region->LOCAL)  (Type->NOTYPE) 
_mbtowc_r                                = 0x00120A48; // type:func    (Size->60)    
memchr                                   = 0x00120A88; // type:func    (Size->224)   
$L6                                      = 0x00120AA0; // (Region->LOCAL)  (Type->NOTYPE) 
$L10                                     = 0x00120AE8; // (Region->LOCAL)  (Type->NOTYPE) 
$L2                                      = 0x00120B28; // (Region->LOCAL)  (Type->NOTYPE) 
$L21                                     = 0x00120B44; // (Region->LOCAL)  (Type->NOTYPE) 
$L20                                     = 0x00120B58; // (Region->LOCAL)  (Type->NOTYPE) 
$L31                                     = 0x00120B60; // (Region->LOCAL)  (Type->NOTYPE) 

memcmp                                   = 0x00120B68; // type:func    (Size->148)   
$L5                                      = 0x00120B80; // (Region->LOCAL)  (Type->NOTYPE) 
//$L2                                      = 0x00120BB4; // (Region->LOCAL)  (Type->NOTYPE) 
//$L10                                     = 0x00120BD0; // (Region->LOCAL)  (Type->NOTYPE) 
$L11                                     = 0x00120BE8; // (Region->LOCAL)  (Type->NOTYPE) 
$L9                                      = 0x00120BF4; // (Region->LOCAL)  (Type->NOTYPE) 

memcpy                                   = 0x00120C00; // type:func    (Size->176)   
//$L5                                      = 0x00120C24; // (Region->LOCAL)  (Type->NOTYPE) 
//$L9                                      = 0x00120C5C; // (Region->LOCAL)  (Type->NOTYPE) 
//$L2                                      = 0x00120C7C; // (Region->LOCAL)  (Type->NOTYPE) 
//$L20                                     = 0x00120C80; // (Region->LOCAL)  (Type->NOTYPE) 
$L13                                     = 0x00120C8C; // (Region->LOCAL)  (Type->NOTYPE) 
$L12                                     = 0x00120CA8; // (Region->LOCAL)  (Type->NOTYPE) 

memmove                                  = 0x00120CB0; // type:func    (Size->260)   
//$L5                                      = 0x00120CE4; // (Region->LOCAL)  (Type->NOTYPE) 
//$L2                                      = 0x00120D08; // (Region->LOCAL)  (Type->NOTYPE) 
//$L11                                     = 0x00120D28; // (Region->LOCAL)  (Type->NOTYPE) 
$L15                                     = 0x00120D60; // (Region->LOCAL)  (Type->NOTYPE) 
$L30                                     = 0x00120D80; // (Region->LOCAL)  (Type->NOTYPE) 
$L29                                     = 0x00120D84; // (Region->LOCAL)  (Type->NOTYPE) 
$L19                                     = 0x00120D90; // (Region->LOCAL)  (Type->NOTYPE) 
$L7                                      = 0x00120DAC; // (Region->LOCAL)  (Type->NOTYPE) 

memset                                   = 0x00120DB8; // type:func    (Size->192)   
//$L12                                     = 0x00120DF4; // (Region->LOCAL)  (Type->NOTYPE) 
$L16                                     = 0x00120E18; // (Region->LOCAL)  (Type->NOTYPE) 
//$L31                                     = 0x00120E24; // (Region->LOCAL)  (Type->NOTYPE) 
//$L2                                      = 0x00120E38; // (Region->LOCAL)  (Type->NOTYPE) 
//$L20                                     = 0x00120E54; // (Region->LOCAL)  (Type->NOTYPE) 
//$L19                                     = 0x00120E70; // (Region->LOCAL)  (Type->NOTYPE) 
//__gnu_compiled_c                         = 0x00120E78; // (Region->LOCAL)  (Type->NOTYPE) 

//gcc2_compiled.                         = 0x00120E78; // (Region->LOCAL)  (Type->NOTYPE) 
__malloc_lock                            = 0x00120E78; // type:func    (Size->8)     
__malloc_unlock                          = 0x00120E80; // type:func    (Size->8)     
//__gnu_compiled_c                         = 0x00120E88; // (Region->LOCAL)  (Type->NOTYPE) 

//gcc2_compiled.                         = 0x00120E88; // (Region->LOCAL)  (Type->NOTYPE) 
_Balloc                                  = 0x00120E88; // type:func    (Size->168)   
_Bfree                                   = 0x00120F30; // type:func    (Size->44)    
_multadd                                 = 0x00120F60; // type:func    (Size->276)   
_s2b                                     = 0x00121078; // type:func    (Size->328)   
_hi0bits                                 = 0x001211C0; // type:func    (Size->132)   
_lo0bits                                 = 0x00121248; // type:func    (Size->192)   
_i2b                                     = 0x00121308; // type:func    (Size->56)    
_multiply                                = 0x00121340; // type:func    (Size->556)   
_pow5mult                                = 0x00121570; // type:func    (Size->256)   
_lshift                                  = 0x00121670; // type:func    (Size->376)   
__mcmp                                   = 0x001217E8; // type:func    (Size->104)   
__mdiff                                  = 0x00121850; // type:func    (Size->400)   
_ulp                                     = 0x001219E0; // type:func    (Size->152)   
_b2d                                     = 0x00121A78; // type:func    (Size->380)   
_d2b                                     = 0x00121BF8; // type:func    (Size->380)   
_ratio                                   = 0x00121D78; // type:func    (Size->192)   
_mprec_log10                             = 0x00121E38; // type:func    (Size->108)   
//__gnu_compiled_c                         = 0x00121EA8; // (Region->LOCAL)  (Type->NOTYPE) 

//gcc2_compiled.                         = 0x00121EA8; // (Region->LOCAL)  (Type->NOTYPE) 
_printf_r                                = 0x00121EA8; // type:func    (Size->60)    
printf                                   = 0x00121EE8; // type:func    (Size->80)    
//__gnu_compiled_c                         = 0x00121F38; // (Region->LOCAL)  (Type->NOTYPE) 

//gcc2_compiled.                         = 0x00121F38; // (Region->LOCAL)  (Type->NOTYPE) 
srand                                    = 0x00121F38; // type:func    (Size->16)    
rand                                     = 0x00121F48; // type:func    (Size->48)    
//__gnu_compiled_c                         = 0x00121F78; // (Region->LOCAL)  (Type->NOTYPE) 

//gcc2_compiled.                         = 0x00121F78; // (Region->LOCAL)  (Type->NOTYPE) 
_read_r                                  = 0x00121F78; // type:func    (Size->96)    
//__gnu_compiled_c                         = 0x00121FD8; // (Region->LOCAL)  (Type->NOTYPE) 

//gcc2_compiled.                         = 0x00121FD8; // (Region->LOCAL)  (Type->NOTYPE) 
_sbrk_r                                  = 0x00121FD8; // type:func    (Size->92)    
//__gnu_compiled_c                         = 0x00122038; // (Region->LOCAL)  (Type->NOTYPE) 

//gcc2_compiled.                         = 0x00122038; // (Region->LOCAL)  (Type->NOTYPE) 
_init_signal_r                           = 0x00122038; // type:func    (Size->112)   
_signal_r                                = 0x001220A8; // type:func    (Size->140)   
_raise_r                                 = 0x00122138; // type:func    (Size->240)   
__sigtramp_r                             = 0x00122228; // type:func    (Size->184)   
raise                                    = 0x001222E0; // type:func    (Size->40)    
signal                                   = 0x00122308; // type:func    (Size->44)    
_init_signal                             = 0x00122338; // type:func    (Size->36)    
__sigtramp                               = 0x00122360; // type:func    (Size->40)    
//__gnu_compiled_c                         = 0x00122388; // (Region->LOCAL)  (Type->NOTYPE) 

//gcc2_compiled.                         = 0x00122388; // (Region->LOCAL)  (Type->NOTYPE) 
_kill_r                                  = 0x00122388; // type:func    (Size->92)    
_getpid_r                                = 0x001223E8; // type:func    (Size->28)    
//__gnu_compiled_c                         = 0x00122408; // (Region->LOCAL)  (Type->NOTYPE) 

//gcc2_compiled.                         = 0x00122408; // (Region->LOCAL)  (Type->NOTYPE) 
_sprintf_r                               = 0x00122408; // type:func    (Size->104)   
sprintf                                  = 0x00122470; // type:func    (Size->112)   
//__gnu_compiled_c                         = 0x001224E0; // (Region->LOCAL)  (Type->NOTYPE) 

//gcc2_compiled.                         = 0x001224E0; // (Region->LOCAL)  (Type->NOTYPE) 
__sread                                  = 0x001224E0; // type:func    (Size->100)   
__swrite                                 = 0x00122548; // type:func    (Size->128)   
__sseek                                  = 0x001225C8; // type:func    (Size->104)   
__sclose                                 = 0x00122630; // type:func    (Size->32)    

strcat                                   = 0x00122650; // type:func    (Size->300)   
$L14                                     = 0x001226D4; // (Region->LOCAL)  (Type->NOTYPE) 
$L3                                      = 0x00122700; // (Region->LOCAL)  (Type->NOTYPE) 
//$L16                                     = 0x00122724; // (Region->LOCAL)  (Type->NOTYPE) 
$L4                                      = 0x00122740; // (Region->LOCAL)  (Type->NOTYPE) 
//$L9                                      = 0x00122744; // (Region->LOCAL)  (Type->NOTYPE) 
//$L15                                     = 0x00122744; // (Region->LOCAL)  (Type->NOTYPE) 

strcmp                                   = 0x00122780; // type:func    (Size->324)   
//$L2                                      = 0x001227F8; // (Region->LOCAL)  (Type->NOTYPE) 
//$L5                                      = 0x0012281C; // (Region->LOCAL)  (Type->NOTYPE) 
$L18                                     = 0x00122844; // (Region->LOCAL)  (Type->NOTYPE) 
//$L21                                     = 0x00122858; // (Region->LOCAL)  (Type->NOTYPE) 
//$L6                                      = 0x00122874; // (Region->LOCAL)  (Type->NOTYPE) 
//$L12                                     = 0x00122890; // (Region->LOCAL)  (Type->NOTYPE) 
//$L19                                     = 0x001228B0; // (Region->LOCAL)  (Type->NOTYPE) 
//$L20                                     = 0x001228B0; // (Region->LOCAL)  (Type->NOTYPE) 
$L22                                     = 0x001228B8; // (Region->LOCAL)  (Type->NOTYPE) 

strcpy                                   = 0x001228C8; // type:func    (Size->276)   
//$L2                                      = 0x00122944; // (Region->LOCAL)  (Type->NOTYPE) 
//$L3                                      = 0x00122978; // (Region->LOCAL)  (Type->NOTYPE) 
//$L5                                      = 0x00122990; // (Region->LOCAL)  (Type->NOTYPE) 
//$L4                                      = 0x001229B4; // (Region->LOCAL)  (Type->NOTYPE) 
//$L7                                      = 0x001229B8; // (Region->LOCAL)  (Type->NOTYPE) 

strlen                                   = 0x001229E0; // type:func    (Size->312)   
//$L14                                     = 0x00122A58; // (Region->LOCAL)  (Type->NOTYPE) 
//$L12                                     = 0x00122A84; // (Region->LOCAL)  (Type->NOTYPE) 
//$L16                                     = 0x00122AD4; // (Region->LOCAL)  (Type->NOTYPE) 
//$L9                                      = 0x00122AF4; // (Region->LOCAL)  (Type->NOTYPE) 
//$L15                                     = 0x00122AF4; // (Region->LOCAL)  (Type->NOTYPE) 

strncpy                                  = 0x00122B18; // type:func    (Size->444)   
//$L31                                     = 0x00122B40; // (Region->LOCAL)  (Type->NOTYPE) 
$L39                                     = 0x00122BA8; // (Region->LOCAL)  (Type->NOTYPE) 
$L17                                     = 0x00122BEC; // (Region->LOCAL)  (Type->NOTYPE) 
//$L19                                     = 0x00122C48; // (Region->LOCAL)  (Type->NOTYPE) 
//$L5                                      = 0x00122C7C; // (Region->LOCAL)  (Type->NOTYPE) 
//$L9                                      = 0x00122C80; // (Region->LOCAL)  (Type->NOTYPE) 
//$L20                                     = 0x00122CA8; // (Region->LOCAL)  (Type->NOTYPE) 
//$L16                                     = 0x00122CB0; // (Region->LOCAL)  (Type->NOTYPE) 
//$L18                                     = 0x00122CCC; // (Region->LOCAL)  (Type->NOTYPE) 
__sprint                                 = 0x00122CD8; // type:func    (Size->68)    
//__gnu_compiled_c                         = 0x00122CD8; // (Region->LOCAL)  (Type->NOTYPE) 

//gcc2_compiled.                         = 0x00122CD8; // (Region->LOCAL)  (Type->NOTYPE) 
__sbprintf                               = 0x00122D20; // type:func    (Size->180)   
vfiprintf                                = 0x00122DD8; // type:func    (Size->120)   
_vfiprintf_r                             = 0x00122E50; // type:func    (Size->3020)  
//__sprint                                 = 0x00123A20; // type:func    (Size->68)    
//__gnu_compiled_c                         = 0x00123A20; // (Region->LOCAL)  (Type->NOTYPE) 

//gcc2_compiled.                         = 0x00123A20; // (Region->LOCAL)  (Type->NOTYPE) 
//__sbprintf                               = 0x00123A68; // type:func    (Size->180)   
vfprintf                                 = 0x00123B20; // type:func    (Size->120)   
_vfprintf_r                              = 0x00123B98; // type:func    (Size->5400)  
cvt                                      = 0x001250B0; // type:func    (Size->432)   
exponent                                 = 0x00125260; // type:func    (Size->224)   
//__gnu_compiled_c                         = 0x00125340; // (Region->LOCAL)  (Type->NOTYPE) 

//gcc2_compiled.                         = 0x00125340; // (Region->LOCAL)  (Type->NOTYPE) 
_write_r                                 = 0x00125340; // type:func    (Size->96)    
//__gnu_compiled_c                         = 0x001253A0; // (Region->LOCAL)  (Type->NOTYPE) 

//gcc2_compiled.                         = 0x001253A0; // (Region->LOCAL)  (Type->NOTYPE) 
__swsetup                                = 0x001253A0; // type:func    (Size->268)   
//__gnu_compiled_c                         = 0x001254B0; // (Region->LOCAL)  (Type->NOTYPE) 

//gcc2_compiled.                         = 0x001254B0; // (Region->LOCAL)  (Type->NOTYPE) 
__divdi3                                 = 0x001254B0; // type:func    (Size->1772)  
//__gnu_compiled_c                         = 0x00125BA0; // (Region->LOCAL)  (Type->NOTYPE) 

//gcc2_compiled.                         = 0x00125BA0; // (Region->LOCAL)  (Type->NOTYPE) 
__fixsfdi                                = 0x00125BA0; // type:func    (Size->60)    
//__gnu_compiled_c                         = 0x00125BE0; // (Region->LOCAL)  (Type->NOTYPE) 

//gcc2_compiled.                         = 0x00125BE0; // (Region->LOCAL)  (Type->NOTYPE) 
__fixunsdfdi                             = 0x00125BE0; // type:func    (Size->236)   
//__gnu_compiled_c                         = 0x00125CD0; // (Region->LOCAL)  (Type->NOTYPE) 

//gcc2_compiled.                         = 0x00125CD0; // (Region->LOCAL)  (Type->NOTYPE) 
__fixunssfdi                             = 0x00125CD0; // type:func    (Size->244)   
//__gnu_compiled_c                         = 0x00125DC8; // (Region->LOCAL)  (Type->NOTYPE) 

//gcc2_compiled.                         = 0x00125DC8; // (Region->LOCAL)  (Type->NOTYPE) 
__floatdidf                              = 0x00125DC8; // type:func    (Size->152)   
//__gnu_compiled_c                         = 0x00125E60; // (Region->LOCAL)  (Type->NOTYPE) 

//gcc2_compiled.                         = 0x00125E60; // (Region->LOCAL)  (Type->NOTYPE) 
__floatdisf                              = 0x00125E60; // type:func    (Size->224)   
//__gnu_compiled_c                         = 0x00125F40; // (Region->LOCAL)  (Type->NOTYPE) 

//gcc2_compiled.                         = 0x00125F40; // (Region->LOCAL)  (Type->NOTYPE) 
__moddi3                                 = 0x00125F40; // type:func    (Size->1640)  
//__gnu_compiled_c                         = 0x001265A8; // (Region->LOCAL)  (Type->NOTYPE) 

//gcc2_compiled.                         = 0x001265A8; // (Region->LOCAL)  (Type->NOTYPE) 
__muldi3                                 = 0x001265A8; // type:func    (Size->96)    
//__gnu_compiled_c                         = 0x00126608; // (Region->LOCAL)  (Type->NOTYPE) 

//gcc2_compiled.                         = 0x00126608; // (Region->LOCAL)  (Type->NOTYPE) 
__udivdi3                                = 0x00126608; // type:func    (Size->1488)  
//__gnu_compiled_c                         = 0x00126BD8; // (Region->LOCAL)  (Type->NOTYPE) 

//gcc2_compiled.                         = 0x00126BD8; // (Region->LOCAL)  (Type->NOTYPE) 
__umoddi3                                = 0x00126BD8; // type:func    (Size->1344)  
//__gnu_compiled_c                         = 0x00127118; // (Region->LOCAL)  (Type->NOTYPE) 

//gcc2_compiled.                         = 0x00127118; // (Region->LOCAL)  (Type->NOTYPE) 
__pack_d                                 = 0x00127118; // type:func    (Size->300)   
__unpack_d                               = 0x00127248; // type:func    (Size->156)   
_fpadd_parts                             = 0x001272E8; // type:func    (Size->576)   
dpadd                                    = 0x00127528; // type:func    (Size->88)    
dpsub                                    = 0x00127580; // type:func    (Size->100)   
dpmul                                    = 0x001275E8; // type:func    (Size->680)   
dpdiv                                    = 0x00127890; // type:func    (Size->360)   
__fpcmp_parts_d                          = 0x001279F8; // type:func    (Size->276)   
dpcmp                                    = 0x00127B10; // type:func    (Size->76)    
litodp                                   = 0x00127B60; // type:func    (Size->184)   
dptoli                                   = 0x00127C18; // type:func    (Size->148)   
dptoul                                   = 0x00127CB0; // type:func    (Size->160)   
__negdf2                                 = 0x00127D50; // type:func    (Size->56)    
__make_dp                                = 0x00127D88; // type:func    (Size->44)    
dptofp                                   = 0x00127DB8; // type:func    (Size->84)    
//__gnu_compiled_c                         = 0x00127E10; // (Region->LOCAL)  (Type->NOTYPE) 

//gcc2_compiled.                         = 0x00127E10; // (Region->LOCAL)  (Type->NOTYPE) 
__pack_f                                 = 0x00127E10; // type:func    (Size->268)   
__unpack_f                               = 0x00127F20; // type:func    (Size->144)   
//_fpadd_parts                             = 0x00127FB0; // type:func    (Size->564)   
fpadd                                    = 0x001281E8; // type:func    (Size->88)    
fpsub                                    = 0x00128240; // type:func    (Size->100)   
fpmul                                    = 0x001282A8; // type:func    (Size->500)   
fpdiv                                    = 0x001284A0; // type:func    (Size->352)   
__fpcmp_parts_f                          = 0x00128600; // type:func    (Size->276)   
fpcmp                                    = 0x00128718; // type:func    (Size->76)    
sitofp                                   = 0x00128768; // type:func    (Size->184)   
fptosi                                   = 0x00128820; // type:func    (Size->140)   
fptoui                                   = 0x001288B0; // type:func    (Size->152)   
__negsf2                                 = 0x00128948; // type:func    (Size->56)    
__make_fp                                = 0x00128980; // type:func    (Size->44)    
fptodp                                   = 0x001289B0; // type:func    (Size->64)    
main                                     = 0x001289F0; // type:func    (Size->1532)  
gmsysTotalInit                           = 0x00128FF0; // type:func    (Size->868)   
gmsysInitIop                             = 0x00129360; // type:func    (Size->528)   
gmsysSetModule                           = 0x00129570; // type:func    (Size->80)    
gmsysInitGsRegister                      = 0x001295C0; // type:func    (Size->348)   
gmsysSetScreenMode_normal                = 0x00129720; // type:func    (Size->12)    
gmsysSetScreenMode_on_play               = 0x00129730; // type:func    (Size->16)    
gmsysSetScrMode__normal                  = 0x00129740; // type:func    (Size->128)   
gmsysSetScrMode__depth_of_field          = 0x001297C0; // type:func    (Size->128)   
gmsysSetScrMode__anti_alias              = 0x00129840; // type:func    (Size->132)   
gmsysResetBlurPow                        = 0x001298D0; // type:func    (Size->76)    
gmsysSetBlurPow                          = 0x00129920; // type:func    (Size->68)    
gmsysSetWndBlurPow                       = 0x00129970; // type:func    (Size->88)    
gmsysSetScrChangeColor                   = 0x001299D0; // type:func    (Size->72)    
gmsysSetScrFlipMode                      = 0x00129A20; // type:func    (Size->28)    
gmsysSetScrActiveWnd                     = 0x00129A40; // type:func    (Size->40)    
gmsysSetScrDivType                       = 0x00129A70; // type:func    (Size->60)    
gmsysSetScrDivLine                       = 0x00129AB0; // type:func    (Size->164)   
uldvdInitCdvd_DRIVE                      = 0x00129B60; // type:func    (Size->212)   
uldvdSetReadFile_DRIVE                   = 0x00129C40; // type:func    (Size->356)   
uldvdReadData_DRIVE                      = 0x00129DB0; // type:func    (Size->332)   
uldvdStartReadData_DRIVE                 = 0x00129F00; // type:func    (Size->836)   
uldvdCheckFinish_DRIVE                   = 0x0012A250; // type:func    (Size->1268)  
uldvdCheckReadPer_DRIVE                  = 0x0012A750; // type:func    (Size->16)    
ulcodInitCoordinate                      = 0x0012A760; // type:func    (Size->80)    
ulcodLinkCoordinate                      = 0x0012A7B0; // type:func    (Size->68)    
ulcodSetVsMatrix                         = 0x0012A800; // type:func    (Size->48)    
ulcodGetWvMatrix                         = 0x0012A830; // type:func    (Size->104)   
ulcodSetWvMatrix                         = 0x0012A8A0; // type:func    (Size->52)    
ulcodGetLwMatrix                         = 0x0012A8E0; // type:func    (Size->248)   
ulcodGetWsMatrix                         = 0x0012A9E0; // type:func    (Size->64)    
ulgifTermPacket                          = 0x0012AA20; // type:func    (Size->64)    
ulgifDmaSend                             = 0x0012AA60; // type:func    (Size->64)    
ulgifDmaWait                             = 0x0012AAA0; // type:func    (Size->48)    
ulgifAddCNTReserve                       = 0x0012AAD0; // type:func    (Size->104)   
ulgifAddSetGsRegister                    = 0x0012AB40; // type:func    (Size->116)   
ulgifAddCNTSetGsRegister                 = 0x0012ABC0; // type:func    (Size->92)    
ulpktInitALPHA                           = 0x0012AC20; // type:func    (Size->120)   
ulpktInitF3                              = 0x0012ACA0; // type:func    (Size->96)    
ulpktInitG3                              = 0x0012AD00; // type:func    (Size->100)   
ulpktInitF4                              = 0x0012AD70; // type:func    (Size->88)    
ulpktInitG4                              = 0x0012ADD0; // type:func    (Size->108)   
ulpktInitFT4                             = 0x0012AE40; // type:func    (Size->276)   
ulpktInitGT4                             = 0x0012AF60; // type:func    (Size->284)   
ulgraphSetDefFrameBuff                   = 0x0012B080; // type:func    (Size->2304)  
ulgraphCopyDrawToDispBuffer              = 0x0012B980; // type:func    (Size->1568)  
ulgraphFlipFrameBuff                     = 0x0012BFA0; // type:func    (Size->1100)  
ulgraphCleanFrameBuff                    = 0x0012C3F0; // type:func    (Size->340)   
ulgraphSetDefDispEnv                     = 0x0012C550; // type:func    (Size->1596)  
ulgraphPutDispEnv                        = 0x0012CB90; // type:func    (Size->180)   
ulgraphSetDefFbufEnv                     = 0x0012CC50; // type:func    (Size->628)   
ulgraphSetDefDrawCmnEnv                  = 0x0012CED0; // type:func    (Size->208)   
ulgraphSetDefAlphaEnv                    = 0x0012CFA0; // type:func    (Size->552)   
ulgraphSetDefDrawEnv                     = 0x0012D1D0; // type:func    (Size->780)   
ulgraphPutDrawEnv                        = 0x0012D4E0; // type:func    (Size->116)   
ulgraphEffectDepthOfField                = 0x0012D560; // type:func    (Size->3104)  
ulInitHeap                               = 0x0012E180; // type:func    (Size->188)   
ulMalloc                                 = 0x0012E240; // type:func    (Size->280)   
ulFree                                   = 0x0012E360; // type:func    (Size->156)   
ulDumpHeapInfo                           = 0x0012E400; // type:func    (Size->556)   
ulmcSysInit                              = 0x0012E630; // type:func    (Size->72)    
ulmcSysReset                             = 0x0012E680; // type:func    (Size->440)   
ulmcSetUseSlot                           = 0x0012E840; // type:func    (Size->32)    
ulmcGetFstat                             = 0x0012E860; // type:func    (Size->16)    
ulmcGetCardInfo                          = 0x0012E870; // type:func    (Size->48)    
ulmcServer                               = 0x0012E8A0; // type:func    (Size->2436)  
ulmcSync                                 = 0x0012F230; // type:func    (Size->260)   
ulmcCallBack                             = 0x0012F340; // type:func    (Size->580)   
ulmcGetInfo                              = 0x0012F590; // type:func    (Size->128)   
ulmcChDir                                = 0x0012F610; // type:func    (Size->284)   
ulmcMkDir                                = 0x0012F730; // type:func    (Size->184)   
ulmcGetDir                               = 0x0012F7F0; // type:func    (Size->304)   
ulmcIsExist                              = 0x0012F920; // type:func    (Size->80)    
ulmcLoad                                 = 0x0012F970; // type:func    (Size->444)   
ulmcSave                                 = 0x0012FB30; // type:func    (Size->444)   
ulmcFormat                               = 0x0012FCF0; // type:func    (Size->128)   
ulmcDelete                               = 0x0012FD70; // type:func    (Size->184)   
ulmcDeleteAll                            = 0x0012FE30; // type:func    (Size->212)   
ulmcClearIconSys                         = 0x0012FF10; // type:func    (Size->272)   
ulmcCheckSlotNo                          = 0x00130020; // type:func    (Size->60)    
ulmdlPrimPhysiqueStripGT                 = 0x00130060; // type:func    (Size->480)   
ulmdlPrimMeshStripGT                     = 0x00130240; // type:func    (Size->492)   
ulmdlPrimPhysiqueStripGTalpha            = 0x00130430; // type:func    (Size->732)   
ulmdlPrimMeshStripGTalpha                = 0x00130710; // type:func    (Size->748)   
ulmdlPrimPhysiqueStripGT_Ambient         = 0x00130A00; // type:func    (Size->440)   
ulmdlPrimMeshStripGT_Ambient             = 0x00130BC0; // type:func    (Size->452)   
ulmdlPrimPhysiqueStripGT_Envmap          = 0x00130D90; // type:func    (Size->496)   
ulmdlPrimMeshStripGT_Envmap              = 0x00130F80; // type:func    (Size->508)   
ulmdlPrimPhysiqueStripGT_Highlight       = 0x00131180; // type:func    (Size->536)   
ulmdlPrimMeshStripGT_Highlight           = 0x001313A0; // type:func    (Size->548)   
ulmdlPrimPhysiqueStripGT_Shadow          = 0x001315D0; // type:func    (Size->404)   
ulmdlPrimMeshStripGT_Shadow              = 0x00131770; // type:func    (Size->400)   
ul3dScaleMatrixXYZ                       = 0x00131900; // type:func    (Size->96)    
ulmdlInitModel                           = 0x00131960; // type:func    (Size->948)   
ulmdlSetModelTexture                     = 0x00131D20; // type:func    (Size->316)   
ulmdlSetObjCoordinate                    = 0x00131E60; // type:func    (Size->1632)  
ulmdlDrawModelPkt                        = 0x001324C0; // type:func    (Size->1296)  
ulmdlCalcPhysiqueStrip                   = 0x001329D0; // type:func    (Size->176)   
ulpadInit                                = 0x00132A80; // type:func    (Size->204)   
ulpadInitData                            = 0x00132B50; // type:func    (Size->388)   
ulpadOpenPort                            = 0x00132CE0; // type:func    (Size->80)    
ulpadGet                                 = 0x00132D30; // type:func    (Size->848)   
ulpadSetAna                              = 0x00133080; // type:func    (Size->176)   
ulpadSetDual                             = 0x00133130; // type:func    (Size->188)   
ulpadSetAnaRef                           = 0x001331F0; // type:func    (Size->52)    
ulpadSetRepFrame                         = 0x00133230; // type:func    (Size->160)   
ulpadInitDual                            = 0x001332D0; // type:func    (Size->1472)  
ulpadStopDual                            = 0x00133890; // type:func    (Size->428)   
ulpadUpdateDual                          = 0x00133A40; // type:func    (Size->1548)  
ulpadGetActData                          = 0x00134050; // type:func    (Size->1496)  
ulpadSetDualLv                           = 0x00134630; // type:func    (Size->124)   
ulpadSetDualPause                        = 0x001346B0; // type:func    (Size->516)   
ulpadInitFig                             = 0x001348C0; // type:func    (Size->292)   
ulpadInitActInfo                         = 0x001349F0; // type:func    (Size->132)   
ulpadInitActCtrl                         = 0x00134A80; // type:func    (Size->80)    
ulpadInitMode                            = 0x00134AD0; // type:func    (Size->56)    
ulpadInitInfo                            = 0x00134B10; // type:func    (Size->160)   
ulpadInitOption                          = 0x00134BB0; // type:func    (Size->28)    
ulpadRead                                = 0x00134BD0; // type:func    (Size->3816)  
ulpadChangeAna                           = 0x00135AC0; // type:func    (Size->292)   
ulpadChangePress                         = 0x00135BF0; // type:func    (Size->308)   
ulpadSetActData                          = 0x00135D30; // type:func    (Size->408)   
ulpadSynActData                          = 0x00135ED0; // type:func    (Size->188)   
ulsdInit                                 = 0x00135F90; // type:func    (Size->88)    
ulsdSetMasterVol                         = 0x00135FF0; // type:func    (Size->180)   
ulsdSetEffectReturnVol                   = 0x001360B0; // type:func    (Size->180)   
ulsdSetOutSideVol                        = 0x00136170; // type:func    (Size->180)   
ulsdSetSoundDataVol                      = 0x00136230; // type:func    (Size->180)   
ulsdSetEffectAttr                        = 0x001362F0; // type:func    (Size->104)   
ulsdSetMixAft                            = 0x00136360; // type:func    (Size->120)   
ulsdSetEffectEndAddr                     = 0x001363E0; // type:func    (Size->120)   
ulsdSetEffectEnable                      = 0x00136460; // type:func    (Size->120)   
ulsdEntryBatch                           = 0x001364E0; // type:func    (Size->144)   
number                                   = 0x00136570; // type:func    (Size->660)   
skip_atoi                                = 0x00136810; // type:func    (Size->148)   
sprintf_sub                              = 0x001368B0; // type:func    (Size->1308)  
ulstdSprintf                             = 0x00136DD0; // type:func    (Size->160)   
ulstdPrintf                              = 0x00136E70; // type:func    (Size->172)   
ulsysInitSystem                          = 0x00136F20; // type:func    (Size->1056)  
ulsysSetScreenMode                       = 0x00137340; // type:func    (Size->168)   
ulvif1DmaSend                            = 0x001373F0; // type:func    (Size->60)    
ulvif1DmaWait                            = 0x00137430; // type:func    (Size->48)    
audioDecCreate                           = 0x00137460; // type:func    (Size->376)   
audioDecDelete                           = 0x001375E0; // type:func    (Size->124)   
audioDecResume                           = 0x00137660; // type:func    (Size->148)   
audioDecStart                            = 0x00137700; // type:func    (Size->40)    
audioDecBeginPut                         = 0x00137730; // type:func    (Size->368)   
audioDecEndPut                           = 0x001378A0; // type:func    (Size->276)   
audioDecIsPreset                         = 0x001379C0; // type:func    (Size->44)    
audioDecSendToIOP                        = 0x001379F0; // type:func    (Size->720)   
audioIopGetArea                          = 0x00137CC0; // type:func    (Size->332)   
audioSendToIOP2area                      = 0x00137E10; // type:func    (Size->512)   
audioSendToIOP                           = 0x00138010; // type:func    (Size->168)   
audioChangeInputVolume                   = 0x001380C0; // type:func    (Size->76)    
ulmov2dispCreate                         = 0x00138110; // type:func    (Size->244)   
ulmov2dispSetTags                        = 0x00138210; // type:func    (Size->1448)  
DmaAddr                                  = 0x001387C0; // (Region->MULTID) (Type->FUNC)    (Size->32)    
UncAddr                                  = 0x001387E0; // (Region->MULTID) (Type->FUNC)    (Size->40)    
ulmov2LoadImage                          = 0x00138810; // type:func    (Size->80)    
ulmov2vblankHandler                      = 0x00138860; // type:func    (Size->780)   
ulmov2handler_endimage                   = 0x00138B70; // type:func    (Size->68)    
ulmov2startDisplay                       = 0x00138BC0; // type:func    (Size->80)    
ulmov2endDisplay                         = 0x00138C10; // type:func    (Size->12)    
ulmov2videoCallback                      = 0x00138C20; // type:func    (Size->456)   
ulmov2pcmCallback                        = 0x00138DF0; // type:func    (Size->388)   
ulmov2copy2area                          = 0x00138F80; // type:func    (Size->428)   
readBufCreate                            = 0x00139130; // type:func    (Size->76)    
readBufDelete                            = 0x00139180; // type:func    (Size->16)    
readBufBeginPut                          = 0x00139190; // type:func    (Size->112)   
readBufEndPut                            = 0x00139200; // type:func    (Size->252)   
readBufBeginGet                          = 0x00139300; // type:func    (Size->172)   
readBufEndGet                            = 0x001393B0; // type:func    (Size->144)   
ulmov2strFileOpen                        = 0x00139440; // type:func    (Size->316)   
ulmov2strFileClose                       = 0x00139580; // type:func    (Size->96)    
ulmov2strFileRead                        = 0x001395E0; // type:func    (Size->220)   
viGetFIFOindex                           = 0x001396C0; // type:func    (Size->124)   
//viSetD3_CHCR                             = 0x00139740; // type:func    (Size->128)   
//viSetD4_CHCR                             = 0x001397C0; // type:func    (Size->128)   
ulmov2scTag2                             = 0x00139840; // type:func    (Size->92)    
viBufCreate                              = 0x001398A0; // type:func    (Size->192)   
viBufReset                               = 0x00139960; // type:func    (Size->480)   
viBufBeginPut                            = 0x00139B40; // type:func    (Size->368)   
viBufEndPut                              = 0x00139CB0; // type:func    (Size->112)   
viBufAddDMA                              = 0x00139D20; // type:func    (Size->816)   
viBufStopDMA                             = 0x0013A050; // type:func    (Size->304)   
viBufRestartDMA                          = 0x0013A180; // type:func    (Size->1352)  
viBufDelete                              = 0x0013A6D0; // type:func    (Size->96)    
viBufCount                               = 0x0013A730; // type:func    (Size->96)    
viBufFlush                               = 0x0013A790; // type:func    (Size->108)   
viBufModifyPts                           = 0x0013A800; // type:func    (Size->608)   
ulmov2IsPtsInRegion                      = 0x0013AA60; // type:func    (Size->92)    
viBufPutTs                               = 0x0013AAC0; // type:func    (Size->400)   
viBufGetTs                               = 0x0013AC50; // type:func    (Size->720)   
videoDecCreate                           = 0x0013AF20; // type:func    (Size->268)   
videoDecSetStream                        = 0x0013B030; // type:func    (Size->76)    
videoDecBeginPut                         = 0x0013B080; // type:func    (Size->76)    
videoDecEndPut                           = 0x0013B0D0; // type:func    (Size->52)    
videoDecReset                            = 0x0013B110; // type:func    (Size->32)    
videoDecDelete                           = 0x0013B130; // type:func    (Size->60)    
videoDecAbort                            = 0x0013B170; // type:func    (Size->36)    
videoDecGetState                         = 0x0013B1A0; // type:func    (Size->28)    
videoDecSetState                         = 0x0013B1C0; // type:func    (Size->56)    
videoDecPutTs                            = 0x0013B200; // type:func    (Size->112)   
videoDecInputCount                       = 0x0013B270; // type:func    (Size->44)    
videoDecFlush                            = 0x0013B2A0; // type:func    (Size->284)   
videoDecIsFlushed                        = 0x0013B3C0; // type:func    (Size->88)    
videoDecMain                             = 0x0013B420; // type:func    (Size->116)   
videoDecBs0                              = 0x0013B4A0; // type:func    (Size->740)   
videoMpegError                           = 0x0013B790; // type:func    (Size->56)    
videoMpegNodata                          = 0x0013B7D0; // type:func    (Size->56)    
videoMpegStopDMA                         = 0x0013B810; // type:func    (Size->48)    
videoMpegRestartDMA                      = 0x0013B840; // type:func    (Size->48)    
videoMpegTS                              = 0x0013B870; // type:func    (Size->80)    
ulmov2cpy2area                           = 0x0013B8C0; // type:func    (Size->428)   
voBufCreate                              = 0x0013BA70; // type:func    (Size->180)   
voBufDelete                              = 0x0013BB30; // type:func    (Size->16)    
voBufReset                               = 0x0013BB40; // type:func    (Size->40)    
voBufIsFull                              = 0x0013BB70; // type:func    (Size->44)    
voBufIncCount                            = 0x0013BBA0; // type:func    (Size->172)   
voBufGetData                             = 0x0013BC50; // type:func    (Size->120)   
voBufIsEmpty                             = 0x0013BCD0; // type:func    (Size->36)    
voBufGetTag                              = 0x0013BD00; // type:func    (Size->180)   
voBufDecCount                            = 0x0013BDC0; // type:func    (Size->52)    
ulmov2InitMovie                          = 0x0013BE00; // type:func    (Size->28)    
ulmov2SetMovie_DRIVE                     = 0x0013BE20; // type:func    (Size->1616)  
ulmov2GetState                           = 0x0013C470; // type:func    (Size->100)   
ulmov2CancelMovie                        = 0x0013C4E0; // type:func    (Size->40)    
ulmov2FlushMovie                         = 0x0013C510; // type:func    (Size->176)   
ulmov2DeleteMovie                        = 0x0013C5C0; // type:func    (Size->448)   
ulmov2PlayMovie                          = 0x0013C780; // type:func    (Size->476)   
ulmov2ChangeVolume                       = 0x0013C960; // type:func    (Size->60)    
ulmov2SwitchThread                       = 0x0013C9A0; // type:func    (Size->40)    
ulmov2SyncPlay                           = 0x0013C9D0; // type:func    (Size->116)   
ulmov2EndFrame                           = 0x0013CA50; // type:func    (Size->176)   
ulmov2GetMpegFrame                       = 0x0013CB00; // type:func    (Size->20)    
ulmov2IsPlaying                          = 0x0013CB20; // type:func    (Size->16)    
defMain                                  = 0x0013CB30; // type:func    (Size->24)    
ulgraphAlphaInitBuf                      = 0x0013CB50; // type:func    (Size->116)   
ulgraphAlphaResetBuf                     = 0x0013CBD0; // type:func    (Size->80)    
ulgraphAlphaOpenPacket                   = 0x0013CC20; // type:func    (Size->28)    
ulgraphAlphaClosePacket                  = 0x0013CC40; // type:func    (Size->272)   
ulgraphAlphaSortPacket                   = 0x0013CD50; // type:func    (Size->112)   
_ulgraphAlphaSort                        = 0x0013CDC0; // type:func    (Size->404)   
ulgraphAlphaDrawPacket                   = 0x0013CF60; // type:func    (Size->80)    
ultexResetTex                            = 0x0013CFB0; // type:func    (Size->28)    
ultexGetOffset                           = 0x0013CFD0; // type:func    (Size->12)    
ultexGetNTex                             = 0x0013CFE0; // type:func    (Size->28)    
ultexGetUseBlock                         = 0x0013D000; // type:func    (Size->28)    
ultexGetMipMap                           = 0x0013D020; // type:func    (Size->64)    
ultexGetMipMapLevel                      = 0x0013D060; // type:func    (Size->28)    
ultexGetUseMemory                        = 0x0013D080; // type:func    (Size->44)    
ultexSetAlign                            = 0x0013D0B0; // type:func    (Size->44)    
ultexTransTex                            = 0x0013D0E0; // type:func    (Size->96)    
ultexTransTexNonMipMap                   = 0x0013D140; // type:func    (Size->1096)  
ultexTransTexMipMap                      = 0x0013D590; // type:func    (Size->1184)  
ultexTransTexTag                         = 0x0013DA30; // type:func    (Size->4784)  
ultexGetTex                              = 0x0013ECE0; // type:func    (Size->252)   
ultexSetTexPath2                         = 0x0013EDE0; // type:func    (Size->384)   
ultexSetTexPath3                         = 0x0013EF60; // type:func    (Size->364)   
ultexGetTEX0                             = 0x0013F0D0; // type:func    (Size->460)   
ultexGetAlign                            = 0x0013F2A0; // type:func    (Size->56)    
ulmdlPrimPhysiqueStripGT_Toon            = 0x0013F2E0; // type:func    (Size->748)   
ulmdlPrimMeshStripGT_Toon                = 0x0013F5D0; // type:func    (Size->748)   
ulvumdlInitModel                         = 0x0013F8C0; // type:func    (Size->928)   
ulvumdlDrawModel                         = 0x0013FC60; // type:func    (Size->1692)  
ulvumdlDrawModelAlpha                    = 0x00140300; // type:func    (Size->472)   
_calcMatrix                              = 0x001404E0; // type:func    (Size->676)   
_drawPrimRigidAlpha                      = 0x00140790; // type:func    (Size->1108)  
_drawPrimBrendAlpha                      = 0x00140BF0; // type:func    (Size->1204)  
ulvumdlGetMatrix                         = 0x001410B0; // type:func    (Size->172)   
ulvumdlInitVerShadeWind                  = 0x00141160; // type:func    (Size->256)   
ulvumdlCalcVerShadeWind                  = 0x00141260; // type:func    (Size->428)   
xmemInitHeap                             = 0x00141410; // type:func    (Size->112)   
xmemMalloc                               = 0x00141480; // type:func    (Size->280)   
xmemMalloc2                              = 0x001415A0; // type:func    (Size->268)   
xmemFree                                 = 0x001416B0; // type:func    (Size->448)   
xmemMallocStat                           = 0x00141870; // type:func    (Size->328)   
xmemCheckExistMemory                     = 0x001419C0; // type:func    (Size->216)   
ulsprMemcpy                              = 0x00141AA0; // type:func    (Size->200)   
ulstrAsciitoSjis                         = 0x00141B70; // type:func    (Size->772)   
tmgraphSetMatrix                         = 0x00141E80; // type:func    (Size->888)   
tmgraphGetFogCoef                        = 0x00142200; // type:func    (Size->220)   
tmgraphCheckClipFlag                     = 0x001422E0; // type:func    (Size->240)   
tmgraphScissorAlphaPolyT                 = 0x001423D0; // type:func    (Size->844)   
tmgraphDivideMain                        = 0x00142720; // type:func    (Size->940)   
tmgraphDivideSub                         = 0x00142AD0; // type:func    (Size->272)   
tmgraphCheckClip                         = 0x00142BE0; // (Region->MULTID) (Type->FUNC)    (Size->76)    
tmgraphRTPSpriteAddAlphaBufT__           = 0x00142C30; // type:func    (Size->1424)  
tmgraphRTPAddAlphaBufG_T__               = 0x001431C0; // type:func    (Size->1044)  
tmcrsInit                                = 0x001435E0; // type:func    (Size->1036)  
tmcrsEnd                                 = 0x001439F0; // type:func    (Size->184)   
tmcrsReset                               = 0x00143AB0; // type:func    (Size->40)    
tmcrsFinish                              = 0x00143AE0; // type:func    (Size->32)    
tmcrsInitBase                            = 0x00143B00; // type:func    (Size->892)   
tmcrsInitDraw                            = 0x00143E80; // type:func    (Size->1324)  
tmcrsInitAlpha                           = 0x001443B0; // type:func    (Size->892)   
tmcrsInitHit                             = 0x00144730; // type:func    (Size->244)   
tmcrsInitVector                          = 0x00144830; // type:func    (Size->244)   
tmcrsInitRail                            = 0x00144930; // type:func    (Size->216)   
tmcrsInitBonk                            = 0x00144A10; // type:func    (Size->244)   
tmcrsDraw                                = 0x00144B10; // type:func    (Size->1100)  
tmcrsSetDrawLength                       = 0x00144F60; // type:func    (Size->44)    
tmcrsGetDrawLength                       = 0x00144F90; // type:func    (Size->16)    
tmcrsDrawBase                            = 0x00144FA0; // type:func    (Size->612)   
tmcrsDrawDraw                            = 0x00145210; // type:func    (Size->1308)  
tmcrsDrawAlpha                           = 0x00145730; // type:func    (Size->620)   
tmcrsSetRegister                         = 0x001459A0; // type:func    (Size->384)   
tmcrsGetBaseCollision                    = 0x00145B20; // type:func    (Size->880)   
tmcrsGetHitCollision                     = 0x00145E90; // type:func    (Size->188)   
tmcrsGetVectorCollision                  = 0x00145F50; // type:func    (Size->536)   
tmcrsGetRailCollision                    = 0x00146170; // type:func    (Size->2328)  
tmcrsGetBonkCollision                    = 0x00146A90; // type:func    (Size->576)   
tmcrsMakeCollisionMatrix                 = 0x00146CD0; // type:func    (Size->132)   
tmcrsCheckCollisionBound                 = 0x00146D60; // type:func    (Size->64)    
tmcrsGetCollisionSub                     = 0x00146DA0; // type:func    (Size->236)   
tmcrsGetVectorCollisionSub               = 0x00146E90; // type:func    (Size->1164)  
tmcrsInitTex                             = 0x00147320; // type:func    (Size->4060)  
tmcrsTransTex                            = 0x00148300; // type:func    (Size->256)   
tmcrsGetTex1Register                     = 0x00148400; // type:func    (Size->196)   
tmcrsTexIntrFunc                         = 0x001484D0; // type:func    (Size->792)   
tmcrsTransAlphaTex                       = 0x001487F0; // type:func    (Size->872)   
tmcrsEndTex                              = 0x00148B60; // type:func    (Size->296)   
tmcrsStartTex                            = 0x00148C90; // type:func    (Size->128)   
tmcrsFinishTex                           = 0x00148D10; // type:func    (Size->100)   
tmcrsSetMipMapProcess                    = 0x00148D80; // type:func    (Size->32)    
tmcrsSetMipMapLength                     = 0x00148DA0; // type:func    (Size->52)    
tmcrsGetTexData                          = 0x00148DE0; // type:func    (Size->344)   
tmcrsResetScrollAnimTex                  = 0x00148F40; // type:func    (Size->24)    
tmcrsSetScrollTex                        = 0x00148F60; // type:func    (Size->184)   
tmcrsScrollTex                           = 0x00149020; // type:func    (Size->2084)  
tmcrsAnimTex                             = 0x00149850; // type:func    (Size->748)   
tmcrsSetDrawMipMapNo                     = 0x00149B40; // type:func    (Size->32)    
tmcrsInitBG                              = 0x00149B60; // type:func    (Size->744)   
tmcrsSetBGFog                            = 0x00149E50; // type:func    (Size->32)    
tmcrsSetBGDrawFlag                       = 0x00149E70; // type:func    (Size->32)    
tmcrsSetBGColor                          = 0x00149E90; // type:func    (Size->76)    
tmcrsSetBGNo                             = 0x00149EE0; // type:func    (Size->32)    
tmcrsDrawBG                              = 0x00149F00; // type:func    (Size->668)   
tmcrsEndBG                               = 0x0014A1A0; // type:func    (Size->56)    
tmcrsInitObject                          = 0x0014A1E0; // type:func    (Size->2368)  
tmcrsCheckObjectAlpha                    = 0x0014AB20; // type:func    (Size->240)   
tmcrsMappingObjectTexture                = 0x0014AC10; // type:func    (Size->860)   
tmcrsResetAllObject                      = 0x0014AF70; // type:func    (Size->100)   
tmcrsResetObject                         = 0x0014AFE0; // type:func    (Size->1656)  
tmcrsSetObjectDrawLength                 = 0x0014B660; // type:func    (Size->32)    
tmcrsSetObjectHitLength                  = 0x0014B680; // type:func    (Size->40)    
tmcrsSetObjectBound                      = 0x0014B6B0; // type:func    (Size->212)   
tmcrsSetObjectWeight                     = 0x0014B790; // type:func    (Size->72)    
tmcrsGetObjectPosition                   = 0x0014B7E0; // type:func    (Size->140)   
tmcrsSetObjectBonk                       = 0x0014B870; // type:func    (Size->192)   
tmcrsSetObjectBonkLength                 = 0x0014B930; // type:func    (Size->68)    
tmcrsGetObjectBonk                       = 0x0014B980; // type:func    (Size->52)    
tmcrsSetObjectAttr                       = 0x0014B9C0; // type:func    (Size->60)    
tmcrsSetObjectDrawFlag                   = 0x0014BA00; // type:func    (Size->60)    
tmcrsGetObjectDrawFlag                   = 0x0014BA40; // type:func    (Size->52)    
tmcrsSetObjectScissorFlag                = 0x0014BA80; // type:func    (Size->60)    
tmcrsMoveObject                          = 0x0014BAC0; // type:func    (Size->752)   
tmcrsMoveObject2                         = 0x0014BDB0; // type:func    (Size->464)   
tmcrsMoveObject2XYZ                      = 0x0014BF80; // type:func    (Size->468)   
tmcrsMoveObjectMat                       = 0x0014C160; // type:func    (Size->292)   
tmcrsGetObjectCollision                  = 0x0014C290; // type:func    (Size->1768)  
tmcrsCheckObjectCollision                = 0x0014C980; // type:func    (Size->5332)  
tmcrsGetObjectBonkCollision              = 0x0014DE60; // type:func    (Size->1152)  
tmcrsCalcObject                          = 0x0014E2E0; // type:func    (Size->100)   
tmcrsCalcObjectUnit                      = 0x0014E350; // type:func    (Size->576)   
tmcrsCalcObjectAbs                       = 0x0014E590; // type:func    (Size->1032)  
tmcrsCalcObjectMatrix                    = 0x0014E9A0; // type:func    (Size->556)   
tmcrsCalcObjectLocal                     = 0x0014EBD0; // type:func    (Size->2048)  
tmcrsCalcObjectWorld                     = 0x0014F3D0; // type:func    (Size->500)   
tmcrsCalcObjectBound                     = 0x0014F5D0; // type:func    (Size->1928)  
tmcrsCalcObjectDivide                    = 0x0014FD60; // type:func    (Size->1664)  
tmcrsCalcObjectGravity                   = 0x001503E0; // type:func    (Size->384)   
tmcrsBreakObject                         = 0x00150560; // type:func    (Size->2736)  
tmcrsGetObjectLight                      = 0x00151010; // type:func    (Size->800)   
tmcrsDrawObject                          = 0x00151330; // type:func    (Size->1472)  
tmcrsDrawObjectVIF1                      = 0x001518F0; // type:func    (Size->572)   
tmcrsDrawObjectDivideVIF1                = 0x00151B30; // type:func    (Size->636)   
tmcrsDrawObjectSprite                    = 0x00151DB0; // type:func    (Size->532)   
tmcrsDrawObjectAlpha                     = 0x00151FD0; // type:func    (Size->512)   
tmcrsDrawObjectDivideAlpha               = 0x001521D0; // type:func    (Size->584)   
tmcrsSetObjectBlockData                  = 0x00152420; // type:func    (Size->312)   
tmcrsEndObject                           = 0x00152560; // type:func    (Size->340)   
tmcrsInitEvent                           = 0x001526C0; // type:func    (Size->1408)  
tmcrsEndEvent                            = 0x00152C40; // type:func    (Size->144)   
tmcrsResetEventModel                     = 0x00152CD0; // type:func    (Size->340)   
tmcrsGetEventModelFrame                  = 0x00152E30; // type:func    (Size->92)    
tmcrsDrawEventModel                      = 0x00152E90; // type:func    (Size->1268)  
tmcrsCalcEventModel                      = 0x00153390; // type:func    (Size->1268)  
tmcrsGetEventModelHit                    = 0x00153890; // type:func    (Size->168)   
tmcrsSetFog                              = 0x00153940; // type:func    (Size->32)    
tmcrsGetArea                             = 0x00153960; // type:func    (Size->328)   
tmcrsGetCenterPos                        = 0x00153AB0; // type:func    (Size->128)   
tmcrsChangeNo                            = 0x00153B30; // type:func    (Size->284)   
tmcrsResetRailCollision                  = 0x00153C50; // type:func    (Size->104)   
tmcrsSetRailCollision                    = 0x00153CC0; // type:func    (Size->52)    
tmcrsResetHitCollision                   = 0x00153D00; // type:func    (Size->132)   
tmcrsSetHitCollision                     = 0x00153D90; // type:func    (Size->192)   
tmcrsGetDrawArea                         = 0x00153E50; // type:func    (Size->2820)  
tmcrsCheckDrawArea                       = 0x00154960; // type:func    (Size->500)   
tmcrsSetViewAngle                        = 0x00154B60; // type:func    (Size->32)    
tmcrsSetMipModelLevel                    = 0x00154B80; // type:func    (Size->32)    
David_CheckBaseBlock                     = 0x00154BA0; // type:func    (Size->472)   
David_PutRaysInVU0                       = 0x00154D80; // type:func    (Size->120)   
David_GetBaseCollision2                  = 0x00154E00; // type:func    (Size->584)   
David_CheckHitData                       = 0x00155050; // type:func    (Size->520)   
David_GetHitCollision2                   = 0x00155260; // type:func    (Size->364)   
David_tmcrsInitBlockBound                = 0x001553D0; // type:func    (Size->896)   
David_tmcrsGetObjectCollision2           = 0x00155750; // type:func    (Size->212)   
David_tmcrsGetObjectCollision            = 0x00155830; // type:func    (Size->1768)  
tmalphaSetTestReg                        = 0x00155F20; // type:func    (Size->924)   
maQuatSlerp                              = 0x001562C0; // type:func    (Size->428)   
bezierVector                             = 0x00156470; // type:func    (Size->220)   
euler2Quat                               = 0x00156550; // type:func    (Size->528)   
matrix2Euler                             = 0x00156760; // type:func    (Size->644)   
quat2Matrix                              = 0x001569F0; // type:func    (Size->560)   
maIKSet                                  = 0x00156C20; // type:func    (Size->36)    
maMdlMotionMap                           = 0x00156C50; // type:func    (Size->700)   
maMdlMotionInit                          = 0x00156F10; // type:func    (Size->484)   
maMdlMotionInitEnd                       = 0x00157100; // type:func    (Size->56)    
maMdlMotionDirect                        = 0x00157140; // type:func    (Size->608)   
maMdlMotionRealBrendDirect               = 0x001573A0; // type:func    (Size->728)   
maGetMdlMotionFrame                      = 0x00157680; // type:func    (Size->156)   
maMdlMotionRealDirBrendDirect            = 0x00157720; // type:func    (Size->796)   
maMdlMotionRealDirBrendDirect2           = 0x00157A40; // type:func    (Size->820)   
maVuMdlMotionCtrl                        = 0x00157D80; // type:func    (Size->2440)  
//.vu.dlMotionPosDirect                    = 0x00158710; // type:func    (Size->516)   
//.vu.dlMotionRotDirect                    = 0x00158920; // type:func    (Size->452)   
//.vu.dlMotionBrendPosDirect               = 0x00158AF0; // type:func    (Size->972)   
//.vu.dlMotionBrendRotDirect               = 0x00158EC0; // type:func    (Size->844)   
//.vu.dlMotionRealBrendPosDirect           = 0x00159210; // type:func    (Size->568)   
//.vu.dlMotionRealBrendRotDirect           = 0x00159450; // type:func    (Size->504)   
//.vu.dlMotionRealDirBrendPosDirect        = 0x00159650; // type:func    (Size->1064)  
//.vu.dlMotionRealDirBrendRotDirect        = 0x00159A80; // type:func    (Size->680)   
//.vu.dlMotionRealDirBrendPosDirect2       = 0x00159D30; // type:func    (Size->776)   
//.vu.dlMotionRealDirBrendRotDirect2       = 0x0015A040; // type:func    (Size->616)   
maVuMdlIKInit                            = 0x0015A2B0; // type:func    (Size->2504)  
//.vu.dlCoord                              = 0x0015AC80; // type:func    (Size->172)   
maVuMdlIKCtrl                            = 0x0015AD30; // type:func    (Size->1068)  
//.vu.dlIKCoord                            = 0x0015B160; // type:func    (Size->1236)  
//.vu.dlIKComp                             = 0x0015B640; // type:func    (Size->2568)  
maSecMotionInit                          = 0x0015C050; // type:func    (Size->1380)  
maSecMotionCtrl                          = 0x0015C5C0; // type:func    (Size->2244)  
maCreateModelLink                        = 0x0015CE90; // type:func    (Size->1520)  
maCreateModelFree                        = 0x0015D480; // type:func    (Size->40)    
maSetModelMode                           = 0x0015D4B0; // type:func    (Size->156)   
maGetModelScale                          = 0x0015D550; // type:func    (Size->352)   
maSetModelScaleCancel                    = 0x0015D6B0; // type:func    (Size->32)    
maModelChangeInit                        = 0x0015D6D0; // type:func    (Size->672)   
maSecMotionMode                          = 0x0015D970; // type:func    (Size->36)    
maModelChangeSet                         = 0x0015D9A0; // type:func    (Size->932)   
maModelChangeInitEnd                     = 0x0015DD50; // type:func    (Size->40)    
ktmotInit                                = 0x0015DD80; // type:func    (Size->356)   
ktmotInitInfo                            = 0x0015DEF0; // type:func    (Size->116)   
ktmotInitFlip                            = 0x0015DF70; // type:func    (Size->132)   
ktmotCtrl                                = 0x0015E000; // type:func    (Size->328)   
ktmotCtrlAct                             = 0x0015E150; // type:func    (Size->14652) 
ktmotSetNewAnim                          = 0x00161A90; // type:func    (Size->356)   
ktmotSetNewAnim2                         = 0x00161C00; // type:func    (Size->180)   
ktmotEndFreeMotion                       = 0x00161CC0; // type:func    (Size->40)    
ktmotCtrlNormal                          = 0x00161CF0; // type:func    (Size->1564)  
ktmotUpdateCount                         = 0x00162310; // type:func    (Size->376)   
ktmotCtrlSecondly                        = 0x00162490; // type:func    (Size->468)   
ktmotCtrlIK                              = 0x00162670; // type:func    (Size->2912)  
ktmotSetMatrix                           = 0x001631D0; // type:func    (Size->440)   
ktmotGetNumFrame                         = 0x00163390; // type:func    (Size->120)   
ktmotSetFlip                             = 0x00163410; // type:func    (Size->256)   
ktmotUpdateFlip                          = 0x00163510; // type:func    (Size->1808)  
ktactInitCtrl                            = 0x00163C20; // type:func    (Size->3284)  
iktactMakeParam_cmn_max_speed            = 0x00164900; // (Region->MULTID) (Type->FUNC)    (Size->212)   
iktactMakeParam_max_speed                = 0x001649E0; // (Region->MULTID) (Type->FUNC)    (Size->212)   
ktactGetChrParamX10                      = 0x00164AC0; // type:func    (Size->208)   
ktactGetBrdParamX10                      = 0x00164B90; // type:func    (Size->136)   
ktactInitParam2                          = 0x00164C20; // type:func    (Size->508)   
ktactSetParam                            = 0x00164E20; // type:func    (Size->1496)  
ktactInitPos                             = 0x00165400; // type:func    (Size->256)   
ktactInitRequest                         = 0x00165500; // type:func    (Size->208)   
ktactInitInput                           = 0x001655D0; // type:func    (Size->148)   
ktactInitBalance                         = 0x00165670; // type:func    (Size->72)    
ktactResetBalance                        = 0x001656C0; // type:func    (Size->760)   
ktactInitTLinkAll                        = 0x001659C0; // type:func    (Size->120)   
ktactInitTLink                           = 0x00165A40; // type:func    (Size->124)   
ktactResetTrickPointOneSet               = 0x00165AC0; // type:func    (Size->168)   
ktactCommandInit                         = 0x00165B70; // type:func    (Size->280)   
ktactCommandReset                        = 0x00165C90; // type:func    (Size->68)    
ktactCommandResetAll                     = 0x00165CE0; // type:func    (Size->384)   
ktactCommandResetAllForGrind             = 0x00165E60; // type:func    (Size->404)   
ktactCommandResetAllForRevert            = 0x00166000; // type:func    (Size->304)   
ktactCommandResetAllForJump              = 0x00166130; // type:func    (Size->492)   
ktactCommandResetAllForTrick             = 0x00166320; // type:func    (Size->640)   
ktactCommandSet                          = 0x001665A0; // type:func    (Size->1536)  
ktactResetNumPlayTrickInLink             = 0x00166BA0; // type:func    (Size->120)   
ktactRecoverNumPlayTrick                 = 0x00166C20; // type:func    (Size->184)   
ktactSetCaminfo                          = 0x00166CE0; // type:func    (Size->1148)  
ktactSetSeinfo                           = 0x00167160; // type:func    (Size->432)   
ktactGetRotVector                        = 0x00167310; // type:func    (Size->324)   
iktactGetLenXZ                           = 0x00167460; // (Region->MULTID) (Type->FUNC)    (Size->68)    
isbcoreSqrtf                             = 0x001674B0; // (Region->MULTID) (Type->FUNC)    (Size->32)    
ktactPlaySE                              = 0x001674D0; // type:func    (Size->584)   
ktactCtrl                                = 0x00167720; // type:func    (Size->4192)  
iktactGetLen                             = 0x00168780; // (Region->MULTID) (Type->FUNC)    (Size->60)    
ktactSetPadCnt                           = 0x001687C0; // type:func    (Size->940)   
ktactCheckCommand                        = 0x00168B70; // type:func    (Size->2988)  
ktactCheckCmd                            = 0x00169720; // type:func    (Size->1448)  
ktactCheckCmd_1                          = 0x00169CD0; // type:func    (Size->408)   
ktactCheckCmd_2                          = 0x00169E70; // type:func    (Size->584)   
ktactCheckCmd_3                          = 0x0016A0C0; // type:func    (Size->352)   
ktactSetRequest                          = 0x0016A220; // type:func    (Size->5084)  
ktactSetSlidingState                     = 0x0016B600; // type:func    (Size->3396)  
ktactSetSS_grind                         = 0x0016C350; // type:func    (Size->660)   
ktactSetInput0                           = 0x0016C5F0; // type:func    (Size->764)   
iktactMakeParam_return                   = 0x0016C8F0; // (Region->MULTID) (Type->FUNC)    (Size->212)   
ktactSetInput1                           = 0x0016C9D0; // type:func    (Size->5608)  
ktactUpdateBalance                       = 0x0016DFC0; // type:func    (Size->840)   
ktactReflectInput                        = 0x0016E310; // type:func    (Size->540)   
ktactAdj                                 = 0x0016E530; // type:func    (Size->256)   
ktactAdjRot                              = 0x0016E630; // type:func    (Size->4392)  
iktactMakeParam_spin                     = 0x0016F760; // (Region->MULTID) (Type->FUNC)    (Size->236)   
iktactMakeParam_turn                     = 0x0016F850; // (Region->MULTID) (Type->FUNC)    (Size->236)   
iktactMakeParam_quick_turn               = 0x0016F940; // (Region->MULTID) (Type->FUNC)    (Size->236)   
iktactMakeParam_sitting_turn             = 0x0016FA30; // (Region->MULTID) (Type->FUNC)    (Size->236)   
ktactAdjSpeed                            = 0x0016FB20; // type:func    (Size->232)   
ktactAdjSpeed_grind                      = 0x0016FC10; // type:func    (Size->1508)  
ktactAdjSpeed_halfpipe                   = 0x00170200; // type:func    (Size->116)   
ktactAdjSpeed_bonk                       = 0x00170280; // type:func    (Size->164)   
ktactAdjSpeedG                           = 0x00170330; // type:func    (Size->1296)  
ktactGetAdjSpeedOnAir                    = 0x00170840; // type:func    (Size->332)   
ktactAdjSpeedJump                        = 0x00170990; // type:func    (Size->1144)  
iktactMakeParam_jumppower                = 0x00170E10; // (Region->MULTID) (Type->FUNC)    (Size->212)   
ktactAdjSpeedAccel                       = 0x00170EF0; // type:func    (Size->1700)  
ktactAdjSpeedBoard                       = 0x001715A0; // type:func    (Size->288)   
ktactAdjSpeedLimit                       = 0x001716C0; // type:func    (Size->1148)  
ktactAdjSpeedEtc                         = 0x00171B40; // type:func    (Size->116)   
ktactMove                                = 0x00171BC0; // type:func    (Size->9444)  
ktactSetNextPos                          = 0x001740B0; // type:func    (Size->1200)  
ktactMoveAdjPos_halfpipe                 = 0x00174560; // type:func    (Size->448)   
ktactMoveCrash                           = 0x00174720; // type:func    (Size->456)   
ktactGetNoheightReflection               = 0x001748F0; // type:func    (Size->352)   
ktactCheckWall                           = 0x00174A50; // type:func    (Size->796)   
ktactGetWallPlane                        = 0x00174D70; // type:func    (Size->344)   
ktactCheckShadow                         = 0x00174ED0; // type:func    (Size->320)   
ktactProcHitBody                         = 0x00175010; // type:func    (Size->696)   
ktactProcVerticalPlane                   = 0x001752D0; // type:func    (Size->600)   
ktactCheckManual                         = 0x00175530; // type:func    (Size->900)   
ktactMergeHitList                        = 0x001758C0; // type:func    (Size->524)   
ktactMergeHitList_0                      = 0x00175AD0; // type:func    (Size->676)   
ktactMergeHitList_1                      = 0x00175D80; // type:func    (Size->592)   
ktactForcedBailout                       = 0x00175FD0; // type:func    (Size->1404)  
ktactUpdateState                         = 0x00176550; // type:func    (Size->5896)  
ktactUpdateStateByMot                    = 0x00177C60; // type:func    (Size->2388)  
ktactUpdateTrickLink                     = 0x001785C0; // type:func    (Size->1224)  
ktactUpdateGap                           = 0x00178A90; // type:func    (Size->116)   
ktactUpdateSpecialTrick                  = 0x00178B10; // type:func    (Size->300)   
ktactUpdateBoost                         = 0x00178C40; // type:func    (Size->368)   
ktactUpdateParam                         = 0x00178DB0; // type:func    (Size->316)   
ktactUpdateFlipPole                      = 0x00178EF0; // type:func    (Size->380)   
ktactGetCmnMaxSpeed                      = 0x00179070; // type:func    (Size->400)   
ktactSetCrashPow_normal                  = 0x00179200; // type:func    (Size->3328)  
ktactSetCrashPow_touch                   = 0x00179F00; // type:func    (Size->2608)  
iktactMakeParam_landing                  = 0x0017A930; // (Region->MULTID) (Type->FUNC)    (Size->212)   
ktactSetSlant_speed                      = 0x0017AA10; // type:func    (Size->304)   
ktactSetSlant_char_rot                   = 0x0017AB40; // type:func    (Size->264)   
ktactSetNormalPole                       = 0x0017AC50; // type:func    (Size->204)   
ktactGetHeight                           = 0x0017AD20; // type:func    (Size->392)   
ktactGetInnerRotMatrix                   = 0x0017AEB0; // type:func    (Size->116)   
ktactGetDispRotMatrix                    = 0x0017AF30; // type:func    (Size->784)   
ktactGetWaistPos                         = 0x0017B240; // type:func    (Size->256)   
ktactSetHorizonParam                     = 0x0017B340; // type:func    (Size->772)   
ktactSetVerticalityParam                 = 0x0017B650; // type:func    (Size->672)   
ktactUpdateBalanceAdj                    = 0x0017B8F0; // type:func    (Size->464)   
ktactEdgeSpeed                           = 0x0017BAC0; // type:func    (Size->76)    
ktactSpeedAdj                            = 0x0017BB10; // type:func    (Size->828)   
ktactSideSlantToD2C                      = 0x0017BE50; // type:func    (Size->320)   
ktactGetHit_base                         = 0x0017BF90; // type:func    (Size->708)   
ktactGetHit_hit                          = 0x0017C260; // type:func    (Size->1920)  
ktactGetHit_base2                        = 0x0017C9E0; // type:func    (Size->1368)  
ktactTmcrsCol2KtactPos                   = 0x0017CF40; // type:func    (Size->688)   
ktactSbcorePlane2TmcrsCol                = 0x0017D1F0; // type:func    (Size->208)   
ktactRail2SbcorePlane                    = 0x0017D2C0; // type:func    (Size->376)   
ktactGetHit_vector                       = 0x0017D440; // type:func    (Size->1116)  
ktactGetHit_rail_hp                      = 0x0017D8A0; // type:func    (Size->2808)  
ktactGetHit_hp                           = 0x0017E3A0; // type:func    (Size->1196)  
ktactGetHit_out                          = 0x0017E850; // type:func    (Size->324)   
ktactGetHit_bonk                         = 0x0017E9A0; // type:func    (Size->584)   
ktactGetBlockArea                        = 0x0017EBF0; // type:func    (Size->1664)  
ktactSetHeadHipMatrix                    = 0x0017F270; // type:func    (Size->140)   
ktactSetHeadHipOffset                    = 0x0017F300; // type:func    (Size->452)   
sbcoreGetHit                             = 0x0017F4D0; // type:func    (Size->1884)  
sbcoreGetHit2                            = 0x0017FC30; // type:func    (Size->1528)  
ktactUpdateTrickPoint                    = 0x00180230; // type:func    (Size->3236)  
ktactGetTrickPointOneSet                 = 0x00180EE0; // type:func    (Size->228)   
ktactGetTrickLinkRate                    = 0x00180FD0; // type:func    (Size->588)   
ktactAddSpecialTrickCharge               = 0x00181220; // type:func    (Size->484)   
ktactAddBoostCharge                      = 0x00181410; // type:func    (Size->312)   
ktactSetGap                              = 0x00181550; // type:func    (Size->88)    
ktactSetRecover                          = 0x001815B0; // type:func    (Size->288)   
ktactSetGrindToHp                        = 0x001816D0; // type:func    (Size->100)   
ktactSetAccelOnGrind                     = 0x00181740; // type:func    (Size->68)    
ktactSetAccelWay                         = 0x00181790; // type:func    (Size->120)   
ktactCtrlIntro                           = 0x00181810; // type:func    (Size->408)   
ktactCtrlReady                           = 0x001819B0; // type:func    (Size->284)   
ktactCtrlFinish                          = 0x00181AD0; // type:func    (Size->2504)  
ktactCtrlHorseReady                      = 0x001824A0; // type:func    (Size->148)   
ktactGetIntroMotion                      = 0x00182540; // type:func    (Size->196)   
ktactGetEndMotion                        = 0x00182610; // type:func    (Size->792)   
ktactGetCharHitPlane                     = 0x00182930; // type:func    (Size->356)   
ktactCheckHitChar_1                      = 0x00182AA0; // type:func    (Size->1452)  
ktactCheckBoxLineCol                     = 0x00183050; // type:func    (Size->684)   
ktactCheckTriLineCol                     = 0x00183300; // type:func    (Size->572)   
ktactReserveTumble                       = 0x00183540; // type:func    (Size->104)   
ktactReserveTumble2                      = 0x001835B0; // type:func    (Size->16)    
ktactProcReserveTumble                   = 0x001835C0; // type:func    (Size->1256)  
ktactGetChangedTrickNo                   = 0x00183AB0; // type:func    (Size->464)   
ktactGetLimitAng_down                    = 0x00183C80; // type:func    (Size->264)   
David_ktactGetHit_hit2                   = 0x00183D90; // type:func    (Size->1432)  
David_ktactGetHit_obs2                   = 0x00184330; // type:func    (Size->664)   
David_ktactGetHit_obs                    = 0x001845D0; // type:func    (Size->848)   
nmfontSetTexData                         = 0x00184920; // type:func    (Size->68)    
nmfontSetLang                            = 0x00184970; // type:func    (Size->28)    
nmfontInitOption                         = 0x00184990; // type:func    (Size->260)   
nmfontSetOption                          = 0x00184AA0; // type:func    (Size->192)   
nmfontSetFCol                            = 0x00184B60; // type:func    (Size->164)   
nmfontSetCol                             = 0x00184C10; // type:func    (Size->144)   
nmfontSetType                            = 0x00184CA0; // type:func    (Size->32)    
nmfontSetSize                            = 0x00184CC0; // type:func    (Size->72)    
nmfontSetFSize                           = 0x00184D10; // type:func    (Size->48)    
nmfontSetPack                            = 0x00184D40; // type:func    (Size->32)    
nmfontSetShadow                          = 0x00184D60; // type:func    (Size->24)    
nmfontSetBil                             = 0x00184D80; // type:func    (Size->32)    
nmfontSetScrRate                         = 0x00184DA0; // type:func    (Size->308)   
nmfontFPrint                             = 0x00184EE0; // type:func    (Size->3656)  
nmfontGPrint                             = 0x00185D30; // type:func    (Size->3976)  
nmfontFPrintF                            = 0x00186CC0; // type:func    (Size->3116)  
nmfontGPrintF                            = 0x001878F0; // type:func    (Size->3460)  
nmfontGetStrLen                          = 0x00188680; // type:func    (Size->76)    
nmfontGetStrFLen                         = 0x001886D0; // type:func    (Size->84)    
nmfontGetPackStrLen                      = 0x00188730; // type:func    (Size->400)   
nmfontGetPackStrFLen                     = 0x001888C0; // type:func    (Size->376)   
nmfontGetPackOfs                         = 0x00188A40; // type:func    (Size->1816)  
nmfontSwitchBil                          = 0x00189160; // type:func    (Size->256)   
nmfontChangeVertex                       = 0x00189260; // type:func    (Size->156)   
ktmenuInit                               = 0x00189300; // type:func    (Size->160)   
ktmenuAdd                                = 0x001893A0; // type:func    (Size->272)   
ktmfSetMenu                              = 0x001894B0; // type:func    (Size->464)   
ktmfMenuFunc_continue                    = 0x00189680; // type:func    (Size->20)    
ktmfMenuFunc_restart                     = 0x001896A0; // type:func    (Size->40)    
ktmfMenuFunc_retire                      = 0x001896D0; // type:func    (Size->20)    
ktmfMenuFunc_exit                        = 0x001896F0; // type:func    (Size->32)    
ktmfMenuFunc_finish                      = 0x00189710; // type:func    (Size->136)   
ktmfdbgMenuFunc_2d                       = 0x001897A0; // type:func    (Size->64)    
spinitInit                               = 0x001897E0; // type:func    (Size->684)   
spinitInitRecord                         = 0x00189A90; // type:func    (Size->240)   
spinitInitOption                         = 0x00189B80; // type:func    (Size->372)   
spinitInitKeyConfig                      = 0x00189D00; // type:func    (Size->128)   
spinitInitVolume                         = 0x00189D80; // type:func    (Size->44)    
spinitInitCheats                         = 0x00189DB0; // type:func    (Size->116)   
spinitInitSecret                         = 0x00189E30; // type:func    (Size->336)   
spinitInitCharacter                      = 0x00189F80; // type:func    (Size->224)   
spinitInitCreateCharacter                = 0x0018A060; // type:func    (Size->268)   
spinitGetClock                           = 0x0018A170; // type:func    (Size->104)   
spinitGetCreateClock                     = 0x0018A1E0; // type:func    (Size->72)    
spinitGetClockSub                        = 0x0018A230; // type:func    (Size->612)   
spinitModule                             = 0x0018A4A0; // type:func    (Size->344)   
sploadInit                               = 0x0018A600; // type:func    (Size->736)   
sploadFrame                              = 0x0018A8E0; // type:func    (Size->640)   
sploadEnd                                = 0x0018AB60; // type:func    (Size->144)   
sploadDrawNowLoading                     = 0x0018ABF0; // type:func    (Size->1596)  
sploadDrawLevelGoal                      = 0x0018B230; // type:func    (Size->3280)  
sploadDrawProfile                        = 0x0018BF00; // type:func    (Size->2584)  
sploadDrawRule                           = 0x0018C920; // type:func    (Size->1892)  
sploadDrawMater                          = 0x0018D090; // type:func    (Size->1932)  
sploadDrawFace                           = 0x0018D820; // type:func    (Size->1456)  
sploadDrawSponsor                        = 0x0018DDD0; // type:func    (Size->2036)  
sploadGetAddr                            = 0x0018E5D0; // type:func    (Size->36)    
sploadSetSoundAddr                       = 0x0018E600; // type:func    (Size->352)   
sploadGetCreateAddr                      = 0x0018E760; // type:func    (Size->456)   
sploadCheckSoundData                     = 0x0018E930; // type:func    (Size->344)   
sploadCommon                             = 0x0018EA90; // type:func    (Size->324)   
sploadMovie                              = 0x0018EBE0; // type:func    (Size->128)   
sploadSelect                             = 0x0018EC60; // type:func    (Size->3340)  
sploadGameCommon                         = 0x0018F970; // type:func    (Size->460)   
sploadSetGame2D                          = 0x0018FB40; // type:func    (Size->576)   
sploadSetGameEtc                         = 0x0018FD80; // type:func    (Size->220)   
sploadSetCharacter                       = 0x0018FE60; // type:func    (Size->1412)  
sploadSetCreateCharacter                 = 0x001903F0; // type:func    (Size->1572)  
sploadSetCourse                          = 0x00190A20; // type:func    (Size->2016)  
sploadSetSound                           = 0x00191200; // type:func    (Size->792)   
sploadInitCommon                         = 0x00191520; // type:func    (Size->644)   
sploadInitMovie                          = 0x001917B0; // type:func    (Size->56)    
sploadInitSelect                         = 0x001917F0; // type:func    (Size->6352)  
sploadInitGameCommon                     = 0x001930C0; // type:func    (Size->56)    
sploadInitGame2D                         = 0x00193100; // type:func    (Size->620)   
sploadInitGameEtc                        = 0x00193370; // type:func    (Size->328)   
sploadInitCharacter                      = 0x001934C0; // type:func    (Size->3172)  
sploadInitCreateCharacter                = 0x00194130; // type:func    (Size->3544)  
sploadInitCourse                         = 0x00194F10; // type:func    (Size->1604)  
sploadFreeMovie                          = 0x00195560; // type:func    (Size->48)    
sploadFreeSelect                         = 0x00195590; // type:func    (Size->2316)  
sploadFreeGameCommon                     = 0x00195EA0; // type:func    (Size->56)    
sploadFreeGame2D                         = 0x00195EE0; // type:func    (Size->216)   
sploadFreeGameEtc                        = 0x00195FC0; // type:func    (Size->80)    
sploadFreeCharacter                      = 0x00196010; // type:func    (Size->788)   
sploadFreeCourse                         = 0x00196330; // type:func    (Size->256)   
sploadLoadSCharacter                     = 0x00196430; // type:func    (Size->896)   
sploadCheckSCharacter                    = 0x001967B0; // type:func    (Size->88)    
sploadSetSCharacter                      = 0x00196810; // type:func    (Size->632)   
sploadFreeSCharacter                     = 0x00196A90; // type:func    (Size->952)   
sploadSetCharacterTexture                = 0x00196E50; // type:func    (Size->1376)  
sploadGetRapHead                         = 0x001973B0; // type:func    (Size->16)    
sploadGetIconData                        = 0x001973C0; // type:func    (Size->16)    
sploadGetVibrationData                   = 0x001973D0; // type:func    (Size->16)    
sploadGetMovieData                       = 0x001973E0; // type:func    (Size->16)    
sploadGetSelectData                      = 0x001973F0; // type:func    (Size->16)    
sploadGetCharacter                       = 0x00197400; // type:func    (Size->16)    
sploadGetGame2D                          = 0x00197410; // type:func    (Size->16)    
sploadGetGameEtc                         = 0x00197420; // type:func    (Size->16)    
sploadGetCommonOffset                    = 0x00197430; // type:func    (Size->16)    
tmlinkMappingData                        = 0x00197440; // type:func    (Size->136)   
gmsysPadInit                             = 0x001974D0; // type:func    (Size->80)    
gmsysPadMain                             = 0x00197520; // type:func    (Size->460)   
gmsysPadReset                            = 0x001976F0; // type:func    (Size->144)   
gmsysPadResume                           = 0x00197780; // type:func    (Size->16)    
gmsysPadInitPadBuff                      = 0x00197790; // type:func    (Size->112)   
gmsysPadInitPadOpe                       = 0x00197800; // type:func    (Size->104)   
gmsysPadInitPadData                      = 0x00197870; // type:func    (Size->172)   
gmsysPadSetPadInfoLink                   = 0x00197920; // type:func    (Size->296)   
spRiderInit                              = 0x00197A50; // type:func    (Size->172)   
spRiderEnd                               = 0x00197B00; // type:func    (Size->108)   
spRiderMain                              = 0x00197B70; // type:func    (Size->460)   
spRiderWriteData                         = 0x00197D40; // type:func    (Size->488)   
spRiderUpdateDetail                      = 0x00197F30; // type:func    (Size->476)   
spRiderReset                             = 0x00198110; // type:func    (Size->156)   
spInitRider                              = 0x001981B0; // type:func    (Size->584)   
spInitRiderDisp                          = 0x00198400; // type:func    (Size->1472)  
spInitRiderCtrl                          = 0x001989C0; // type:func    (Size->832)   
spRiderSetPos                            = 0x00198D00; // type:func    (Size->108)   
spRiderSetPos2                           = 0x00198D70; // type:func    (Size->556)   
spFreeRideInit                           = 0x00198FA0; // type:func    (Size->436)   
spFreeRideEnd                            = 0x00199160; // type:func    (Size->144)   
spFreeRideFrame                          = 0x001991F0; // type:func    (Size->260)   
spfrMainLoop                             = 0x00199300; // type:func    (Size->3596)  
spfrReset                                = 0x0019A110; // type:func    (Size->2200)  
spfrMalloc                               = 0x0019A9B0; // type:func    (Size->196)   
spfrFree                                 = 0x0019AA80; // type:func    (Size->84)    
spInitModeData                           = 0x0019AAE0; // type:func    (Size->372)   
spInitVsData                             = 0x0019AC60; // type:func    (Size->324)   
spInitReplay                             = 0x0019ADB0; // type:func    (Size->124)   
spInitReplay_1                           = 0x0019AE30; // type:func    (Size->436)   
spInitMatrix                             = 0x0019AFF0; // type:func    (Size->784)   
spInitScreenInfo                         = 0x0019B300; // type:func    (Size->292)   
spInitFog                                = 0x0019B430; // type:func    (Size->120)   
spInitDisp                               = 0x0019B4B0; // type:func    (Size->192)   
spGetReplay                              = 0x0019B570; // type:func    (Size->612)   
spSetReplay                              = 0x0019B7E0; // type:func    (Size->304)   
spUpdateMode                             = 0x0019B910; // type:func    (Size->4868)  
spUpdateReplay                           = 0x0019CC20; // type:func    (Size->420)   
spCheckFinish                            = 0x0019CDD0; // type:func    (Size->948)   
spCheckPassFinishLine2                   = 0x0019D190; // type:func    (Size->396)   
spFlowTrick                              = 0x0019D320; // type:func    (Size->448)   
spFlowBoost                              = 0x0019D4E0; // type:func    (Size->792)   
spFlowPush                               = 0x0019D800; // type:func    (Size->2096)  
spFlowHorse                              = 0x0019E030; // type:func    (Size->880)   
spSetWndClip                             = 0x0019E3A0; // type:func    (Size->592)   
spMakeViewScreenMatrix                   = 0x0019E5F0; // type:func    (Size->672)   
spUpdateDispState                        = 0x0019E890; // type:func    (Size->292)   
spUpdateCamera_normal                    = 0x0019E9C0; // type:func    (Size->1304)  
spUpdateCamera_pause                     = 0x0019EEE0; // type:func    (Size->64)    
spDivScreenSetting                       = 0x0019EF20; // type:func    (Size->336)   
spSetCrsDrawParam                        = 0x0019F070; // type:func    (Size->400)   
spDrawCourse1                            = 0x0019F200; // type:func    (Size->52)    
spDrawCourse2                            = 0x0019F240; // type:func    (Size->60)    
spDrawRider                              = 0x0019F280; // type:func    (Size->412)   
spDrawRider2                             = 0x0019F420; // type:func    (Size->476)   
spDrawRider2Tex                          = 0x0019F600; // type:func    (Size->184)   
spSetFade                                = 0x0019F6C0; // type:func    (Size->40)    
spSetWndFade                             = 0x0019F6F0; // type:func    (Size->112)   
spFade                                   = 0x0019F760; // type:func    (Size->660)   
spEnterEventCameraMode                   = 0x0019FA00; // type:func    (Size->16)    
spExitEventCameraMode                    = 0x0019FA10; // type:func    (Size->12)    
tmevInit                                 = 0x0019FA20; // type:func    (Size->1168)  
tmevReset                                = 0x0019FEB0; // type:func    (Size->2024)  
tmevMainEvent                            = 0x001A06A0; // type:func    (Size->776)   
tmevPlayerEvent                          = 0x001A09B0; // type:func    (Size->1108)  
tmevDrawEvent                            = 0x001A0E10; // type:func    (Size->64)    
tmevDrawPlayerEvent                      = 0x001A0E50; // type:func    (Size->64)    
tmevFinishPlayerEvent                    = 0x001A0E90; // type:func    (Size->648)   
tmevEnd                                  = 0x001A1120; // type:func    (Size->36)    
tmevInitSystem                           = 0x001A1150; // type:func    (Size->320)   
tmevResetSystem                          = 0x001A1290; // type:func    (Size->384)   
tmevSetLevelGoal                         = 0x001A1410; // type:func    (Size->196)   
tmevSetGap                               = 0x001A14E0; // type:func    (Size->148)   
tmevCheckLevelGoal                       = 0x001A1580; // type:func    (Size->452)   
tmevCheckGap                             = 0x001A1750; // type:func    (Size->256)   
tmevGetLevelGoal                         = 0x001A1850; // type:func    (Size->44)    
tmevGetLevelGoalFlag                     = 0x001A1880; // type:func    (Size->108)   
tmevInitCounter                          = 0x001A18F0; // type:func    (Size->124)   
tmevCountCounter                         = 0x001A1970; // type:func    (Size->172)   
tmevResetICounter                        = 0x001A1A20; // type:func    (Size->56)    
tmevGetICounter                          = 0x001A1A60; // type:func    (Size->44)    
tmevSetICounter                          = 0x001A1A90; // type:func    (Size->64)    
tmevStartICounter                        = 0x001A1AD0; // type:func    (Size->72)    
tmevStopICounter                         = 0x001A1B20; // type:func    (Size->76)    
tmevResetFlag                            = 0x001A1B70; // type:func    (Size->76)    
tmevSetFlag                              = 0x001A1BC0; // type:func    (Size->52)    
tmevGetFlag                              = 0x001A1C00; // type:func    (Size->44)    
tmevSetFog                               = 0x001A1C30; // type:func    (Size->60)    
tmevSetBGFog                             = 0x001A1C70; // type:func    (Size->60)    
tmevSetBGNo                              = 0x001A1CB0; // type:func    (Size->60)    
tmevSetViewAngle                         = 0x001A1CF0; // type:func    (Size->60)    
tmevSetDrawLength                        = 0x001A1D30; // type:func    (Size->96)    
tmevGetDrawLength                        = 0x001A1D90; // type:func    (Size->52)    
tmevSetObjectDrawLength                  = 0x001A1DD0; // type:func    (Size->60)    
tmevSetMiPModelLevel                     = 0x001A1E10; // type:func    (Size->60)    
tmevResetObject                          = 0x001A1E50; // type:func    (Size->356)   
tmevMoveObject                           = 0x001A1FC0; // type:func    (Size->1300)  
tmevSetCourseLogo                        = 0x001A24E0; // type:func    (Size->148)   
tmevRollCourseLogo                       = 0x001A2580; // type:func    (Size->224)   
tmevSetSponsor                           = 0x001A2660; // type:func    (Size->92)    
tmevResetSponsor                         = 0x001A26C0; // type:func    (Size->260)   
tmevRollSponsor                          = 0x001A27D0; // type:func    (Size->288)   
tmevSetWarpArrow                         = 0x001A28F0; // type:func    (Size->96)    
tmevMoveWarpArrow                        = 0x001A2950; // type:func    (Size->312)   
tmevSetVsObject                          = 0x001A2A90; // type:func    (Size->72)    
tmevSet1PlayObject                       = 0x001A2AE0; // type:func    (Size->72)    
tmevSetVsWarpObject                      = 0x001A2B30; // type:func    (Size->72)    
tmevGetEventMdlHit                       = 0x001A2B80; // type:func    (Size->76)    
tmevInitWarp                             = 0x001A2BD0; // type:func    (Size->308)   
tmevSetWarp                              = 0x001A2D10; // type:func    (Size->156)   
tmevCheck1PWarp                          = 0x001A2DB0; // type:func    (Size->324)   
tmevCheckReset                           = 0x001A2F00; // type:func    (Size->388)   
tmevInitVs                               = 0x001A3090; // type:func    (Size->460)   
tmevResetVs                              = 0x001A3260; // type:func    (Size->780)   
tmevSetWarpNo                            = 0x001A3570; // type:func    (Size->124)   
tmevSetStartPosition                     = 0x001A35F0; // type:func    (Size->260)   
tmevSetWarpPosition                      = 0x001A3700; // type:func    (Size->148)   
tmevSetHorsePosition                     = 0x001A37A0; // type:func    (Size->180)   
tmevGetNowHorsePos                       = 0x001A3860; // type:func    (Size->16)    
tmevGetLap                               = 0x001A3870; // type:func    (Size->44)    
tmevResetHorsePosition                   = 0x001A38A0; // type:func    (Size->300)   
tmevCheckVsWarp                          = 0x001A39D0; // type:func    (Size->884)   
tmevGetFinish                            = 0x001A3D50; // type:func    (Size->44)    
tmevSetVib                               = 0x001A3D80; // type:func    (Size->184)   
tmevSetVibPlayer                         = 0x001A3E40; // type:func    (Size->180)   
tmevGetIntroCut                          = 0x001A3F00; // type:func    (Size->184)   
tmevSetLightVector                       = 0x001A3FC0; // type:func    (Size->148)   
tmevSetAmbient                           = 0x001A4060; // type:func    (Size->76)    
tmevGetLightVector                       = 0x001A40B0; // type:func    (Size->236)   
tmevDefInit                              = 0x001A41A0; // type:func    (Size->20)    
tmevDefResetEvent                        = 0x001A41C0; // type:func    (Size->20)    
tmevDefMainEvent                         = 0x001A41E0; // type:func    (Size->20)    
tmevDefPlayerEvent                       = 0x001A4200; // type:func    (Size->20)    
tmevDefDrawEvent                         = 0x001A4220; // type:func    (Size->20)    
tmevDefDrawPlayerEvent                   = 0x001A4240; // type:func    (Size->20)    
tmevDefFinishPlayerEvent                 = 0x001A4260; // type:func    (Size->20)    
tmevDefEnd                               = 0x001A4280; // type:func    (Size->8)     
aySelectModInit                          = 0x001A4290; // type:func    (Size->416)   
aySelectModFrame                         = 0x001A4430; // type:func    (Size->2020)  
aySelectModEnd                           = 0x001A4C20; // type:func    (Size->88)    
aySetCharScale                           = 0x001A4C80; // type:func    (Size->632)   
ayFrameReset                             = 0x001A4F00; // type:func    (Size->136)   
aySetPolyComFT4                          = 0x001A4F90; // type:func    (Size->1016)  
aySetPolyComGT4                          = 0x001A5390; // type:func    (Size->1584)  
aySetPolyComF4                           = 0x001A59C0; // type:func    (Size->432)   
aySetPolyComG4                           = 0x001A5B70; // type:func    (Size->672)   
aySetVert                                = 0x001A5E10; // type:func    (Size->60)    
aySetVertF                               = 0x001A5E50; // type:func    (Size->400)   
aySetCamMatrix                           = 0x001A5FE0; // type:func    (Size->396)   
aySetLightMatrix                         = 0x001A6170; // type:func    (Size->460)   
ayCalcTotalMove                          = 0x001A6340; // type:func    (Size->392)   
ayDrawKeyOparate                         = 0x001A64D0; // type:func    (Size->1376)  
ayFontInitmin                            = 0x001A6A30; // type:func    (Size->56)    
ayFontInit                               = 0x001A6A70; // type:func    (Size->84)    
ayCalcHandiParam                         = 0x001A6AD0; // type:func    (Size->216)   
ayDrawBG                                 = 0x001A6BB0; // type:func    (Size->512)   
ayCalcNextID                             = 0x001A6DB0; // type:func    (Size->96)    
ayBlackOutDraw                           = 0x001A6E10; // type:func    (Size->228)   
aySetPolyComF3                           = 0x001A6F00; // type:func    (Size->328)   
aySetPolyComG3                           = 0x001A7050; // type:func    (Size->400)   
aySetVert3                               = 0x001A71E0; // type:func    (Size->528)   
ayDrawNum                                = 0x001A73F0; // type:func    (Size->1104)  
ayDrawCredits                            = 0x001A7840; // type:func    (Size->520)   
ayMcSysInit                              = 0x001A7A50; // type:func    (Size->76)    
ayMcSysClear                             = 0x001A7AA0; // type:func    (Size->164)   
ayMcStartLoad                            = 0x001A7B50; // type:func    (Size->3940)  
ayMcUpdateFile                           = 0x001A8AC0; // type:func    (Size->132)   
ayMcCareerLoad                           = 0x001A8B50; // type:func    (Size->5088)  
ayMcCareerSave                           = 0x001A9F30; // type:func    (Size->8860)  
ayMcSetSaveFileID                        = 0x001AC1D0; // type:func    (Size->16)    
ayMcReplayLoad                           = 0x001AC1E0; // type:func    (Size->5084)  
ayMcReplaySave                           = 0x001AD5C0; // type:func    (Size->8812)  
ayMcFileDraw                             = 0x001AF830; // type:func    (Size->1808)  
ayMcDrawEnterName                        = 0x001AFF40; // type:func    (Size->2856)  
aySetRepData                             = 0x001B0A70; // type:func    (Size->480)   
aySetGameData                            = 0x001B0C50; // type:func    (Size->652)   
ayMcMesDraw                              = 0x001B0EE0; // type:func    (Size->1028)  
ayMcSysEnd                               = 0x001B12F0; // type:func    (Size->36)    
ayMcGetStep                              = 0x001B1320; // type:func    (Size->16)    
aySetTimeStr                             = 0x001B1330; // type:func    (Size->508)   
ayModeSelInit                            = 0x001B1530; // type:func    (Size->160)   
ayModeSelFrame                           = 0x001B15D0; // type:func    (Size->2628)  
ayModeSelEnd                             = 0x001B2020; // type:func    (Size->52)    
ayDrawMovie                              = 0x001B2060; // type:func    (Size->1960)  
aySetKeyOparate                          = 0x001B2810; // type:func    (Size->552)   
aySetMode                                = 0x001B2A40; // type:func    (Size->736)   
ayDrawMode                               = 0x001B2D20; // type:func    (Size->2552)  
ayDrawMark                               = 0x001B3720; // type:func    (Size->1592)  
ayReleaseCommand                         = 0x001B3D60; // type:func    (Size->640)   
ayReleaseCheat                           = 0x001B3FE0; // type:func    (Size->152)   
ayReleaseGap                             = 0x001B4080; // type:func    (Size->188)   
ayReleaseMovie                           = 0x001B4140; // type:func    (Size->76)    
ayReleaseChara                           = 0x001B4190; // type:func    (Size->348)   
ayMovieModInit                           = 0x001B42F0; // type:func    (Size->360)   
ayMovieModFrame                          = 0x001B4460; // type:func    (Size->2384)  
ayMovieModEnd                            = 0x001B4DB0; // type:func    (Size->60)    
ayCharSelInit                            = 0x001B4DF0; // type:func    (Size->336)   
ayCharSelFrame                           = 0x001B4F40; // type:func    (Size->5880)  
ayCharSelEnd                             = 0x001B6640; // type:func    (Size->36)    
ayCharSelClear                           = 0x001B6670; // type:func    (Size->800)   
ayCalcSoftNum                            = 0x001B6990; // type:func    (Size->116)   
ayDrawChar                               = 0x001B6A10; // type:func    (Size->4564)  
aySelBoardDraw                           = 0x001B7BF0; // type:func    (Size->2664)  
aySelHeadDraw                            = 0x001B8660; // type:func    (Size->2088)  
aySelItemDraw                            = 0x001B8E90; // type:func    (Size->4376)  
ayParamDraw                              = 0x001B9FB0; // type:func    (Size->3628)  
ayCsInfoDraw                             = 0x001BADE0; // type:func    (Size->1528)  
ayCsImageDraw                            = 0x001BB3E0; // type:func    (Size->2864)  
aySetUpDraw                              = 0x001BBF10; // type:func    (Size->3536)  
ayNameDraw                               = 0x001BCCE0; // type:func    (Size->5428)  
ayHandicapDraw                           = 0x001BE220; // type:func    (Size->7340)  
//aySetKeyOparate                          = 0x001BFED0; // type:func    (Size->532)   
ayClassifyChara                          = 0x001C00F0; // type:func    (Size->108)   
aySetCharEnv                             = 0x001C0160; // type:func    (Size->704)   
aySetCsFlg                               = 0x001C0420; // type:func    (Size->132)   
ayDrawCreateChara                        = 0x001C04B0; // type:func    (Size->2112)  
ayDrawMotModel                           = 0x001C0CF0; // type:func    (Size->1948)  
aySetMotFlg                              = 0x001C1490; // type:func    (Size->32)    
ayCalcCharNext                           = 0x001C14B0; // type:func    (Size->152)   
ayLevelGoalDraw                          = 0x001C1550; // type:func    (Size->3848)  
knCameraInit                             = 0x001C2460; // type:func    (Size->1148)  
knCameraSetScrZ                          = 0x001C28E0; // type:func    (Size->68)    
knCameraCalc                             = 0x001C2930; // type:func    (Size->1264)  
knCoreAddVectorXYZ                       = 0x001C2E20; // (Region->MULTID) (Type->FUNC)    (Size->28)    
knCameraSetBoostAction                   = 0x001C2E40; // type:func    (Size->84)    
knCameraDefaultView                      = 0x001C2EA0; // type:func    (Size->3176)  
knCameraHalfPipeView                     = 0x001C3B10; // type:func    (Size->1032)  
knCameraRailSlideView                    = 0x001C3F20; // type:func    (Size->644)   
knCameraSetLandShake                     = 0x001C41B0; // type:func    (Size->92)    
knCameraLandShake                        = 0x001C4210; // type:func    (Size->676)   
knCameraSpringCheck                      = 0x001C44C0; // type:func    (Size->136)   
knCameraChange                           = 0x001C4550; // type:func    (Size->1492)  
knCameraTumbleAction                     = 0x001C4B30; // type:func    (Size->1044)  
knCameraTiltAction                       = 0x001C4F50; // type:func    (Size->200)   
knCameraBoostAction                      = 0x001C5020; // type:func    (Size->556)   
knCameraInterPol                         = 0x001C5250; // type:func    (Size->1084)  
knCalcMain                               = 0x001C5690; // type:func    (Size->196)   
knCameraSetFixRotation                   = 0x001C5760; // type:func    (Size->124)   
knCameraSetDis                           = 0x001C57E0; // type:func    (Size->112)   
knCameraEndDis                           = 0x001C5850; // type:func    (Size->96)    
knCameraEventAllReset                    = 0x001C58B0; // type:func    (Size->72)    
knFinishCamera                           = 0x001C5900; // type:func    (Size->1472)  
knCameraKeepCourse                       = 0x001C5EC0; // type:func    (Size->4316)  
knCameraKeepCourse2b                     = 0x001C6FA0; // type:func    (Size->216)   
knAngAxisToQuat                          = 0x001C7080; // type:func    (Size->112)   
knQuatToAngAxis                          = 0x001C70F0; // type:func    (Size->656)   
knQuatSlerp                              = 0x001C7380; // type:func    (Size->428)   
ayOptionInit                             = 0x001C7530; // type:func    (Size->516)   
ayGetExponent                            = 0x001C7740; // type:func    (Size->124)   
ayOptionFrame                            = 0x001C77C0; // type:func    (Size->7752)  
ayOptSetEnv                              = 0x001C9610; // type:func    (Size->88)    
ayOptGetEnv                              = 0x001C9670; // type:func    (Size->96)    
ayOptionEnd                              = 0x001C96D0; // type:func    (Size->44)    
ayOptionClear                            = 0x001C9700; // type:func    (Size->192)   
aySetMovFlg                              = 0x001C97C0; // type:func    (Size->188)   
ayDrawSound                              = 0x001C9880; // type:func    (Size->7160)  
//aySelHeadDraw                            = 0x001CB480; // type:func    (Size->1780)  
ayDrawOptItem                            = 0x001CBB80; // type:func    (Size->7028)  
ayDrawSubOptItem                         = 0x001CD700; // type:func    (Size->476)   
ayDrawSOptItem                           = 0x001CD8E0; // type:func    (Size->3600)  
ayDrawOptChar                            = 0x001CE6F0; // type:func    (Size->6016)  
ayDrawCheat                              = 0x001CFE70; // type:func    (Size->5112)  
ayDrawEdit                               = 0x001D1270; // type:func    (Size->4492)  
ayCalcScore                              = 0x001D2400; // type:func    (Size->1244)  
ayDrawScore                              = 0x001D28E0; // type:func    (Size->1848)  
ayCalcGap                                = 0x001D3020; // type:func    (Size->1972)  
ayDrawGap                                = 0x001D37E0; // type:func    (Size->1996)  
ayDrawKeyConfig                          = 0x001D3FB0; // type:func    (Size->7600)  
aySetKeyDiff                             = 0x001D5D60; // type:func    (Size->296)   
ayOptBlackOut                            = 0x001D5E90; // type:func    (Size->288)   
//aySetKeyOparate                          = 0x001D5FB0; // type:func    (Size->1596)  
nmvcInit                                 = 0x001D65F0; // type:func    (Size->76)    
nmvcInitOption                           = 0x001D6640; // type:func    (Size->76)    
nmvcFrame                                = 0x001D6690; // type:func    (Size->348)   
nmvcSetData                              = 0x001D67F0; // type:func    (Size->168)   
nmvcResetData                            = 0x001D68A0; // type:func    (Size->104)   
nmvcSetExterVol                          = 0x001D6910; // type:func    (Size->116)   
nmvcSetInterVol                          = 0x001D6990; // type:func    (Size->144)   
nmvcSetPitch                             = 0x001D6A20; // type:func    (Size->164)   
nmvcSetOption                            = 0x001D6AD0; // type:func    (Size->160)   
nmvcSetOptLoop                           = 0x001D6B70; // type:func    (Size->32)    
nmvcSetOptVol                            = 0x001D6B90; // type:func    (Size->48)    
nmvcSetOptPitch                          = 0x001D6BC0; // type:func    (Size->84)    
nmvcPlay                                 = 0x001D6C20; // type:func    (Size->644)   
nmvcStop                                 = 0x001D6EB0; // type:func    (Size->144)   
nmvcStopVoice                            = 0x001D6F40; // type:func    (Size->164)   
nmvcStopAct                              = 0x001D6FF0; // type:func    (Size->156)   
nmvcStopEvent                            = 0x001D7090; // type:func    (Size->156)   
nmvcStopEffect                           = 0x001D7130; // type:func    (Size->164)   
nmvcPause                                = 0x001D71E0; // type:func    (Size->172)   
nmvcResume                               = 0x001D7290; // type:func    (Size->144)   
nmvcPlayButton                           = 0x001D7320; // type:func    (Size->160)   
nmvcPlayCursor                           = 0x001D73C0; // type:func    (Size->160)   
nmvcGetState                             = 0x001D7460; // type:func    (Size->44)    
nmvcGetDataState                         = 0x001D7490; // type:func    (Size->56)    
nmvcCheckAllStop                         = 0x001D74D0; // type:func    (Size->104)   
nmvcChangeSin                            = 0x001D7540; // type:func    (Size->164)   
nmvcInitFig                              = 0x001D75F0; // type:func    (Size->124)   
nmvcCheckState                           = 0x001D7670; // type:func    (Size->540)   
nmsndInit                                = 0x001D7890; // type:func    (Size->620)   
nmsndFrame                               = 0x001D7B00; // type:func    (Size->416)   
nmsndRestart                             = 0x001D7CA0; // type:func    (Size->368)   
nmsndStartGame                           = 0x001D7E10; // type:func    (Size->388)   
nmsndStartDemo                           = 0x001D7FA0; // type:func    (Size->304)   
nmsndEndGame                             = 0x001D80D0; // type:func    (Size->244)   
nmsndExit                                = 0x001D81D0; // type:func    (Size->96)    
nmsndExitSel                             = 0x001D8230; // type:func    (Size->148)   
nmsndCheckExit                           = 0x001D82D0; // type:func    (Size->236)   
nmsndResetWave                           = 0x001D83C0; // type:func    (Size->104)   
nmsndAssignChan                          = 0x001D8430; // type:func    (Size->360)   
nmsndEntryBatch                          = 0x001D85A0; // type:func    (Size->440)   
nmsndPubCom                              = 0x001D8760; // type:func    (Size->448)   
nmsndGetChanState                        = 0x001D8920; // type:func    (Size->44)    
nmsndInitMod                             = 0x001D8950; // type:func    (Size->284)   
nmsndEndPub                              = 0x001D8A70; // type:func    (Size->420)   
nmbgmInit                                = 0x001D8C20; // type:func    (Size->60)    
nmbgmFrame                               = 0x001D8C60; // type:func    (Size->312)   
nmbgmSetTbl                              = 0x001D8DA0; // type:func    (Size->192)   
nmbgmSelect                              = 0x001D8E60; // type:func    (Size->136)   
nmbgmSetSelectTbl                        = 0x001D8EF0; // type:func    (Size->244)   
nmbgmReset                               = 0x001D8FF0; // type:func    (Size->112)   
nmbgmSetExterVol                         = 0x001D9060; // type:func    (Size->116)   
nmbgmSetOptNext                          = 0x001D90E0; // type:func    (Size->32)    
nmbgmSetOptRand                          = 0x001D9100; // type:func    (Size->32)    
nmbgmChangeOption                        = 0x001D9120; // type:func    (Size->140)   
nmbgmPlay                                = 0x001D91B0; // type:func    (Size->164)   
nmbgmStop                                = 0x001D9260; // type:func    (Size->116)   
nmbgmPause                               = 0x001D92E0; // type:func    (Size->104)   
nmbgmResume                              = 0x001D9350; // type:func    (Size->104)   
nmbgmChange                              = 0x001D93C0; // type:func    (Size->220)   
nmbgmChange2                             = 0x001D94A0; // type:func    (Size->276)   
nmbgmExit                                = 0x001D95C0; // type:func    (Size->164)   
nmbgmGetState                            = 0x001D9670; // type:func    (Size->16)    
nmbgmGetLevel                            = 0x001D9680; // type:func    (Size->44)    
nmbgmGetSelect                           = 0x001D96B0; // type:func    (Size->24)    
nmbgmGetSelectTbl                        = 0x001D96D0; // type:func    (Size->24)    
nmbgmCheckQue                            = 0x001D96F0; // type:func    (Size->16)    
nmbgmInitFig                             = 0x001D9700; // type:func    (Size->120)   
nmbgmInitOption                          = 0x001D9780; // type:func    (Size->48)    
nmbgmInitQue                             = 0x001D97B0; // type:func    (Size->40)    
nmbgmProcessQue                          = 0x001D97E0; // type:func    (Size->984)   
nmbgmCheckRandom                         = 0x001D9BC0; // type:func    (Size->220)   
nmsqInit                                 = 0x001D9CA0; // type:func    (Size->72)    
nmsqFrame                                = 0x001D9CF0; // type:func    (Size->208)   
nmsqSetWave                              = 0x001D9DC0; // type:func    (Size->232)   
nmsqSetSq                                = 0x001D9EB0; // type:func    (Size->124)   
nmsqResetData                            = 0x001D9F30; // type:func    (Size->396)   
nmsqSetExterMVol                         = 0x001DA0C0; // type:func    (Size->116)   
nmsqSetInterMVol                         = 0x001DA140; // type:func    (Size->136)   
nmsqSetOptVol                            = 0x001DA1D0; // type:func    (Size->32)    
nmsqSetOptLoop                           = 0x001DA1F0; // type:func    (Size->32)    
nmsqSetOptWave                           = 0x001DA210; // type:func    (Size->32)    
nmsqSetOptBank                           = 0x001DA230; // type:func    (Size->32)    
nmsqSetOptSq                             = 0x001DA250; // type:func    (Size->32)    
nmsqPlayMidi                             = 0x001DA270; // type:func    (Size->344)   
nmsqStopMidi                             = 0x001DA3D0; // type:func    (Size->140)   
nmsqExit                                 = 0x001DA460; // type:func    (Size->224)   
nmsqExitSelect                           = 0x001DA540; // type:func    (Size->104)   
nmsqGetWaveState                         = 0x001DA5B0; // type:func    (Size->56)    
nmsqCheckQue                             = 0x001DA5F0; // type:func    (Size->16)    
nmsqPlaySelect                           = 0x001DA600; // type:func    (Size->168)   
nmsqStopSelect                           = 0x001DA6B0; // type:func    (Size->84)    
nmsqInitFig                              = 0x001DA710; // type:func    (Size->252)   
nmsqInitOption                           = 0x001DA810; // type:func    (Size->52)    
nmsqInitQue                              = 0x001DA850; // type:func    (Size->72)    
nmsqProcessQue                           = 0x001DA8A0; // type:func    (Size->712)   
nmsqCheckState                           = 0x001DAB70; // type:func    (Size->532)   
nmdispInit                               = 0x001DAD90; // type:func    (Size->724)   
nmdispInitReplay                         = 0x001DB070; // type:func    (Size->24)    
nmdispInitEnv                            = 0x001DB090; // type:func    (Size->116)   
nmdispInitEnvChar                        = 0x001DB110; // type:func    (Size->132)   
nmdispInitResult                         = 0x001DB1A0; // type:func    (Size->84)    
nmdispInitMatchScore                     = 0x001DB200; // type:func    (Size->44)    
nmdispInitHorse                          = 0x001DB230; // type:func    (Size->248)   
nmdispInitFig                            = 0x001DB330; // type:func    (Size->812)   
nmdispInitFont                           = 0x001DB660; // type:func    (Size->212)   
nmdispInitPause                          = 0x001DB740; // type:func    (Size->504)   
nmdispInitList                           = 0x001DB940; // type:func    (Size->108)   
nmdispInitOperate                        = 0x001DB9B0; // type:func    (Size->28)    
nmdispInitIntr                           = 0x001DB9D0; // type:func    (Size->20)    
nmdispInitParam                          = 0x001DB9F0; // type:func    (Size->80)    
nmdispInitChar                           = 0x001DBA40; // type:func    (Size->424)   
nmdispInitStance                         = 0x001DBBF0; // type:func    (Size->116)   
nmdispInitTrick                          = 0x001DBC70; // type:func    (Size->1132)  
nmdispInitTrickPts                       = 0x001DC0E0; // type:func    (Size->492)   
nmdispInitLevelMes                       = 0x001DC2D0; // type:func    (Size->212)   
nmdispInitLevelGoals                     = 0x001DC3B0; // type:func    (Size->320)   
nmdispInitStatistics                     = 0x001DC4F0; // type:func    (Size->188)   
nmdispInitHighScore                      = 0x001DC5B0; // type:func    (Size->104)   
nmdispInitSound                          = 0x001DC620; // type:func    (Size->92)    
nmdispTotal                              = 0x001DC680; // type:func    (Size->296)   
nmdispTotalChar                          = 0x001DC7B0; // type:func    (Size->296)   
nmdispModel                              = 0x001DC8E0; // type:func    (Size->16)    
nmdispCareer                             = 0x001DC8F0; // type:func    (Size->244)   
nmdispCareerChar                         = 0x001DC9F0; // type:func    (Size->244)   
nmdispFreeride                           = 0x001DCAF0; // type:func    (Size->244)   
nmdispFreerideChar                       = 0x001DCBF0; // type:func    (Size->244)   
nmdispMatchAttack                        = 0x001DCCF0; // type:func    (Size->268)   
nmdispMatchAttackChar                    = 0x001DCE00; // type:func    (Size->224)   
nmdispMatchBoost                         = 0x001DCEE0; // type:func    (Size->280)   
nmdispMatchBoostChar                     = 0x001DD000; // type:func    (Size->256)   
nmdispMatchPush                          = 0x001DD100; // type:func    (Size->292)   
nmdispMatchPushChar                      = 0x001DD230; // type:func    (Size->208)   
nmdispMatchHorse                         = 0x001DD300; // type:func    (Size->292)   
nmdispMatchHorseChar                     = 0x001DD430; // type:func    (Size->192)   
nmdispIntr                               = 0x001DD4F0; // type:func    (Size->596)   
nmdispIntrCareer                         = 0x001DD750; // type:func    (Size->608)   
nmdispIntrMatch                          = 0x001DD9B0; // type:func    (Size->1796)  
nmdispIntrLevel                          = 0x001DE0C0; // type:func    (Size->4540)  
nmdispBackGround                         = 0x001DF280; // type:func    (Size->328)   
nmdispPauseCareer                        = 0x001DF3D0; // type:func    (Size->136)   
nmdispPauseMenuCareer                    = 0x001DF460; // type:func    (Size->1140)  
nmdispPauseFreeride                      = 0x001DF8E0; // type:func    (Size->136)   
nmdispPauseMenuFreeride                  = 0x001DF970; // type:func    (Size->1268)  
nmdispPauseMatch                         = 0x001DFE70; // type:func    (Size->124)   
nmdispPauseMenuMatch                     = 0x001DFEF0; // type:func    (Size->1140)  
nmdispPauseHorse                         = 0x001E0370; // type:func    (Size->112)   
nmdispPauseSelect                        = 0x001E03E0; // type:func    (Size->4144)  
nmdispSoundLevels                        = 0x001E1410; // type:func    (Size->6016)  
nmdispTrickList                          = 0x001E2B90; // type:func    (Size->10724) 
nmdispLevelGoalList                      = 0x001E5580; // type:func    (Size->2896)  
nmdispTutorial                           = 0x001E60D0; // type:func    (Size->52)    
nmdispPadInfo                            = 0x001E6110; // type:func    (Size->344)   
nmdispTutoMes                            = 0x001E6270; // type:func    (Size->5460)  
nmdispDebugMenu                          = 0x001E77D0; // type:func    (Size->16)    
nmdispTimeLeft                           = 0x001E77E0; // type:func    (Size->2732)  
nmdispTotalTrkPts                        = 0x001E8290; // type:func    (Size->1912)  
nmdispTrkMeter                           = 0x001E8A10; // type:func    (Size->1856)  
nmdispSwitch                             = 0x001E9150; // type:func    (Size->1056)  
nmdispBalance                            = 0x001E9570; // type:func    (Size->1208)  
nmdispTrickName                          = 0x001E9A30; // type:func    (Size->356)   
nmdispTrickNameTrans                     = 0x001E9BA0; // type:func    (Size->22576) 
nmdispTrickNameFreeze                    = 0x001EF3D0; // type:func    (Size->904)   
nmdispTrickNameFaild                     = 0x001EF760; // type:func    (Size->1564)  
nmdispTrickPts                           = 0x001EFD80; // type:func    (Size->356)   
nmdispTrickPtsTrans                      = 0x001EFEF0; // type:func    (Size->2660)  
nmdispTrickPtsFreeze                     = 0x001F0960; // type:func    (Size->644)   
nmdispTrickPtsFaild                      = 0x001F0BF0; // type:func    (Size->1152)  
nmdispRankVer                            = 0x001F1070; // type:func    (Size->1204)  
nmdispRankHor                            = 0x001F1530; // type:func    (Size->988)   
nmdispLevelMes                           = 0x001F1910; // type:func    (Size->6496)  
nmdispOutMes                             = 0x001F3270; // type:func    (Size->880)   
nmdispWinLoseDraw                        = 0x001F35E0; // type:func    (Size->1560)  
nmdispDivLine                            = 0x001F3C00; // type:func    (Size->328)   
nmdispDivExpLine                         = 0x001F3D50; // type:func    (Size->352)   
nmdispDivLineImage                       = 0x001F3EB0; // type:func    (Size->620)   
nmdispFireSil                            = 0x001F4120; // type:func    (Size->372)   
nmdispBoostMeter                         = 0x001F42A0; // type:func    (Size->1364)  
nmdispBoostLap                           = 0x001F4800; // type:func    (Size->912)   
nmdispHorsePts                           = 0x001F4B90; // type:func    (Size->932)   
nmdispHorseEnter                         = 0x001F4F40; // type:func    (Size->1100)  
nmdispHorseMes                           = 0x001F5390; // type:func    (Size->5936)  
nmdispResultCareer                       = 0x001F6AC0; // type:func    (Size->76)    
nmdispResultFreeride                     = 0x001F6B10; // type:func    (Size->52)    
nmdispResultMatch                        = 0x001F6B50; // type:func    (Size->52)    
nmdispLevelGoals                         = 0x001F6B90; // type:func    (Size->4480)  
nmdispStatisCareer                       = 0x001F7D10; // type:func    (Size->4516)  
nmdispStatisFreeride                     = 0x001F8EC0; // type:func    (Size->1936)  
nmdispStatisMatch                        = 0x001F9650; // type:func    (Size->6196)  
nmdispHighScore                          = 0x001FAE90; // type:func    (Size->2872)  
nmdispBackLogo                           = 0x001FB9D0; // type:func    (Size->436)   
nmdispCareerUp                           = 0x001FBB90; // type:func    (Size->2240)  
nmdispTrickComb                          = 0x001FC450; // type:func    (Size->5192)  
nmdispReplay                             = 0x001FD8A0; // type:func    (Size->592)   
nmdispReplayMatch                        = 0x001FDAF0; // type:func    (Size->576)   
nmdispDemo                               = 0x001FDD30; // type:func    (Size->668)   
nmdispCalcTotal                          = 0x001FDFD0; // type:func    (Size->228)   
nmdispCalcTotalChar                      = 0x001FE0C0; // type:func    (Size->248)   
nmdispCalcCareer                         = 0x001FE1C0; // type:func    (Size->220)   
nmdispCalcCareerChar                     = 0x001FE2A0; // type:func    (Size->180)   
nmdispCalcFreeride                       = 0x001FE360; // type:func    (Size->220)   
nmdispCalcFreerideChar                   = 0x001FE440; // type:func    (Size->172)   
nmdispCalcMatchAttack                    = 0x001FE4F0; // type:func    (Size->228)   
nmdispCalcMatchAttackChar                = 0x001FE5E0; // type:func    (Size->172)   
nmdispCalcMatchBoostChar                 = 0x001FE690; // type:func    (Size->184)   
nmdispCalcMatchPush                      = 0x001FE750; // type:func    (Size->252)   
nmdispCalcMatchPushChar                  = 0x001FE850; // type:func    (Size->172)   
nmdispCalcMatchHorse                     = 0x001FE900; // type:func    (Size->244)   
nmdispCalcMatchHorseChar                 = 0x001FEA00; // type:func    (Size->172)   
nmdispCalcIntr                           = 0x001FEAB0; // type:func    (Size->168)   
nmdispCalcParam                          = 0x001FEB60; // type:func    (Size->620)   
nmdispCalcSlide                          = 0x001FEDD0; // type:func    (Size->944)   
nmdispCalcOperate                        = 0x001FF180; // type:func    (Size->176)   
nmdispCalcBackGround                     = 0x001FF230; // type:func    (Size->148)   
nmdispCalcPauseCareer                    = 0x001FF2D0; // type:func    (Size->268)   
nmdispCalcPauseMenuCareer                = 0x001FF3E0; // type:func    (Size->1264)  
nmdispCalcPauseFreeride                  = 0x001FF8D0; // type:func    (Size->276)   
nmdispCalcPauseMenuFreeride              = 0x001FF9F0; // type:func    (Size->1164)  
nmdispCalcPauseMatch                     = 0x001FFE80; // type:func    (Size->260)   
nmdispCalcPauseMenuMatch                 = 0x001FFF90; // type:func    (Size->1208)  
nmdispCalcPauseHorse                     = 0x00200450; // type:func    (Size->252)   
nmdispCalcSoundLevels                    = 0x00200550; // type:func    (Size->460)   
nmdispCalcRetry                          = 0x00200720; // type:func    (Size->224)   
nmdispCalcTrickList                      = 0x00200800; // type:func    (Size->132)   
nmdispCalcTrickListCate                  = 0x00200890; // type:func    (Size->1912)  
nmdispCalcLevelGoalList                  = 0x00201010; // type:func    (Size->488)   
nmdispCalcTutorial                       = 0x00201200; // type:func    (Size->172)   
nmdispCalcTutoMes                        = 0x002012B0; // type:func    (Size->560)   
nmdispCalcDebugMenu                      = 0x002014E0; // type:func    (Size->560)   
nmdispCalcGapList                        = 0x00201710; // type:func    (Size->516)   
nmdispCalcPauseSelect                    = 0x00201920; // type:func    (Size->1164)  
nmdispCalcMenuItem                       = 0x00201DB0; // type:func    (Size->156)   
nmdispCalcMenuItem2                      = 0x00201E50; // type:func    (Size->156)   
nmdispCalcAllow                          = 0x00201EF0; // type:func    (Size->152)   
nmdispCalcTimeLeft                       = 0x00201F90; // type:func    (Size->220)   
nmdispCalcTrkMeter                       = 0x00202070; // type:func    (Size->916)   
nmdispCalcBoostMeter                     = 0x00202410; // type:func    (Size->340)   
nmdispCalcSwitch                         = 0x00202570; // type:func    (Size->1820)  
nmdispCalcBalance                        = 0x00202C90; // type:func    (Size->1584)  
nmdispCalcTrickName                      = 0x002032C0; // type:func    (Size->1456)  
nmdispCalcTrickNameCol                   = 0x00203870; // type:func    (Size->768)   
nmdispCalcTrickNameFaild                 = 0x00203B70; // type:func    (Size->4260)  
nmdispCalcTrickPts                       = 0x00204C20; // type:func    (Size->2892)  
nmdispCalcTrickPtsFaild                  = 0x00205770; // type:func    (Size->3036)  
nmdispCalcLevelMes                       = 0x00206350; // type:func    (Size->788)   
nmdispCalcOutMes                         = 0x00206670; // type:func    (Size->476)   
nmdispCalcDiv                            = 0x00206850; // type:func    (Size->800)   
nmdispCalcDivExp                         = 0x00206B70; // type:func    (Size->196)   
nmdispCalcDivImage                       = 0x00206C40; // type:func    (Size->212)   
nmdispCalcWinLoseDraw                    = 0x00206D20; // type:func    (Size->584)   
nmdispCalcHorseEnter                     = 0x00206F70; // type:func    (Size->476)   
nmdispCalcHorseMes                       = 0x00207150; // type:func    (Size->824)   
nmdispCalcResultCareer                   = 0x00207490; // type:func    (Size->56)    
nmdispCalcResultFreeride                 = 0x002074D0; // type:func    (Size->40)    
nmdispCalcResultMatch                    = 0x00207500; // type:func    (Size->40)    
nmdispCalcResultFade                     = 0x00207530; // type:func    (Size->288)   
nmdispCalcLevelGoals                     = 0x00207650; // type:func    (Size->460)   
nmdispCalcStatisCareer                   = 0x00207820; // type:func    (Size->468)   
nmdispCalcStatisFreeride                 = 0x00207A00; // type:func    (Size->436)   
nmdispCalcStatisMatch                    = 0x00207BC0; // type:func    (Size->424)   
nmdispCalcHighScore                      = 0x00207D70; // type:func    (Size->460)   
nmdispCalcGameSoft                       = 0x00207F40; // type:func    (Size->436)   
nmdispCalcCheckMark                      = 0x00208100; // type:func    (Size->324)   
nmdispCalcCareerUp                       = 0x00208250; // type:func    (Size->480)   
nmdispCalcReplay                         = 0x00208430; // type:func    (Size->312)   
nmdispFlowTotal                          = 0x00208570; // type:func    (Size->112)   
nmdispFlowCareer                         = 0x002085E0; // type:func    (Size->480)   
nmdispFlowFreeride                       = 0x002087C0; // type:func    (Size->480)   
nmdispFlowMatch                          = 0x002089A0; // type:func    (Size->668)   
nmdispFlowSelectBgm                      = 0x00208C40; // type:func    (Size->228)   
nmdispFlowResultCareer                   = 0x00208D30; // type:func    (Size->908)   
nmdispFlowResultFreeride                 = 0x002090C0; // type:func    (Size->316)   
nmdispFlowResultMatch                    = 0x00209200; // type:func    (Size->176)   
nmdispFlowLevelGoals                     = 0x002092B0; // type:func    (Size->592)   
nmdispFlowStatistics                     = 0x00209500; // type:func    (Size->672)   
nmdispFlowSoftCount                      = 0x002097A0; // type:func    (Size->3732)  
nmdispOpeIntr                            = 0x0020A640; // type:func    (Size->140)   
nmdispOpeIntrMatch                       = 0x0020A6D0; // type:func    (Size->160)   
nmdispOpePauseCareer                     = 0x0020A770; // type:func    (Size->1368)  
nmdispOpePauseFreeride                   = 0x0020ACD0; // type:func    (Size->2076)  
nmdispOpePauseMatch                      = 0x0020B4F0; // type:func    (Size->1312)  
nmdispOpeSoundLevels                     = 0x0020BA10; // type:func    (Size->1900)  
nmdispOpeTrickList                       = 0x0020C180; // type:func    (Size->1096)  
nmdispOpeLevelGoalList                   = 0x0020C5D0; // type:func    (Size->296)   
nmdispOpeDebug                           = 0x0020C700; // type:func    (Size->8)     
nmdispOpeHorse                           = 0x0020C710; // type:func    (Size->372)   
nmdispOpeEnterWord                       = 0x0020C890; // type:func    (Size->956)   
nmdispOpeResultCareer                    = 0x0020CC50; // type:func    (Size->888)   
nmdispOpeResultFreeride                  = 0x0020CFD0; // type:func    (Size->316)   
nmdispOpeResultMatch                     = 0x0020D110; // type:func    (Size->200)   
nmdispOpeNameEntry                       = 0x0020D1E0; // type:func    (Size->772)   
nmdispOpeReplay                          = 0x0020D4F0; // type:func    (Size->112)   
nmdispOpeReplayMatch                     = 0x0020D560; // type:func    (Size->132)   
nmdispOpeDemo                            = 0x0020D5F0; // type:func    (Size->140)   
nmdispInputParam                         = 0x0020D680; // type:func    (Size->84)    
nmdispInputTrick                         = 0x0020D6E0; // type:func    (Size->228)   
nmdispInputLevel                         = 0x0020D7D0; // type:func    (Size->356)   
nmdispInputLevelCount                    = 0x0020D940; // type:func    (Size->376)   
nmdispInputOutMes                        = 0x0020DAC0; // type:func    (Size->132)   
nmdispInputResult                        = 0x0020DB50; // type:func    (Size->596)   
nmdispInputHorseResult                   = 0x0020DDB0; // type:func    (Size->340)   
nmdispEndTrick                           = 0x0020DF10; // type:func    (Size->904)   
nmdispEndReplay                          = 0x0020E2A0; // type:func    (Size->84)    
nmdispEndHorse                           = 0x0020E300; // type:func    (Size->192)   
nmdispEndSound                           = 0x0020E3C0; // type:func    (Size->124)   
nmdispGetMode                            = 0x0020E440; // type:func    (Size->16)    
nmdispCheckIntr                          = 0x0020E450; // type:func    (Size->40)    
nmdispCheckHorse                         = 0x0020E480; // type:func    (Size->12)    
nmdispGetHorseNum                        = 0x0020E490; // type:func    (Size->12)    
nmdispSearchRank                         = 0x0020E4A0; // type:func    (Size->216)   
nmdispTransTex                           = 0x0020E580; // type:func    (Size->64)    
nmdispRenewTrick                         = 0x0020E5C0; // type:func    (Size->592)   
nmdispSetTrickFall                       = 0x0020E810; // type:func    (Size->496)   
nmdispChanState                          = 0x0020EA00; // type:func    (Size->704)   
nmdrawFade                               = 0x0020ECC0; // type:func    (Size->308)   
nmdrawKeyOperate                         = 0x0020EE00; // type:func    (Size->2052)  
nmdrawBar                                = 0x0020F610; // type:func    (Size->952)   
nmdrawTime                               = 0x0020F9D0; // type:func    (Size->404)   
nmdrawPoint                              = 0x0020FB70; // type:func    (Size->3544)  
nmdrawGetPointLen                        = 0x00210950; // type:func    (Size->776)   
nmdrawCheck                              = 0x00210C60; // type:func    (Size->320)   
nmdrawAllow                              = 0x00210DA0; // type:func    (Size->256)   
nmdrawBalance2                           = 0x00210EA0; // type:func    (Size->3252)  
nmdrawMeter                              = 0x00211B60; // type:func    (Size->1992)  
nmdrawIceFont                            = 0x00212330; // type:func    (Size->2068)  
nmdrawDual                               = 0x00212B50; // type:func    (Size->3692)  
nmdrawInit                               = 0x002139C0; // type:func    (Size->100)   
nmdrawFLineStrip                         = 0x00213A30; // type:func    (Size->696)   
nmdrawFPoly                              = 0x00213CF0; // type:func    (Size->992)   
nmdrawGPoly                              = 0x002140D0; // type:func    (Size->1216)  
nmdrawFTex                               = 0x00214590; // type:func    (Size->1388)  
nmdrawSwitchTest                         = 0x00214B00; // type:func    (Size->272)   
nmdrawSwitchBil                          = 0x00214C10; // type:func    (Size->272)   
nmdrawChangeVertex                       = 0x00214D20; // type:func    (Size->156)   
nmdrawInitLSF4                           = 0x00214DC0; // type:func    (Size->88)    
knIntroInit                              = 0x00214E20; // type:func    (Size->572)   
knIntroMain                              = 0x00215060; // type:func    (Size->2872)  
knCoreSubVectorXYZ                       = 0x00215BA0; // (Region->MULTID) (Type->FUNC)    (Size->28)    
knIntroSetData                           = 0x00215BC0; // type:func    (Size->204)   
knIntroSetData2                          = 0x00215C90; // type:func    (Size->588)   
knIntroRotCamera                         = 0x00215EE0; // type:func    (Size->404)   
knReplayInit                             = 0x00216080; // type:func    (Size->744)   
knReplayMain                             = 0x00216370; // type:func    (Size->2368)  
knReplayResetCheck                       = 0x00216CB0; // type:func    (Size->340)   
knReplayStatusCheck                      = 0x00216E10; // type:func    (Size->228)   
knReplayGetCube                          = 0x00216F00; // type:func    (Size->544)   
knReplayGetBlock                         = 0x00217120; // type:func    (Size->168)   
knReplayInterPol                         = 0x002171D0; // type:func    (Size->456)   
knReplaySetObstPos                       = 0x002173A0; // type:func    (Size->136)   
knReplayCtrlCameraMain                   = 0x00217430; // type:func    (Size->76)    
knReplayResetCamera                      = 0x00217480; // type:func    (Size->332)   
knReplayCtrlView                         = 0x002175D0; // type:func    (Size->3856)  
knReplayGetLen                           = 0x002184E0; // type:func    (Size->96)    
knReplayCtrlObj                          = 0x00218540; // type:func    (Size->1012)  
knReplayCtrlEffect                       = 0x00218940; // type:func    (Size->688)   
knReplayCtrlEvent                        = 0x00218BF0; // type:func    (Size->1656)  
knReplayTumbleSpecial                    = 0x00219270; // type:func    (Size->700)   
knReplayInitDefaultCamera                = 0x00219530; // type:func    (Size->524)   
knReplayCtrlDefaultCamera                = 0x00219740; // type:func    (Size->1000)  
knReplayBlur                             = 0x00219B30; // type:func    (Size->356)   
knReplayRelative                         = 0x00219CA0; // type:func    (Size->280)   
knReplayRotRelative                      = 0x00219DC0; // type:func    (Size->128)   
knReplayPointToPoint                     = 0x00219E40; // type:func    (Size->1500)  
knReplayBetweenPoint                     = 0x0021A420; // type:func    (Size->372)   
knReplayPointApproach                    = 0x0021A5A0; // type:func    (Size->516)   
knReplayCharForward                      = 0x0021A7B0; // type:func    (Size->524)   
knReplayCharRotCamera                    = 0x0021A9C0; // type:func    (Size->108)   
knReplayAxisMove                         = 0x0021AA30; // type:func    (Size->224)   
knReplayFixRot                           = 0x0021AB10; // type:func    (Size->160)   
knReplayCharFrameIn                      = 0x0021ABB0; // type:func    (Size->340)   
knReplayCameraShakeTYPE1                 = 0x0021AD10; // type:func    (Size->784)   
knReplayCameraShakeTYPE2                 = 0x0021B020; // type:func    (Size->516)   
knReplayAxisRotMatrix                    = 0x0021B230; // type:func    (Size->680)   
knReplayGetLenScale                      = 0x0021B4E0; // type:func    (Size->120)   
spev01Init                               = 0x0021B560; // type:func    (Size->1852)  
spev01ResetEvent                         = 0x0021BCA0; // type:func    (Size->960)   
spev01MainEvent                          = 0x0021C060; // type:func    (Size->1528)  
spev01PlayerEvent                        = 0x0021C660; // type:func    (Size->3608)  
spev01DrawEvent                          = 0x0021D480; // type:func    (Size->204)   
spev01DrawPlayerEvent                    = 0x0021D550; // type:func    (Size->20)    
spev01FinishPlayerEvent                  = 0x0021D570; // type:func    (Size->60)    
spev01End                                = 0x0021D5B0; // type:func    (Size->88)    
spev01ResetLevelGoals                    = 0x0021D610; // type:func    (Size->12)    
spev01CheckLevelGoals                    = 0x0021D620; // type:func    (Size->796)   
spev01ResetGaps                          = 0x0021D940; // type:func    (Size->8)     
spev01CheckGaps                          = 0x0021D950; // type:func    (Size->3984)  
spev01CheckGrindGaps                     = 0x0021E8E0; // type:func    (Size->7004)  
spev01CheckPlantGaps                     = 0x00220440; // type:func    (Size->676)   
spev01CheckGap_A1                        = 0x002206F0; // type:func    (Size->164)   
spev01CheckGap_A2                        = 0x002207A0; // type:func    (Size->176)   
spev01CheckGap_A4                        = 0x00220850; // type:func    (Size->104)   
spev01CheckGap_A5                        = 0x002208C0; // type:func    (Size->336)   
spev01CheckGap_A6                        = 0x00220A10; // type:func    (Size->248)   
spev01CheckGap_A7                        = 0x00220B10; // type:func    (Size->312)   
spev01CheckGap_A8                        = 0x00220C50; // type:func    (Size->248)   
spev01CheckGap_A10                       = 0x00220D50; // type:func    (Size->248)   
spev01CheckGap_M1                        = 0x00220E50; // type:func    (Size->312)   
spev01CheckGap_O2_1                      = 0x00220F90; // type:func    (Size->552)   
spev01CheckGap_O2_2                      = 0x002211C0; // type:func    (Size->524)   
spev01CheckGap_O2_3                      = 0x002213D0; // type:func    (Size->476)   
spev01CheckGap_O2_4                      = 0x002215B0; // type:func    (Size->484)   
spev01ResetObject                        = 0x002217A0; // type:func    (Size->1204)  
spev01ResetLift1                         = 0x00221C60; // type:func    (Size->972)   
spev01MoveLift1                          = 0x00222030; // type:func    (Size->1912)  
spev01ResetLift2                         = 0x002227B0; // type:func    (Size->1012)  
spev01MoveLift2                          = 0x00222BB0; // type:func    (Size->1888)  
spev01RollGear                           = 0x00223310; // type:func    (Size->200)   
spev01ResetSki                           = 0x002233E0; // type:func    (Size->724)   
spev01TumbleSki                          = 0x002236C0; // type:func    (Size->520)   
spev01ResetLogo                          = 0x002238D0; // type:func    (Size->508)   
spev01FallLogo                           = 0x00223AD0; // type:func    (Size->1344)  
spev01ResetDram                          = 0x00224010; // type:func    (Size->168)   
spev01ResetWindow                        = 0x002240C0; // type:func    (Size->408)   
spev01ChangeWindow                       = 0x00224260; // type:func    (Size->188)   
spev01ResetCamera                        = 0x00224320; // type:func    (Size->764)   
spev01MoveCamera                         = 0x00224620; // type:func    (Size->3248)  
spev01CheckCamera                        = 0x002252D0; // type:func    (Size->52)    
spev01ResetTower                         = 0x00225310; // type:func    (Size->460)   
spev01MoveTower                          = 0x002254E0; // type:func    (Size->1120)  
spev01SetTowerCollision                  = 0x00225940; // type:func    (Size->196)   
spev01ResetLiftMan                       = 0x00225A10; // type:func    (Size->820)   
spev01MoveLiftMan                        = 0x00225D50; // type:func    (Size->3848)  
sbcoreInit                               = 0x00226C60; // type:func    (Size->700)   
sbcoreInitPLANE                          = 0x00226F20; // type:func    (Size->172)   
sbcoreInitPLANESET                       = 0x00226FD0; // type:func    (Size->364)   
sbcoreSetNextPos                         = 0x00227140; // type:func    (Size->56)    
isbcoreGetNextPos                        = 0x00227180; // (Region->MULTID) (Type->FUNC)    (Size->96)    
sbcoreSetNextPosOnVertexList             = 0x002271E0; // type:func    (Size->1600)  
isbcoreGetLen                            = 0x00227820; // (Region->MULTID) (Type->FUNC)    (Size->60)    
sbcoreSetNextPosOnVertexListHP           = 0x00227860; // type:func    (Size->1908)  
isbcoreGetLenXZ                          = 0x00227FE0; // (Region->MULTID) (Type->FUNC)    (Size->68)    
sbcoreMove                               = 0x00228030; // type:func    (Size->812)   
sbcoreCheckSliding                       = 0x00228360; // type:func    (Size->3964)  
sbcoreCheckGrind                         = 0x002292E0; // type:func    (Size->692)   
sbcoreAdjTouch                           = 0x002295A0; // type:func    (Size->376)   
sbcoreGetCheckTouchArea                  = 0x00229720; // type:func    (Size->268)   
sbcoreGetCheckHeightArea                 = 0x00229830; // type:func    (Size->136)   
sbcoreGetCheckHeightArea_onair           = 0x002298C0; // type:func    (Size->512)   
sbcoreUpdateReliefGap                    = 0x00229AC0; // type:func    (Size->844)   
sbcoreAdjOnSliding                       = 0x00229E10; // type:func    (Size->220)   
sbcoreUpdateOnSliding                    = 0x00229EF0; // type:func    (Size->308)   
sbcoreUpdateOnAir                        = 0x0022A030; // type:func    (Size->164)   
sbcoreGetRotMatrix                       = 0x0022A0E0; // type:func    (Size->388)   
sbcoreGetShadowVector                    = 0x0022A270; // type:func    (Size->144)   
sbcoreGetShadowRotVector                 = 0x0022A300; // type:func    (Size->136)   
sbcoreGetShadowVectorXZ                  = 0x0022A390; // type:func    (Size->416)   
sbcoreGetShadowVector2                   = 0x0022A530; // type:func    (Size->288)   
sbcoreGetShadowVector3                   = 0x0022A650; // type:func    (Size->604)   
sbcoreGetMirrorVector                    = 0x0022A8B0; // type:func    (Size->348)   
sbcoreGetMirrorVector_angle              = 0x0022AA10; // type:func    (Size->508)   
sbcoreGetInnerAngle90                    = 0x0022AC10; // type:func    (Size->116)   
sbcoreGetInnerAngle180                   = 0x0022AC90; // type:func    (Size->104)   
ayCreateInit                             = 0x0022AD00; // type:func    (Size->56)    
ayCreateFrame                            = 0x0022AD40; // type:func    (Size->4152)  
ayCreateClear                            = 0x0022BD80; // type:func    (Size->212)   
aySetCharPtr                             = 0x0022BE60; // type:func    (Size->144)   
aySetCharParts                           = 0x0022BEF0; // type:func    (Size->184)   
ayCreateEnd                              = 0x0022BFB0; // type:func    (Size->36)    
ayDrawHead                               = 0x0022BFE0; // type:func    (Size->3088)  
ayDrawFileList                           = 0x0022CBF0; // type:func    (Size->2184)  
ayDrawChara                              = 0x0022D480; // type:func    (Size->1500)  
ayDrawNameEntry                          = 0x0022DA60; // type:func    (Size->3888)  
ayDrawWheelItem                          = 0x0022E990; // type:func    (Size->3952)  
ayDrawMain                               = 0x0022F900; // type:func    (Size->1688)  
ayDrawPerson                             = 0x0022FFA0; // type:func    (Size->3208)  
ayDrawBuild                              = 0x00230C30; // type:func    (Size->5456)  
ayDrawParam                              = 0x00232180; // type:func    (Size->2632)  
ayCalcBarMove                            = 0x00232BD0; // type:func    (Size->300)   
ayDrawRem                                = 0x00232D00; // type:func    (Size->668)   
ayDrawConfirm                            = 0x00232FA0; // type:func    (Size->3000)  
//aySetKeyOparate                          = 0x00233B60; // type:func    (Size->496)   
ayGetTricktype                           = 0x00233D50; // type:func    (Size->484)   
akSrandf                                 = 0x00233F40; // type:func    (Size->16)    
akRandf                                  = 0x00233F50; // type:func    (Size->56)    
spfxSetTexData                           = 0x00233F90; // type:func    (Size->28)    
spfxGetTexData                           = 0x00233FB0; // type:func    (Size->12)    
akfxInitLensFlare                        = 0x00233FC0; // type:func    (Size->140)   
akfxFreeLensFlare                        = 0x00234050; // type:func    (Size->32)    
akfxDrawLensFlare                        = 0x00234070; // type:func    (Size->976)   
_CheckHiddenZ16x8                        = 0x00234440; // type:func    (Size->2208)  
_DrawLightFlare                          = 0x00234CE0; // type:func    (Size->520)   
_DrawLensFlare                           = 0x00234EF0; // type:func    (Size->864)   
akfxInitSnowSplash                       = 0x00235250; // type:func    (Size->276)   
akfxResetSnowSplash                      = 0x00235370; // type:func    (Size->1732)  
akfxRestartSnowSplash                    = 0x00235A40; // type:func    (Size->252)   
akfxSetSnowSplashColor                   = 0x00235B40; // type:func    (Size->84)    
akfxFreeSnowSplash                       = 0x00235BA0; // type:func    (Size->288)   
akfxCalcSnowSplash                       = 0x00235CC0; // type:func    (Size->1400)  
_CalcSnowSplash                          = 0x00236240; // type:func    (Size->1000)  
_CalcSnowSplashPowder                    = 0x00236630; // type:func    (Size->2460)  
_MoveSnowSplash                          = 0x00236FD0; // type:func    (Size->352)   
akfxDrawSnowSplash                       = 0x00237130; // type:func    (Size->256)   
_DrawSnowSplash                          = 0x00237230; // type:func    (Size->2472)  
_CalcSnowSmoke                           = 0x00237BE0; // type:func    (Size->3296)  
_DrawSnowSmoke                           = 0x002388C0; // type:func    (Size->1696)  
_akfxCalcLandingSnow                     = 0x00238F60; // type:func    (Size->528)   
_MoveLandingSnow                         = 0x00239170; // type:func    (Size->440)   
_DrawLandingSnow                         = 0x00239330; // type:func    (Size->2004)  
akfxMotionBlur                           = 0x00239B10; // type:func    (Size->1416)  
akfxInitSnowFall                         = 0x0023A0A0; // type:func    (Size->320)   
akfxSnowFall                             = 0x0023A1E0; // type:func    (Size->2180)  
akfxFreeSnowFall                         = 0x0023AA70; // type:func    (Size->88)    
ayResultInit                             = 0x0023AAD0; // type:func    (Size->84)    
ayResultFrame                            = 0x0023AB30; // type:func    (Size->5748)  
ayResultEnd                              = 0x0023C1B0; // type:func    (Size->44)    
ayResultClear                            = 0x0023C1E0; // type:func    (Size->1440)  
ayCheckLoad                              = 0x0023C780; // type:func    (Size->1308)  
//aySelHeadDraw                            = 0x0023CCA0; // type:func    (Size->1476)  
ayDrawMenu                               = 0x0023D270; // type:func    (Size->2640)  
ayDrawGoals                              = 0x0023DCC0; // type:func    (Size->3200)  
//aySetKeyOparate                          = 0x0023E940; // type:func    (Size->1560)  
ayDrawCsLogo                             = 0x0023EF60; // type:func    (Size->792)   
//ayDrawScore                              = 0x0023F280; // type:func    (Size->1336)  
ayDrawStats                              = 0x0023F7C0; // type:func    (Size->5096)  
ayAddStats                               = 0x00240BB0; // type:func    (Size->220)   
//ayDrawConfirm                            = 0x00240C90; // type:func    (Size->1544)  
ayDrawSave                               = 0x002412A0; // type:func    (Size->1232)  
ayDrawChange                             = 0x00241770; // type:func    (Size->13332) 
ayDrawChWear                             = 0x00244B90; // type:func    (Size->1748)  
ayDrawChBoard                            = 0x00245270; // type:func    (Size->6024)  
ayDrawChCs                               = 0x00246A00; // type:func    (Size->2652)  
ayDrawChPlayer                           = 0x00247460; // type:func    (Size->2624)  
ayDrawChHandi                            = 0x00247EA0; // type:func    (Size->1720)  
ayDrawChRule                             = 0x00248560; // type:func    (Size->1760)  
ayDrawBackBoard                          = 0x00248C40; // type:func    (Size->1040)  
ayChangeCharID                           = 0x00249050; // type:func    (Size->192)   
ayDrawEnding                             = 0x00249110; // type:func    (Size->148)   
spev04Init                               = 0x002491B0; // type:func    (Size->500)   
spev04ResetEvent                         = 0x002493B0; // type:func    (Size->328)   
spev04MainEvent                          = 0x00249500; // type:func    (Size->1656)  
spev04PlayerEvent                        = 0x00249B80; // type:func    (Size->212)   
spev04DrawEvent                          = 0x00249C60; // type:func    (Size->228)   
spev04DrawPlayerEvent                    = 0x00249D50; // type:func    (Size->20)    
spev04FinishPlayerEvent                  = 0x00249D70; // type:func    (Size->76)    
spev04End                                = 0x00249DC0; // type:func    (Size->104)   
spev04ResetObject                        = 0x00249E30; // type:func    (Size->1720)  
spev04ResetWindow                        = 0x0024A4F0; // type:func    (Size->308)   
spev04CheckWindow                        = 0x0024A630; // type:func    (Size->272)   
spev04ResetLift                          = 0x0024A740; // type:func    (Size->912)   
spev04MoveLift                           = 0x0024AAD0; // type:func    (Size->2236)  
spev04ResetGond1                         = 0x0024B390; // type:func    (Size->524)   
spev04MoveGond1                          = 0x0024B5A0; // type:func    (Size->2576)  
spev04TurnGond1                          = 0x0024BFB0; // type:func    (Size->272)   
spev04ResetGond2                         = 0x0024C0C0; // type:func    (Size->524)   
spev04MoveGond2                          = 0x0024C2D0; // type:func    (Size->2664)  
spev04TurnGond2                          = 0x0024CD40; // type:func    (Size->272)   
spev04ResetSnowBall                      = 0x0024CE50; // type:func    (Size->916)   
spev04CheckSnowBall                      = 0x0024D1F0; // type:func    (Size->1920)  
spev04MoveSnowBall                       = 0x0024D970; // type:func    (Size->3720)  
spev04FailSnowBall                       = 0x0024E800; // type:func    (Size->308)   
spev04FinishSnowBall                     = 0x0024E940; // type:func    (Size->172)   
spev04ResetCrane                         = 0x0024E9F0; // type:func    (Size->1452)  
spev04CheckCrane                         = 0x0024EFA0; // type:func    (Size->5424)  
spev04MoveCrane                          = 0x002504D0; // type:func    (Size->432)   
spev04ScissorCrane                       = 0x00250680; // type:func    (Size->420)   
spev04ResetLamp                          = 0x00250830; // type:func    (Size->32)    
spev04CheckLamp                          = 0x00250850; // type:func    (Size->488)   
spev04BreakLamp                          = 0x00250A40; // type:func    (Size->260)   
spev04ResetStaff                         = 0x00250B50; // type:func    (Size->964)   
spev04CheckStaff                         = 0x00250F20; // type:func    (Size->3864)  
spev04ReturnStaff                        = 0x00251E40; // type:func    (Size->268)   
spev04InitNeonScroll                     = 0x00251F50; // type:func    (Size->600)   
spev04ResetNeonScroll                    = 0x002521B0; // type:func    (Size->164)   
spev04SetNeonScroll                      = 0x00252260; // type:func    (Size->616)   
spev04PlayEffect                         = 0x002524D0; // type:func    (Size->1068)  
spev04SeLift                             = 0x00252900; // type:func    (Size->884)   
spev04SeSnowBall                         = 0x00252C80; // type:func    (Size->648)   
spev04SeFountain                         = 0x00252F10; // type:func    (Size->908)   
spev04ResetLevelGoals                    = 0x002532A0; // type:func    (Size->28)    
spev04CheckLevelGoals                    = 0x002532C0; // type:func    (Size->1440)  
spev04ResetGaps                          = 0x00253860; // type:func    (Size->8)     
spev04CheckGaps                          = 0x00253870; // type:func    (Size->940)   
spev04CheckAirGaps                       = 0x00253C20; // type:func    (Size->3668)  
spev04CheckGap_A4                        = 0x00254A80; // type:func    (Size->160)   
spev04CheckGap_A6                        = 0x00254B20; // type:func    (Size->160)   
spev04CheckGap_A7                        = 0x00254BC0; // type:func    (Size->384)   
spev04CheckGap_A9                        = 0x00254D40; // type:func    (Size->188)   
spev04CheckGap_A11                       = 0x00254E00; // type:func    (Size->160)   
spev04CheckGap_A12                       = 0x00254EA0; // type:func    (Size->384)   
spev04CheckGap_A13                       = 0x00255020; // type:func    (Size->384)   
spev04CheckGap_A14                       = 0x002551A0; // type:func    (Size->184)   
spev04CheckGap_A15                       = 0x00255260; // type:func    (Size->160)   
spev04CheckGap_A16                       = 0x00255300; // type:func    (Size->336)   
spev04CheckGap_A18                       = 0x00255450; // type:func    (Size->160)   
spev04CheckGap_A20                       = 0x002554F0; // type:func    (Size->160)   
spev04CheckGap_A21                       = 0x00255590; // type:func    (Size->160)   
spev04CheckGap_A22                       = 0x00255630; // type:func    (Size->160)   
spev04CheckGap_A23                       = 0x002556D0; // type:func    (Size->160)   
spev04CheckManualGaps                    = 0x00255770; // type:func    (Size->488)   
spev04CheckGap_M1                        = 0x00255960; // type:func    (Size->696)   
spev04CheckGrindGaps                     = 0x00255C20; // type:func    (Size->2888)  
spev04CheckGap_G4                        = 0x00256770; // type:func    (Size->236)   
spev04CheckGap_G5                        = 0x00256860; // type:func    (Size->92)    
spev04CheckGap_G6                        = 0x002568C0; // type:func    (Size->132)   
spev04CheckGap_G7                        = 0x00256950; // type:func    (Size->212)   
spev04CheckGap_G9                        = 0x00256A30; // type:func    (Size->188)   
spev04CheckGap_G10                       = 0x00256AF0; // type:func    (Size->200)   
spev04CheckGap_G15                       = 0x00256BC0; // type:func    (Size->224)   
spev04CheckGap_G16                       = 0x00256CA0; // type:func    (Size->236)   
spev04CheckLipGaps                       = 0x00256D90; // type:func    (Size->216)   
spev04CheckOtherGaps                     = 0x00256E70; // type:func    (Size->508)   
spev04CheckGap_O1                        = 0x00257070; // type:func    (Size->164)   
spev04CheckGap_O2                        = 0x00257120; // type:func    (Size->168)   
spev04CheckGap_O3                        = 0x002571D0; // type:func    (Size->144)   
spev04InitSnowSpout                      = 0x00257260; // type:func    (Size->1440)  
spev04ResetSnowSpout                     = 0x00257800; // type:func    (Size->48)    
spev04PlayerSnowSpout                    = 0x00257830; // type:func    (Size->1268)  
spev04EndSnowSpout                       = 0x00257D30; // type:func    (Size->48)    
spev04InitSnowBall                       = 0x00257D60; // type:func    (Size->2832)  
spev04PlayerSnowBall                     = 0x00258870; // type:func    (Size->584)   
spev04EndSnowBall                        = 0x00258AC0; // type:func    (Size->72)    
spev04InitFountain                       = 0x00258B10; // type:func    (Size->1408)  
spev04ResetFountain                      = 0x00259090; // type:func    (Size->108)   
spev04PlayerFountain                     = 0x00259100; // type:func    (Size->716)   
spev04EndFountain                        = 0x002593D0; // type:func    (Size->36)    
spev04InitNeon                           = 0x00259400; // type:func    (Size->120)   
spev04ResetNeon                          = 0x00259480; // type:func    (Size->8)     
spev04PlayerNeon                         = 0x00259490; // type:func    (Size->468)   
spev04EndNeon                            = 0x00259670; // type:func    (Size->64)    
spev04CallBackNeon1                      = 0x002596B0; // type:func    (Size->96)    
spev04CallBackNeon2                      = 0x00259710; // type:func    (Size->96)    
spev04SetNeonLight                       = 0x00259770; // type:func    (Size->744)   
spev04ResetDraw                          = 0x00259A60; // type:func    (Size->452)   
spev04CheckDraw                          = 0x00259C30; // type:func    (Size->2032)  
spev04ResetLight                         = 0x0025A420; // type:func    (Size->1024)  
spev04CheckWarp                          = 0x0025A820; // type:func    (Size->840)   
spev04MatchWarp                          = 0x0025AB70; // type:func    (Size->76)    
tifxInitSpur                             = 0x0025ABC0; // type:func    (Size->136)   
tifxcolorspur                            = 0x0025AC50; // (Region->MULTID) (Type->FUNC)    (Size->76)    
tifxinitspur                             = 0x0025ACA0; // (Region->MULTID) (Type->FUNC)    (Size->340)   
tifxResetSpur                            = 0x0025AE00; // type:func    (Size->56)    
tifxresetspur                            = 0x0025AE40; // (Region->MULTID) (Type->FUNC)    (Size->152)   
tifxFinalSpur                            = 0x0025AEE0; // type:func    (Size->56)    
tifxfinalspur                            = 0x0025AF20; // (Region->MULTID) (Type->FUNC)    (Size->80)    
tifxSetColorSpur                         = 0x0025AF70; // type:func    (Size->92)    
tifxDrawSpur                             = 0x0025AFD0; // type:func    (Size->80)    
tifxdrawspur                             = 0x0025B020; // (Region->MULTID) (Type->FUNC)    (Size->1660)  
tifxCalcSpur                             = 0x0025B6A0; // type:func    (Size->3128)  
tifxoptionspur                           = 0x0025C2E0; // (Region->MULTID) (Type->FUNC)    (Size->1016)  
tifxInitSpark                            = 0x0025C6E0; // type:func    (Size->128)   
tifxFinalSpark                           = 0x0025C760; // type:func    (Size->80)    
tifxDrawSpark                            = 0x0025C7B0; // type:func    (Size->960)   
tifxCalcSpark                            = 0x0025CB70; // type:func    (Size->824)   
tifxInitSawdust                          = 0x0025CEB0; // type:func    (Size->176)   
tifxFinalSawdust                         = 0x0025CF60; // type:func    (Size->80)    
tifxDrawSawdust                          = 0x0025CFB0; // type:func    (Size->872)   
tifxCalcSawdust                          = 0x0025D320; // type:func    (Size->892)   
tifxResetSnowSmoke                       = 0x0025D6A0; // type:func    (Size->192)   
tifxFinalSnowSmoke                       = 0x0025D760; // type:func    (Size->80)    
tifxDrawSnowSmoke                        = 0x0025D7B0; // type:func    (Size->608)   
tifxCalcSnowSmoke                        = 0x0025DA10; // type:func    (Size->1072)  
tifxInitTwig                             = 0x0025DE40; // type:func    (Size->188)   
tifxFinalTwig                            = 0x0025DF00; // type:func    (Size->80)    
tifxDrawTwig                             = 0x0025DF50; // type:func    (Size->848)   
tifxCalcTwig                             = 0x0025E2A0; // type:func    (Size->932)   
tifxInitSnowShovel                       = 0x0025E650; // type:func    (Size->244)   
tifxFinalSnowShovel                      = 0x0025E750; // type:func    (Size->80)    
tifxSetColorSnowShovel                   = 0x0025E7A0; // type:func    (Size->68)    
tifxDrawSnowShovel                       = 0x0025E7F0; // type:func    (Size->800)   
tifxCalcSnowShovel                       = 0x0025EB10; // type:func    (Size->1504)  
tifxInitSnowTree                         = 0x0025F0F0; // type:func    (Size->332)   
tifxFinalSnowTree                        = 0x0025F240; // type:func    (Size->80)    
tifxSetColorSnowTree                     = 0x0025F290; // type:func    (Size->68)    
tifxDrawSnowTree                         = 0x0025F2E0; // type:func    (Size->808)   
tifxCalcSnowTree                         = 0x0025F610; // type:func    (Size->1068)  
tifxInitSteam                            = 0x0025FA40; // type:func    (Size->164)   
tifxResetSteam                           = 0x0025FAF0; // type:func    (Size->108)   
tifxDrawSteam                            = 0x0025FB60; // type:func    (Size->724)   
tifxCalcSteam                            = 0x0025FE40; // type:func    (Size->1164)  
tievSetSteam                             = 0x002602D0; // (Region->MULTID) (Type->FUNC)    (Size->656)   
tifxFinalSteam                           = 0x00260560; // type:func    (Size->80)    
spev08Init                               = 0x002605B0; // type:func    (Size->1492)  
spev08ResetEvent                         = 0x00260B90; // type:func    (Size->816)   
spev08MainEvent                          = 0x00260EC0; // type:func    (Size->2376)  
spev08PlayerEvent                        = 0x00261810; // type:func    (Size->552)   
spev08DrawEvent                          = 0x00261A40; // type:func    (Size->120)   
spev08DrawPlayerEvent                    = 0x00261AC0; // type:func    (Size->20)    
spev08FinishPlayerEvent                  = 0x00261AE0; // type:func    (Size->20)    
spev08End                                = 0x00261B00; // type:func    (Size->52)    
spev08ResetObject                        = 0x00261B40; // type:func    (Size->2416)  
spev08CheckHit                           = 0x002624B0; // type:func    (Size->3976)  
spev08CheckRail                          = 0x00263440; // type:func    (Size->2760)  
spev08CheckObject                        = 0x00263F10; // type:func    (Size->1152)  
spev08CheckHandPlant                     = 0x00264390; // type:func    (Size->492)   
spev08CheckClearFlag1                    = 0x00264580; // type:func    (Size->128)   
spev08CheckClearFlag2                    = 0x00264600; // type:func    (Size->692)   
spev08ActionEV03                         = 0x002648C0; // type:func    (Size->980)   
spev08CheckEV16                          = 0x00264CA0; // type:func    (Size->184)   
spev08ActionEV16                         = 0x00264D60; // type:func    (Size->672)   
spev08ActionEV19                         = 0x00265000; // type:func    (Size->900)   
spev08SetLoopSound                       = 0x00265390; // type:func    (Size->916)   
spev08Liftman                            = 0x00265730; // type:func    (Size->2240)  
nmactInit                                = 0x00265FF0; // type:func    (Size->44)    
nmactEndGame                             = 0x00266020; // type:func    (Size->88)    
nmactFrame                               = 0x00266080; // type:func    (Size->1544)  
nmactPlay                                = 0x00266690; // type:func    (Size->1792)  
nmactStop                                = 0x00266D90; // type:func    (Size->384)   
nmactPlaySlide                           = 0x00266F10; // type:func    (Size->2228)  
nmactStopSlide                           = 0x002677D0; // type:func    (Size->204)   
nmactPlaySlip                            = 0x002678A0; // type:func    (Size->1016)  
nmactPlayLand                            = 0x00267CA0; // type:func    (Size->632)   
nmactPlayVoice                           = 0x00267F20; // type:func    (Size->304)   
nmactPlayBoost                           = 0x00268050; // type:func    (Size->108)   
nmactPlayPush                            = 0x002680C0; // type:func    (Size->100)   
nmactGetActSpeed                         = 0x00268130; // type:func    (Size->40)    
nmactGetVoiceVol                         = 0x00268160; // type:func    (Size->40)    
nmactDualSwitch                          = 0x00268190; // type:func    (Size->116)   
nmactInitFig                             = 0x00268210; // type:func    (Size->160)   
nmactCalcSlideSpeed                      = 0x002682B0; // type:func    (Size->240)   
nmactCalcSlideEdge                       = 0x002683A0; // type:func    (Size->480)   
nmactCalcActSpeed                        = 0x00268580; // type:func    (Size->256)   
nmactCalcVoiceVol                        = 0x00268680; // type:func    (Size->100)   
nmactCalcCamera                          = 0x002686F0; // type:func    (Size->292)   
nmactCalcSlideLevel                      = 0x00268820; // type:func    (Size->324)   
nmactCalcRailLevel                       = 0x00268970; // type:func    (Size->284)   
spev02Init                               = 0x00268A90; // type:func    (Size->564)   
spev02ResetEvent                         = 0x00268CD0; // type:func    (Size->300)   
spev02MainEvent                          = 0x00268E00; // type:func    (Size->356)   
spev02PlayerEvent                        = 0x00268F70; // type:func    (Size->148)   
spev02DrawEvent                          = 0x00269010; // type:func    (Size->116)   
spev02DrawPlayerEvent                    = 0x00269090; // type:func    (Size->20)    
spev02FinishPlayerEvent                  = 0x002690B0; // type:func    (Size->64)    
spev02End                                = 0x002690F0; // type:func    (Size->76)    
spev02ResetObject                        = 0x00269140; // type:func    (Size->1176)  
spev02ResetLift                          = 0x002695E0; // type:func    (Size->936)   
spev02MoveLift                           = 0x00269990; // type:func    (Size->2188)  
spev02ResetGond1                         = 0x0026A220; // type:func    (Size->512)   
spev02MoveGond1                          = 0x0026A420; // type:func    (Size->2376)  
spev02TurnGond1                          = 0x0026AD70; // type:func    (Size->272)   
spev02ResetGond2                         = 0x0026AE80; // type:func    (Size->512)   
spev02MoveGond2                          = 0x0026B080; // type:func    (Size->2376)  
spev02TurnGond2                          = 0x0026B9D0; // type:func    (Size->272)   
spev02ResetGear                          = 0x0026BAE0; // type:func    (Size->356)   
spev02TurnGear                           = 0x0026BC50; // type:func    (Size->160)   
spev02ResetWagon                         = 0x0026BCF0; // type:func    (Size->440)   
spev02CheckWagon                         = 0x0026BEB0; // type:func    (Size->788)   
spev02MoveWagon                          = 0x0026C1D0; // type:func    (Size->572)   
spev02ResetYuppie                        = 0x0026C410; // type:func    (Size->1108)  
spev02MoveYuppie                         = 0x0026C870; // type:func    (Size->3436)  
spev02ResetStaff                         = 0x0026D5E0; // type:func    (Size->956)   
spev02CheckStaff                         = 0x0026D9A0; // type:func    (Size->3820)  
spev02PlayEffect                         = 0x0026E890; // type:func    (Size->776)   
spev02SeLift                             = 0x0026EBA0; // type:func    (Size->1216)  
spev02ResetLevelGoals                    = 0x0026F060; // type:func    (Size->16)    
spev02CheckLevelGoals                    = 0x0026F070; // type:func    (Size->488)   
spev02ResetGaps                          = 0x0026F260; // type:func    (Size->120)   
spev02CheckGaps                          = 0x0026F2E0; // type:func    (Size->980)   
spev02CheckAirGaps                       = 0x0026F6C0; // type:func    (Size->1856)  
spev02CheckGap_A8                        = 0x0026FE00; // type:func    (Size->384)   
spev02CheckGap_A9                        = 0x0026FF80; // type:func    (Size->160)   
spev02CheckGap_A10                       = 0x00270020; // type:func    (Size->160)   
spev02CheckGap_A11                       = 0x002700C0; // type:func    (Size->160)   
spev02CheckGap_A12                       = 0x00270160; // type:func    (Size->588)   
spev02CheckManualGaps                    = 0x002703B0; // type:func    (Size->456)   
spev02CheckGap_M1                        = 0x00270580; // type:func    (Size->176)   
spev02CheckGap_M2                        = 0x00270630; // type:func    (Size->184)   
spev02CheckGrindGaps                     = 0x002706F0; // type:func    (Size->2904)  
spev02CheckGap_G1                        = 0x00271250; // type:func    (Size->260)   
spev02CheckGap_G2                        = 0x00271360; // type:func    (Size->204)   
spev02CheckGap_G3                        = 0x00271430; // type:func    (Size->260)   
spev02CheckGap_G4                        = 0x00271540; // type:func    (Size->92)    
spev02CheckGap_G5                        = 0x002715A0; // type:func    (Size->256)   
spev02CheckGap_G6                        = 0x002716A0; // type:func    (Size->132)   
spev02CheckGap_G10                       = 0x00271730; // type:func    (Size->536)   
spev02CheckGap_G11                       = 0x00271950; // type:func    (Size->132)   
spev02CheckGap_G12                       = 0x002719E0; // type:func    (Size->332)   
spev02CheckGap_G13                       = 0x00271B30; // type:func    (Size->92)    
spev02CheckGap_G14                       = 0x00271B90; // type:func    (Size->132)   
spev02CheckGap_G16                       = 0x00271C20; // type:func    (Size->188)   
spev02CheckGap_G18                       = 0x00271CE0; // type:func    (Size->280)   
spev02CheckGap_G19                       = 0x00271E00; // type:func    (Size->280)   
spev02CheckGap_G21                       = 0x00271F20; // type:func    (Size->212)   
spev02CheckGap_G22                       = 0x00272000; // type:func    (Size->496)   
spev02CheckGap_G23                       = 0x002721F0; // type:func    (Size->212)   
spev02CheckGap_G24                       = 0x002722D0; // type:func    (Size->284)   
spev02CheckLipGaps                       = 0x002723F0; // type:func    (Size->216)   
spev02CheckOtherGaps                     = 0x002724D0; // type:func    (Size->36)    
spev02InitSnowSpout                      = 0x00272500; // type:func    (Size->1440)  
spev02ResetSnowSpout                     = 0x00272AA0; // type:func    (Size->48)    
spev02PlayerSnowSpout                    = 0x00272AD0; // type:func    (Size->1268)  
spev02EndSnowSpout                       = 0x00272FD0; // type:func    (Size->48)    
spev02InitWagonClash                     = 0x00273000; // type:func    (Size->724)   
spev02ResetWagonClash                    = 0x002732E0; // type:func    (Size->36)    
spev02PlayerWagonClash                   = 0x00273310; // type:func    (Size->144)   
spev02EndWagonClash                      = 0x002733A0; // type:func    (Size->36)    
spev02ResetLight                         = 0x002733D0; // type:func    (Size->1020)  
spev02CheckWarp                          = 0x002737D0; // type:func    (Size->672)   
spev02MatchWarp                          = 0x00273A70; // type:func    (Size->16)    
spev02CheckDraw                          = 0x00273A80; // type:func    (Size->604)   
spev03Init                               = 0x00273CE0; // type:func    (Size->1272)  
spev03ResetEvent                         = 0x002741E0; // type:func    (Size->3112)  
spev03MainEvent                          = 0x00274E10; // type:func    (Size->1980)  
spev03PlayerEvent                        = 0x002755D0; // type:func    (Size->10724) 
spev03DrawEvent                          = 0x00277FC0; // type:func    (Size->116)   
spev03DrawPlayerEvent                    = 0x00278040; // type:func    (Size->20)    
spev03FinishPlayerEvent                  = 0x00278060; // type:func    (Size->20)    
spev03End                                = 0x00278080; // type:func    (Size->72)    
spev03LiftMoveReset                      = 0x002780D0; // type:func    (Size->296)   
spev03LiftMoveEvent                      = 0x00278200; // type:func    (Size->864)   
spev03BunnyMoveReset                     = 0x00278560; // type:func    (Size->308)   
spev03BunnyMoveEvent                     = 0x002786A0; // type:func    (Size->1620)  
spev03EagleMoveReset                     = 0x00278D00; // type:func    (Size->328)   
spev03EagleMoveEvent                     = 0x00278E50; // type:func    (Size->1264)  
spev03DeerMoveReset                      = 0x00279340; // type:func    (Size->200)   
spev03DeerMoveEvent                      = 0x00279410; // type:func    (Size->292)   
spev03LiftManMoveReset                   = 0x00279540; // type:func    (Size->416)   
spev03LiftManMoveEvent                   = 0x002796E0; // type:func    (Size->2592)  
spev03SetGap_TypeA                       = 0x0027A100; // type:func    (Size->168)   
spev03CheckPlantGaps                     = 0x0027A1B0; // type:func    (Size->324)   
spev03CheckGrindGaps                     = 0x0027A300; // type:func    (Size->3228)  
spev03CheckFog                           = 0x0027AFA0; // type:func    (Size->1344)  
spev06Init                               = 0x0027B4E0; // type:func    (Size->1924)  
spev06ResetEvent                         = 0x0027BC70; // type:func    (Size->1156)  
spev06MainEvent                          = 0x0027C100; // type:func    (Size->3644)  
spev06PlayerEvent                        = 0x0027CF40; // type:func    (Size->1208)  
spev06DrawEvent                          = 0x0027D400; // type:func    (Size->192)   
spev06DrawPlayerEvent                    = 0x0027D4C0; // type:func    (Size->20)    
spev06FinishPlayerEvent                  = 0x0027D4E0; // type:func    (Size->44)    
spev06End                                = 0x0027D510; // type:func    (Size->68)    
spev06ResetObject                        = 0x0027D560; // type:func    (Size->2224)  
spev06CheckHit                           = 0x0027DE10; // type:func    (Size->6004)  
spev06CheckLine                          = 0x0027F590; // type:func    (Size->248)   
spev06CheckRail                          = 0x0027F690; // type:func    (Size->4240)  
spev06CheckObject                        = 0x00280720; // type:func    (Size->1800)  
spev06CheckHandPlant                     = 0x00280E30; // type:func    (Size->316)   
spev06CheckClearFlag1                    = 0x00280F70; // type:func    (Size->172)   
spev06CheckClearFlag2                    = 0x00281020; // type:func    (Size->964)   
spev06ActionTower                        = 0x002813F0; // type:func    (Size->968)   
spev06ActionLift                         = 0x002817C0; // type:func    (Size->1080)  
spev06SetLoopSound                       = 0x00281C00; // type:func    (Size->932)   
spev06Play                               = 0x00281FB0; // type:func    (Size->304)   
spev06ActionFlags                        = 0x002820E0; // type:func    (Size->468)   
spev06DispSlalomInfo                     = 0x002822C0; // type:func    (Size->748)   
spev06ActionGate                         = 0x002825B0; // type:func    (Size->352)   
spev06Liftman                            = 0x00282710; // type:func    (Size->2252)  
tiev07AddSmokeP2P                        = 0x00282FE0; // type:func    (Size->200)   
spev07DisableMdlMotion                   = 0x002830B0; // type:func    (Size->80)    
spev07PlayMdlMotion                      = 0x00283100; // type:func    (Size->252)   
spev07InitMdlMotion                      = 0x00283200; // type:func    (Size->84)    
spev07GetPlayFrame                       = 0x00283260; // type:func    (Size->68)    
spev07PlaySound                          = 0x002832B0; // type:func    (Size->200)   
spev07StopSound                          = 0x00283380; // type:func    (Size->112)   
spev07NoseupTheChopper                   = 0x002833F0; // type:func    (Size->512)   
spev07ComeOnChopper                      = 0x002835F0; // type:func    (Size->404)   
spev07HoverTheChopperVB                  = 0x00283790; // type:func    (Size->584)   
spev07HoverTheChopper                    = 0x002839E0; // type:func    (Size->580)   
spev07DipTheBus                          = 0x00283C30; // type:func    (Size->1304)  
spev07ArtilleryDischarge1                = 0x00284150; // type:func    (Size->2616)  
spev07ArtilleryDischarge2                = 0x00284B90; // type:func    (Size->2632)  
spev07SlantTheTMap                       = 0x002855E0; // type:func    (Size->1064)  
spev07OperatingLiftReset                 = 0x00285A10; // type:func    (Size->780)   
spev07OperatingLift                      = 0x00285D20; // type:func    (Size->1844)  
spev07MainLodgeSmoke                     = 0x00286460; // type:func    (Size->272)   
spev07OperatingHalfpipedragon            = 0x00286570; // type:func    (Size->928)   
spev07MoveAgent                          = 0x00286910; // type:func    (Size->1924)  
spev07PlayerEventHit                     = 0x002870A0; // type:func    (Size->5584)  
spev07PlayerEventGrind                   = 0x00288670; // type:func    (Size->2360)  
spev07PlayerEventObj                     = 0x00288FB0; // type:func    (Size->1752)  
spev07ResetObject                        = 0x00289690; // type:func    (Size->1276)  
spev07Init                               = 0x00289B90; // type:func    (Size->632)   
spev07ResetEvent                         = 0x00289E10; // type:func    (Size->1296)  
spev07MainEvent                          = 0x0028A320; // type:func    (Size->424)   
spev07PlayerEvent                        = 0x0028A4D0; // type:func    (Size->1296)  
spev07DrawEvent                          = 0x0028A9E0; // type:func    (Size->308)   
spev07DrawPlayerEvent                    = 0x0028AB20; // type:func    (Size->20)    
spev07FinishPlayerEvent                  = 0x0028AB40; // type:func    (Size->20)    
spev07End                                = 0x0028AB60; // type:func    (Size->136)   
spev05Init                               = 0x0028ABF0; // type:func    (Size->2232)  
spev05ResetEvent                         = 0x0028B4B0; // type:func    (Size->3224)  
spev05MainEvent                          = 0x0028C150; // type:func    (Size->1520)  
spev05PlayerEvent                        = 0x0028C740; // type:func    (Size->4068)  
spev05DrawEvent                          = 0x0028D730; // type:func    (Size->400)   
spev05DrawPlayerEvent                    = 0x0028D8C0; // type:func    (Size->20)    
spev05FinishPlayerEvent                  = 0x0028D8E0; // type:func    (Size->108)   
spev05End                                = 0x0028D950; // type:func    (Size->144)   
spev05LiftMoveInit                       = 0x0028D9E0; // type:func    (Size->1696)  
spev05LiftMoveReset                      = 0x0028E080; // type:func    (Size->772)   
spev05LiftMoveEvent                      = 0x0028E390; // type:func    (Size->1028)  
spev05LiftRingMoveEvent                  = 0x0028E7A0; // type:func    (Size->184)   
spev05CloudMoveReset                     = 0x0028E860; // type:func    (Size->496)   
spev05CloudMoveEvent                     = 0x0028EA50; // type:func    (Size->540)   
spev05CloudMoveOff                       = 0x0028EC70; // type:func    (Size->160)   
spev05CloudMoveOn                        = 0x0028ED10; // type:func    (Size->160)   
spev05SetGap_TypeA                       = 0x0028EDB0; // type:func    (Size->168)   
spev05SetGap_TypeB                       = 0x0028EE60; // type:func    (Size->128)   
spev05CheckPlantGaps                     = 0x0028EEE0; // type:func    (Size->424)   
spev05CheckGrindGaps                     = 0x0028F090; // type:func    (Size->2096)  
spev05CheckObjectGaps                    = 0x0028F8C0; // type:func    (Size->2300)  
spev05EagleMoveReset                     = 0x002901C0; // type:func    (Size->252)   
spev05EagleMoveEvent                     = 0x002902C0; // type:func    (Size->2840)  
spev05SnowCatMoveReset                   = 0x00290DE0; // type:func    (Size->324)   
spev05SnowCatMoveEvent                   = 0x00290F30; // type:func    (Size->2352)  
spev05ResetFog                           = 0x00291860; // type:func    (Size->308)   
spev05CheckFog                           = 0x002919A0; // type:func    (Size->1412)  
spev05SnowMobileMoveReset                = 0x00291F30; // type:func    (Size->548)   
spev05SnowMobileMoveEvent                = 0x00292160; // type:func    (Size->4696)  
spev05LiftManMoveReset                   = 0x002933C0; // type:func    (Size->644)   
spev05LiftManMoveEvent                   = 0x00293650; // type:func    (Size->2700)  
knCoreInitRand                           = 0x002940E0; // type:func    (Size->28)    
knCoreRandBase                           = 0x00294100; // type:func    (Size->92)    
knCoreRand                               = 0x00294160; // type:func    (Size->48)    
knEventGet                               = 0x00294190; // type:func    (Size->24)    
knEventStart                             = 0x002941B0; // type:func    (Size->120)   
knEventEnd                               = 0x00294230; // type:func    (Size->80)    
knEventSetCameraPos                      = 0x00294280; // type:func    (Size->48)    
knEventSetCameraObj                      = 0x002942B0; // type:func    (Size->68)    
knEventCameraMoveSpline1                 = 0x00294300; // type:func    (Size->80)    
knEventSetShake                          = 0x00294350; // type:func    (Size->60)    
knEventShake                             = 0x00294390; // type:func    (Size->380)   
knCoreGetWVMat                           = 0x00294510; // type:func    (Size->628)   
knCoreGetWState                          = 0x00294790; // type:func    (Size->104)   
knCoreSetWState                          = 0x00294800; // type:func    (Size->88)    
knCoreRotMatrix                          = 0x00294860; // type:func    (Size->116)   
knCoreGetSearchBlock                     = 0x002948E0; // type:func    (Size->1004)  
knCoreGetCourseHit                       = 0x00294CD0; // type:func    (Size->1484)  
knCoreGetSearchBlock2                    = 0x002952A0; // type:func    (Size->512)   
knCoreGetCourseHit2                      = 0x002954A0; // type:func    (Size->1520)  
knCoreGetBaseHit                         = 0x00295A90; // type:func    (Size->284)   
knCoreGetHitHit                          = 0x00295BB0; // type:func    (Size->616)   
knCoreGetDifAngY                         = 0x00295E20; // type:func    (Size->324)   
knCoreGetAngle                           = 0x00295F70; // type:func    (Size->168)   
knCoreBezier                             = 0x00296020; // type:func    (Size->164)   
knCoreSpline1                            = 0x002960D0; // type:func    (Size->324)   
nmeventInit                              = 0x00296220; // type:func    (Size->16)    
nmeventPlay                              = 0x00296230; // type:func    (Size->156)   
nmeventPlay2                             = 0x002962D0; // type:func    (Size->124)   
nmeventPlayLoop                          = 0x00296350; // type:func    (Size->136)   
nmeventStop                              = 0x002963E0; // type:func    (Size->96)    
nmeventPlayWarp                          = 0x00296440; // type:func    (Size->156)   
nmeventPlayVoice                         = 0x002964E0; // type:func    (Size->136)   
nmeventSearchRes                         = 0x00296570; // type:func    (Size->208)   
akevInitEffect                           = 0x00296640; // type:func    (Size->1460)  
akevResetEffect                          = 0x00296C00; // type:func    (Size->456)   
akevResetEffect2                         = 0x00296DD0; // type:func    (Size->144)   
akevDrawEffect1                          = 0x00296E60; // type:func    (Size->720)   
akevDrawEffect2                          = 0x00297130; // type:func    (Size->352)   
akevCalcEffect                           = 0x00297290; // type:func    (Size->1840)  
akevFreeEffect                           = 0x002979C0; // type:func    (Size->660)   
akevInitSnowfall                         = 0x00297C60; // type:func    (Size->168)   
akevChangeSnowFallNum                    = 0x00297D10; // type:func    (Size->60)    
akevInitLensFlare                        = 0x00297D50; // type:func    (Size->192)   
akevSetLensFlareBright                   = 0x00297E10; // type:func    (Size->60)    
akevSetLensFlareScreen                   = 0x00297E50; // type:func    (Size->180)   
akevChangeSnowSplashColor                = 0x00297F10; // type:func    (Size->448)   
akevInitSmoke                            = 0x002980D0; // type:func    (Size->108)   
akevResetSmoke                           = 0x00298140; // type:func    (Size->116)   
akevResetSmokeInfo                       = 0x002981C0; // type:func    (Size->28)    
akevBlowupSmoke                          = 0x002981E0; // type:func    (Size->708)   
akevCalcSmoke                            = 0x002984B0; // type:func    (Size->296)   
akevDrawSmoke                            = 0x002985E0; // type:func    (Size->1688)  
akevFreeSmoke                            = 0x00298C80; // type:func    (Size->52)    
akevWaterSplash                          = 0x00298CC0; // type:func    (Size->120)   
akevCheckDistance                        = 0x00298D40; // type:func    (Size->108)   
akevInitTextureScroll                    = 0x00298DB0; // type:func    (Size->320)   
akevResetTextureScroll                   = 0x00298EF0; // type:func    (Size->132)   
akevCalcTextureScroll                    = 0x00298F80; // type:func    (Size->276)   
akevSetTextureScroll                     = 0x002990A0; // type:func    (Size->104)   
akevInitFirework                         = 0x00299110; // type:func    (Size->108)   
akevResetFirework                        = 0x00299180; // type:func    (Size->116)   
akevResetFireworkInfo                    = 0x00299200; // type:func    (Size->28)    
akevBlowupFirework                       = 0x00299220; // type:func    (Size->636)   
akevCalcFirework                         = 0x002994A0; // type:func    (Size->384)   
akevDrawFirework                         = 0x00299620; // type:func    (Size->1828)  
akevFreeFirework                         = 0x00299D50; // type:func    (Size->52)    
akevInitLift                             = 0x00299D90; // type:func    (Size->596)   
akevMoveLift                             = 0x00299FF0; // type:func    (Size->1428)  
akselInitSnowFall                        = 0x0029A590; // type:func    (Size->484)   
akselSnowFall                            = 0x0029A780; // type:func    (Size->3084)  
akselFreeSnowFall                        = 0x0029B390; // type:func    (Size->96)    
aksdwDrawShadowVuMdl                     = 0x0029B3F0; // type:func    (Size->716)   
_DrawShadow                              = 0x0029B6C0; // type:func    (Size->2080)  
aksdwMakeShadowMatrix                    = 0x0029BEE0; // type:func    (Size->740)   
nmtrickInit                              = 0x0029C1D0; // type:func    (Size->76)    
nmtrickInitInfo                          = 0x0029C220; // type:func    (Size->380)   
nmtrickInitInfo2                         = 0x0029C3A0; // type:func    (Size->932)   
nmtrickInitList                          = 0x0029C750; // type:func    (Size->104)   
nmtrickInitFig                           = 0x0029C7C0; // type:func    (Size->112)   
nmtrickSetLand                           = 0x0029C830; // type:func    (Size->840)   
nmtrickSetFlight                         = 0x0029CB80; // type:func    (Size->740)   
nmtrickSetFakie                          = 0x0029CE70; // type:func    (Size->60)    
nmtrickSetJump                           = 0x0029CEB0; // type:func    (Size->404)   
nmtrickSetTrick                          = 0x0029D050; // type:func    (Size->4588)  
nmtrickSetSpin                           = 0x0029E240; // type:func    (Size->4664)  
nmtrickSetInfo                           = 0x0029F480; // type:func    (Size->88)    
nmtrickGetInfo                           = 0x0029F4E0; // type:func    (Size->76)    
nmtrickMakeList                          = 0x0029F530; // type:func    (Size->4156)  
nmtrickMakeStr                           = 0x002A0570; // type:func    (Size->3476)  
nmtrickSetSpType                         = 0x002A1310; // type:func    (Size->144)   
nmtrickDelInfo                           = 0x002A13A0; // type:func    (Size->1332)  
tiutRand                                 = 0x002A18E0; // type:func    (Size->148)   
tiutVu0DistanceP2P                       = 0x002A1980; // type:func    (Size->56)    
tiutVu0CrossL2L                          = 0x002A19C0; // type:func    (Size->500)   
tiutVu0AxisRotate                        = 0x002A1BC0; // type:func    (Size->556)   
aksubFlipFrameBuff                       = 0x002A1DF0; // type:func    (Size->200)   
aksubClipScreen                          = 0x002A1EC0; // type:func    (Size->1260)  
tmetcInit                                = 0x002A23B0; // type:func    (Size->664)   
tmetcEnd                                 = 0x002A2650; // type:func    (Size->8)     
tmetcReset                               = 0x002A2660; // type:func    (Size->100)   
tmetcGetRank                             = 0x002A26D0; // type:func    (Size->920)   
tmetcGetVerticalPoint                    = 0x002A2A70; // type:func    (Size->172)   
tmetcGetAcc                              = 0x002A2B20; // type:func    (Size->348)   
tievInitCloudSea                         = 0x002A2C80; // type:func    (Size->668)   
tievFreeCloudSea                         = 0x002A2F20; // type:func    (Size->80)    
tievShowCloudSea                         = 0x002A2F70; // type:func    (Size->64)    
tievDrawCloudSea                         = 0x002A2FB0; // type:func    (Size->616)   
tievCalcCloudSea                         = 0x002A3220; // type:func    (Size->704)   
tievInitBlind                            = 0x002A34E0; // type:func    (Size->224)   
tievFreeBlind                            = 0x002A35C0; // type:func    (Size->80)    
tievDrawBlind                            = 0x002A3610; // type:func    (Size->1636)  
tievSetBlindRate                         = 0x002A3C80; // type:func    (Size->120)   
tievSetBlindColor                        = 0x002A3D00; // type:func    (Size->76)    
tievInitSmoke                            = 0x002A3D50; // type:func    (Size->168)   
tievFreeSmoke                            = 0x002A3E00; // type:func    (Size->80)    
tievDrawSmoke                            = 0x002A3E50; // type:func    (Size->724)   
tievCalcSmoke                            = 0x002A4130; // type:func    (Size->320)   
tievSetSmoke                             = 0x002A4270; // type:func    (Size->892)   
tievInitSpark                            = 0x002A45F0; // type:func    (Size->136)   
tievFreeSpark                            = 0x002A4680; // type:func    (Size->80)    
tievDrawSpark                            = 0x002A46D0; // type:func    (Size->780)   
tievCalcSpark                            = 0x002A49E0; // type:func    (Size->428)   
tievSetSpark                             = 0x002A4B90; // type:func    (Size->660)   
tievSetSparkN                            = 0x002A4E30; // type:func    (Size->624)   
tievInitShards                           = 0x002A50A0; // type:func    (Size->596)   
tievFreeShards                           = 0x002A5300; // type:func    (Size->148)   
tievSetShardsCallback                    = 0x002A53A0; // type:func    (Size->36)    
tievDrawShards                           = 0x002A53D0; // type:func    (Size->2020)  
tievCalcShards                           = 0x002A5BC0; // type:func    (Size->1052)  
tievShards                               = 0x002A5FE0; // type:func    (Size->1884)  
tievInitCannon                           = 0x002A6740; // type:func    (Size->220)   
tievFreeCannon                           = 0x002A6820; // type:func    (Size->96)    
tievDrawCannon                           = 0x002A6880; // type:func    (Size->1564)  
tievCalcCannon                           = 0x002A6EA0; // type:func    (Size->1636)  
tievCannon                               = 0x002A7510; // type:func    (Size->108)   
//__gnu_compiled_c                         = 0x002A7580; // (Region->LOCAL)  (Type->NOTYPE) 
GetRomName                               = 0x002A7580; // type:func    (Size->156)   

//gcc2_compiled.                         = 0x002A7580; // (Region->LOCAL)  (Type->NOTYPE) 
IsT10K                                   = 0x002A7620; // type:func    (Size->64)    
sceScfGetLanguage                        = 0x002A7660; // type:func    (Size->96)    
sceScfSetT10kConfig                      = 0x002A76C0; // type:func    (Size->28)    
sceScfGetAspect                          = 0x002A76E0; // type:func    (Size->64)    
sceScfGetSpdif                           = 0x002A7720; // type:func    (Size->60)    
sceScfGetTimeZone                        = 0x002A7760; // type:func    (Size->100)   
sceScfGetDateNotation                    = 0x002A77C8; // type:func    (Size->124)   
sceScfGetSummerTime                      = 0x002A7848; // type:func    (Size->128)   
sceScfGetTimeNotation                    = 0x002A78C8; // type:func    (Size->128)   
tobcd                                    = 0x002A7948; // type:func    (Size->100)   
frombcd                                  = 0x002A79B0; // type:func    (Size->88)    
convertfrombcd                           = 0x002A7A08; // type:func    (Size->132)   
converttobcd                             = 0x002A7A90; // type:func    (Size->132)   
adddate                                  = 0x002A7B18; // type:func    (Size->228)   
subdate                                  = 0x002A7C00; // type:func    (Size->212)   
addhour                                  = 0x002A7CD8; // type:func    (Size->108)   
subhour                                  = 0x002A7D48; // type:func    (Size->104)   
AdjustTime                               = 0x002A7DB0; // type:func    (Size->204)   
sceScfGetGMTfromRTC                      = 0x002A7E80; // type:func    (Size->68)    
sceScfGetLocalTimefromRTC                = 0x002A7EC8; // type:func    (Size->104)   
//.vu.ext                                  = 0x002A7F80; // (Region->LOCAL)  (Type->SECTION)
//.dma.1                                   = 0x002A7F80; // (Region->LOCAL)  (Type->NOTYPE) 
vuprgDrawModelConstant                   = 0x002A7F80; // (Region->GLOBAL) (Type->NOTYPE) 
.vif.2                                   = 0x002A7F88; // (Region->LOCAL)  (Type->NOTYPE) 
//.dma.6                                   = 0x002A8000; // (Region->LOCAL)  (Type->NOTYPE) 
vuprgDrawModel                           = 0x002A8000; // (Region->GLOBAL) (Type->NOTYPE) 
.vif.7                                   = 0x002A8008; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.10                                   = 0x002A8010; // (Region->LOCAL)  (Type->NOTYPE) 
_$calcmatrix                             = 0x002A8010; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.11                                   = 0x002A80C0; // (Region->LOCAL)  (Type->NOTYPE) 
_$calcmat_lwloop                         = 0x002A80C0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.12                                   = 0x002A8470; // (Region->LOCAL)  (Type->NOTYPE) 
_$mainloop                               = 0x002A8470; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.13                                   = 0x002A8518; // (Region->LOCAL)  (Type->NOTYPE) 
_$rigid                                  = 0x002A8518; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.14                                   = 0x002A8568; // (Region->LOCAL)  (Type->NOTYPE) 
_$blend                                  = 0x002A8568; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.15                                   = 0x002A85A0; // (Region->LOCAL)  (Type->NOTYPE) 
_$NMLrigid                               = 0x002A85A0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.16                                   = 0x002A8630; // (Region->LOCAL)  (Type->NOTYPE) 
_$NMLrigid_ver_loop                      = 0x002A8630; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.17                                   = 0x002A8750; // (Region->LOCAL)  (Type->NOTYPE) 
_$NMLrigid_clip1                         = 0x002A8750; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.18                                   = 0x002A8778; // (Region->LOCAL)  (Type->NOTYPE) 
_$NMLrigid_clip2                         = 0x002A8778; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.19                                   = 0x002A87E8; // (Region->LOCAL)  (Type->NOTYPE) 
_$REFrigid                               = 0x002A87E8; // (Region->LOCAL)  (Type->NOTYPE) 
.vif.20                                  = 0x002A8810; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.23                                   = 0x002A8818; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.24                                   = 0x002A88B0; // (Region->LOCAL)  (Type->NOTYPE) 
_$REFrigid_ver_loop                      = 0x002A88B0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.25                                   = 0x002A8990; // (Region->LOCAL)  (Type->NOTYPE) 
_$REFrigid_clip1                         = 0x002A8990; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.26                                   = 0x002A89C0; // (Region->LOCAL)  (Type->NOTYPE) 
_$REFrigid_clip2                         = 0x002A89C0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.27                                   = 0x002A8A40; // (Region->LOCAL)  (Type->NOTYPE) 
_$ENVrigid                               = 0x002A8A40; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.28                                   = 0x002A8B00; // (Region->LOCAL)  (Type->NOTYPE) 
_$ENVrigid_ver_loop                      = 0x002A8B00; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.29                                   = 0x002A8C60; // (Region->LOCAL)  (Type->NOTYPE) 
_$ENVrigid_clip1                         = 0x002A8C60; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.30                                   = 0x002A8CA8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ENVrigid_clip2                         = 0x002A8CA8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.31                                   = 0x002A8D40; // (Region->LOCAL)  (Type->NOTYPE) 
_$NMLblend                               = 0x002A8D40; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.32                                   = 0x002A8D60; // (Region->LOCAL)  (Type->NOTYPE) 
_$NMLblend_loop                          = 0x002A8D60; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.33                                   = 0x002A8DA8; // (Region->LOCAL)  (Type->NOTYPE) 
_$NMLblend_ver_loop                      = 0x002A8DA8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.34                                   = 0x002A8DD8; // (Region->LOCAL)  (Type->NOTYPE) 
_$NMLblend_blend_loop                    = 0x002A8DD8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.35                                   = 0x002A8E88; // (Region->LOCAL)  (Type->NOTYPE) 
_$NMLblend_vertex                        = 0x002A8E88; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.36                                   = 0x002A8F80; // (Region->LOCAL)  (Type->NOTYPE) 
_$NMLblend_clip1                         = 0x002A8F80; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.37                                   = 0x002A8FB8; // (Region->LOCAL)  (Type->NOTYPE) 
_$NMLblend_clip2                         = 0x002A8FB8; // (Region->LOCAL)  (Type->NOTYPE) 
.vif.38                                  = 0x002A9018; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.41                                   = 0x002A9020; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.42                                   = 0x002A9030; // (Region->LOCAL)  (Type->NOTYPE) 
_$ENVblend                               = 0x002A9030; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.43                                   = 0x002A9050; // (Region->LOCAL)  (Type->NOTYPE) 
_$ENVblend_loop                          = 0x002A9050; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.44                                   = 0x002A90A0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ENVblend_ver_loop                      = 0x002A90A0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.45                                   = 0x002A90D8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ENVblend_blend_loop                    = 0x002A90D8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.46                                   = 0x002A9190; // (Region->LOCAL)  (Type->NOTYPE) 
_$ENVblend_vertex                        = 0x002A9190; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.47                                   = 0x002A9288; // (Region->LOCAL)  (Type->NOTYPE) 
_$ENVblend_clip1                         = 0x002A9288; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.48                                   = 0x002A92B8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ENVblend_clip2                         = 0x002A92B8; // (Region->LOCAL)  (Type->NOTYPE) 
.vif.49                                  = 0x002A9338; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.ext                                  = 0x002A9340; // (Region->LOCAL)  (Type->SECTION)
//.dma.1                                   = 0x002A9340; // (Region->LOCAL)  (Type->NOTYPE) 
ltmasmSendPrgVu0                         = 0x002A9340; // (Region->GLOBAL) (Type->NOTYPE) 
//.vif.2                                   = 0x002A9348; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.5                                    = 0x002A9350; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu0HitCheck                         = 0x002A9350; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.6                                    = 0x002A9578; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu0HitCheckSkip                     = 0x002A9578; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.7                                    = 0x002A96D0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu0HitCheckEnd                      = 0x002A96D0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.8                                    = 0x002A96E0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu0SetMatrix                        = 0x002A96E0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.9                                    = 0x002A97F8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu0VertexCheck                      = 0x002A97F8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.10                                   = 0x002A9888; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu0VertexCheckEnd                   = 0x002A9888; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.11                                   = 0x002A9898; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu0HitCheck2                        = 0x002A9898; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.12                                   = 0x002A9950; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu0HitCheckSkip2                    = 0x002A9950; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.13                                   = 0x002A9998; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu0HitCheckEnd2                     = 0x002A9998; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.14                                   = 0x002A99A8; // (Region->LOCAL)  (Type->NOTYPE) 
_$David_CheckBoundAndMakeMatrix          = 0x002A99A8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.15                                   = 0x002A9AE8; // (Region->LOCAL)  (Type->NOTYPE) 
//_$David_OB                               = 0x002A9AE8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.16                                   = 0x002A9AF8; // (Region->LOCAL)  (Type->NOTYPE) 
_$David_CheckBodyBound                   = 0x002A9AF8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.17                                   = 0x002A9B40; // (Region->LOCAL)  (Type->NOTYPE) 
_$David_TestRay                          = 0x002A9B40; // (Region->LOCAL)  (Type->NOTYPE) 
.vif.18                                  = 0x002A9B50; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.21                                   = 0x002A9B58; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.22                                   = 0x002A9C00; // (Region->LOCAL)  (Type->NOTYPE) 
_$David_RaySkip                          = 0x002A9C00; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.23                                   = 0x002A9CB8; // (Region->LOCAL)  (Type->NOTYPE) 
_$David_RayMiss                          = 0x002A9CB8; // (Region->LOCAL)  (Type->NOTYPE) 
.dma.24                                  = 0x002A9CD0; // (Region->LOCAL)  (Type->NOTYPE) 
.vif.25                                  = 0x002A9CD8; // (Region->LOCAL)  (Type->NOTYPE) 
//.dma.26                                  = 0x002A9CE0; // (Region->LOCAL)  (Type->NOTYPE) 
ltmasmSendPrgVu1                         = 0x002A9CE0; // (Region->GLOBAL) (Type->NOTYPE) 
.vif.27                                  = 0x002A9CE8; // (Region->LOCAL)  (Type->NOTYPE) 
.dma.28                                  = 0x002A9CF0; // (Region->LOCAL)  (Type->NOTYPE) 
.vif.29                                  = 0x002A9CF8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vif.30                                  = 0x002A9D00; // (Region->LOCAL)  (Type->NOTYPE) 
ltmasmProgVu1                            = 0x002A9D00; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.33                                   = 0x002A9D08; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.34                                   = 0x002A9D98; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DrawCheck                        = 0x002A9D98; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.35                                   = 0x002A9E00; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1CHK_SKIP00                       = 0x002A9E00; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.36                                   = 0x002A9E10; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1CHK_BASE                         = 0x002A9E10; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.37                                   = 0x002A9E48; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1CHK_SKIP10                       = 0x002A9E48; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.38                                   = 0x002A9E58; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DrawBase                         = 0x002A9E58; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.39                                   = 0x002A9EA8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DB_PRIM                          = 0x002A9EA8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.40                                   = 0x002A9F28; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DB_RTP                           = 0x002A9F28; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.41                                   = 0x002A9FE0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DB_Count                         = 0x002A9FE0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.42                                   = 0x002AA018; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DB_Skip                          = 0x002AA018; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.43                                   = 0x002AA0B8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DrawBaseScissor                  = 0x002AA0B8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.44                                   = 0x002AA108; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DBS_PRIM                         = 0x002AA108; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.45                                   = 0x002AA180; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DBS_RTP                          = 0x002AA180; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.46                                   = 0x002AA288; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DBS_Flag                         = 0x002AA288; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.47                                   = 0x002AA2A8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DBS_Count                        = 0x002AA2A8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.48                                   = 0x002AA368; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DBS_Skip                         = 0x002AA368; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.49                                   = 0x002AA418; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DrawDraw                         = 0x002AA418; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.50                                   = 0x002AA480; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DD_PRIM                          = 0x002AA480; // (Region->LOCAL)  (Type->NOTYPE) 
.vif.51                                  = 0x002AA508; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.54                                   = 0x002AA510; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.55                                   = 0x002AA528; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DD_RTP                           = 0x002AA528; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.56                                   = 0x002AA608; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DD_Count                         = 0x002AA608; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.57                                   = 0x002AA640; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DD_Skip                          = 0x002AA640; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.58                                   = 0x002AA6D0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DrawDrawScissor                  = 0x002AA6D0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.59                                   = 0x002AA738; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DDS_PRIM                         = 0x002AA738; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.60                                   = 0x002AA7C8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DDS_RTP                          = 0x002AA7C8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.61                                   = 0x002AA8D0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DDS_Flag                         = 0x002AA8D0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.62                                   = 0x002AA8F0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DDS_Count                        = 0x002AA8F0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.63                                   = 0x002AA9B0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DDS_Skip                         = 0x002AA9B0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.64                                   = 0x002AAA50; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1Scissor                          = 0x002AAA50; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.65                                   = 0x002AAC00; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1ScissorZM                        = 0x002AAC00; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.66                                   = 0x002AAC20; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1ScissorZMLoop                    = 0x002AAC20; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.67                                   = 0x002AACA8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1ScissorZP                        = 0x002AACA8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.68                                   = 0x002AACC8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1ScissorZPLoop                    = 0x002AACC8; // (Region->LOCAL)  (Type->NOTYPE) 
.vif.69                                  = 0x002AAD10; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.72                                   = 0x002AAD18; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.73                                   = 0x002AAD58; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1ScissorXM                        = 0x002AAD58; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.74                                   = 0x002AAD78; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1ScissorXMLoop                    = 0x002AAD78; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.75                                   = 0x002AAE00; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1ScissorXP                        = 0x002AAE00; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.76                                   = 0x002AAE20; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1ScissorXPLoop                    = 0x002AAE20; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.77                                   = 0x002AAEA8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1ScissorYM                        = 0x002AAEA8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.78                                   = 0x002AAEC8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1ScissorYMLoop                    = 0x002AAEC8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.79                                   = 0x002AAF50; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1ScissorYP                        = 0x002AAF50; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.80                                   = 0x002AAF70; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1ScissorYPLoop                    = 0x002AAF70; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.81                                   = 0x002AAFC8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1ScissorPacket                    = 0x002AAFC8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.82                                   = 0x002AAFE0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1ScissorPSkip00                   = 0x002AAFE0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.83                                   = 0x002AB078; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1ScissorLoop                      = 0x002AB078; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.84                                   = 0x002AB1A8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1ScissorEnd                       = 0x002AB1A8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.85                                   = 0x002AB1C8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1ScissorEnd2                      = 0x002AB1C8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.86                                   = 0x002AB1D8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1Inter                            = 0x002AB1D8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.87                                   = 0x002AB250; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1InterCin                         = 0x002AB250; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.88                                   = 0x002AB290; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1InterCout                        = 0x002AB290; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.89                                   = 0x002AB2A8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1InterCross                       = 0x002AB2A8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.90                                   = 0x002AB2D8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1InterEnd                         = 0x002AB2D8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.91                                   = 0x002AB2E8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1SubInter                         = 0x002AB2E8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.92                                   = 0x002AB318; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1SILoop                           = 0x002AB318; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.93                                   = 0x002AB360; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1SILoopEnd                        = 0x002AB360; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.94                                   = 0x002AB418; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1SubInterEnd                      = 0x002AB418; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.95                                   = 0x002AB428; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1Push                             = 0x002AB428; // (Region->LOCAL)  (Type->NOTYPE) 
.vif.96                                  = 0x002AB518; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.99                                   = 0x002AB520; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.100                                  = 0x002AB550; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1Pop                              = 0x002AB550; // (Region->LOCAL)  (Type->NOTYPE) 
//.dma.101                                 = 0x002AB670; // (Region->LOCAL)  (Type->NOTYPE) 
ltmasmSendPrgVu1NonFog                   = 0x002AB670; // (Region->GLOBAL) (Type->NOTYPE) 
.vif.102                                 = 0x002AB678; // (Region->LOCAL)  (Type->NOTYPE) 
.dma.103                                 = 0x002AB680; // (Region->LOCAL)  (Type->NOTYPE) 
.vif.104                                 = 0x002AB688; // (Region->LOCAL)  (Type->NOTYPE) 
//.vif.105                                 = 0x002AB690; // (Region->LOCAL)  (Type->NOTYPE) 
ltmasmProgVu1NonFog                      = 0x002AB690; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.108                                  = 0x002AB698; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.109                                  = 0x002AB728; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DrawCheckNonFog                  = 0x002AB728; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.110                                  = 0x002AB790; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1CHKNF_SKIP00                     = 0x002AB790; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.111                                  = 0x002AB7A0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1CHKNF_BASE                       = 0x002AB7A0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.112                                  = 0x002AB7D8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1CHKNF_SKIP10                     = 0x002AB7D8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.113                                  = 0x002AB7E8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DrawBaseNonFog                   = 0x002AB7E8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.114                                  = 0x002AB838; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DBNF_PRIM                        = 0x002AB838; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.115                                  = 0x002AB8B8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DBNF_RTP                         = 0x002AB8B8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.116                                  = 0x002AB930; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DBNF_Count                       = 0x002AB930; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.117                                  = 0x002AB950; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DBNF_Skip                        = 0x002AB950; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.118                                  = 0x002AB9F0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DrawBaseNonFogScissor            = 0x002AB9F0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.119                                  = 0x002ABA40; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DBNFS_PRIM                       = 0x002ABA40; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.120                                  = 0x002ABAB8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DBNFS_RTP                        = 0x002ABAB8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.121                                  = 0x002ABB58; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DBNFS_Flag                       = 0x002ABB58; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.122                                  = 0x002ABB78; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DBNFS_Count                      = 0x002ABB78; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.123                                  = 0x002ABC38; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DBNFS_Skip                       = 0x002ABC38; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.124                                  = 0x002ABCE8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DrawDrawNonFog                   = 0x002ABCE8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.125                                  = 0x002ABD50; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DDNF_PRIM                        = 0x002ABD50; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.126                                  = 0x002ABDF0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DDNF_RTP                         = 0x002ABDF0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.127                                  = 0x002ABE88; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DDNF_Count                       = 0x002ABE88; // (Region->LOCAL)  (Type->NOTYPE) 
.vif.128                                 = 0x002ABE98; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.131                                  = 0x002ABEA0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.132                                  = 0x002ABEB0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DDNF_Skip                        = 0x002ABEB0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.133                                  = 0x002ABF40; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DrawDrawNonFogScissor            = 0x002ABF40; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.134                                  = 0x002ABFA8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DDNFS_PRIM                       = 0x002ABFA8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.135                                  = 0x002AC038; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DDNFS_RTP                        = 0x002AC038; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.136                                  = 0x002AC0D8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DDNFS_Flag                       = 0x002AC0D8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.137                                  = 0x002AC0F8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DDNFS_Count                      = 0x002AC0F8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.138                                  = 0x002AC1B8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DDNFS_Skip                       = 0x002AC1B8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.139                                  = 0x002AC258; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1NonFogScissor                    = 0x002AC258; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.140                                  = 0x002AC408; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1NonFogScissorZM                  = 0x002AC408; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.141                                  = 0x002AC428; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1NonFogScissorZMLoop              = 0x002AC428; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.142                                  = 0x002AC4B0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1NonFogScissorZP                  = 0x002AC4B0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.143                                  = 0x002AC4D0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1NonFogScissorZPLoop              = 0x002AC4D0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.144                                  = 0x002AC558; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1NonFogScissorXM                  = 0x002AC558; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.145                                  = 0x002AC578; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1NonFogScissorXMLoop              = 0x002AC578; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.146                                  = 0x002AC600; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1NonFogScissorXP                  = 0x002AC600; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.147                                  = 0x002AC620; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1NonFogScissorXPLoop              = 0x002AC620; // (Region->LOCAL)  (Type->NOTYPE) 
.vif.148                                 = 0x002AC6A0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.151                                  = 0x002AC6A8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.152                                  = 0x002AC6B0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1NonFogScissorYM                  = 0x002AC6B0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.153                                  = 0x002AC6D0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1NonFogScissorYMLoop              = 0x002AC6D0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.154                                  = 0x002AC758; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1NonFogScissorYP                  = 0x002AC758; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.155                                  = 0x002AC778; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1NonFogScissorYPLoop              = 0x002AC778; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.156                                  = 0x002AC7D0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1NonFogScissorPacket              = 0x002AC7D0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.157                                  = 0x002AC7E8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1NonFogScissorPSkip00             = 0x002AC7E8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.158                                  = 0x002AC880; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1NonFogScissorLoop                = 0x002AC880; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.159                                  = 0x002AC958; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1NonFogScissorEnd                 = 0x002AC958; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.160                                  = 0x002AC978; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1NonFogScissorEnd2                = 0x002AC978; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.161                                  = 0x002AC988; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1NonFogInter                      = 0x002AC988; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.162                                  = 0x002ACA00; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1NonFogInterCin                   = 0x002ACA00; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.163                                  = 0x002ACA40; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1NonFogInterCout                  = 0x002ACA40; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.164                                  = 0x002ACA58; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1NonFogInterCross                 = 0x002ACA58; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.165                                  = 0x002ACA88; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1NonFogInterEnd                   = 0x002ACA88; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.166                                  = 0x002ACA98; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1NonFogSubInter                   = 0x002ACA98; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.167                                  = 0x002ACAC8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1NonFogSILoop                     = 0x002ACAC8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.168                                  = 0x002ACB10; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1NonFogSILoopEnd                  = 0x002ACB10; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.169                                  = 0x002ACBC8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1NonFogSubInterEnd                = 0x002ACBC8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.170                                  = 0x002ACBD8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1NonFogPush                       = 0x002ACBD8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.171                                  = 0x002ACCF8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1NonFogPop                        = 0x002ACCF8; // (Region->LOCAL)  (Type->NOTYPE) 
//.dma.172                                 = 0x002ACE20; // (Region->LOCAL)  (Type->NOTYPE) 
ltmasmSendPrgVu1NonFogObj                = 0x002ACE20; // (Region->GLOBAL) (Type->NOTYPE) 
.vif.173                                 = 0x002ACE28; // (Region->LOCAL)  (Type->NOTYPE) 
.dma.174                                 = 0x002ACE30; // (Region->LOCAL)  (Type->NOTYPE) 
.vif.175                                 = 0x002ACE38; // (Region->LOCAL)  (Type->NOTYPE) 
//.vif.176                                 = 0x002ACE40; // (Region->LOCAL)  (Type->NOTYPE) 
ltmasmProgVu1NonFogObj                   = 0x002ACE40; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.179                                  = 0x002ACE48; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.180                                  = 0x002ACEB8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DrawNonFogObjectCheck            = 0x002ACEB8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.181                                  = 0x002AD018; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1NFOCHK_SKIP                      = 0x002AD018; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.182                                  = 0x002AD028; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DrawNonFogObject                 = 0x002AD028; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.183                                  = 0x002AD078; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFO_PRIM                        = 0x002AD078; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.184                                  = 0x002AD0F8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFO_RTP                         = 0x002AD0F8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.185                                  = 0x002AD170; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFO_Count                       = 0x002AD170; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.186                                  = 0x002AD190; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFO_Skip                        = 0x002AD190; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.187                                  = 0x002AD230; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DrawNonFogObjectScissor          = 0x002AD230; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.188                                  = 0x002AD280; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOS_PRIM                       = 0x002AD280; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.189                                  = 0x002AD2F8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOS_RTP                        = 0x002AD2F8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.190                                  = 0x002AD398; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOS_Flag                       = 0x002AD398; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.191                                  = 0x002AD3B8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOS_Count                      = 0x002AD3B8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.192                                  = 0x002AD478; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOS_Skip                       = 0x002AD478; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.193                                  = 0x002AD528; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOScissor                      = 0x002AD528; // (Region->LOCAL)  (Type->NOTYPE) 
.vif.194                                 = 0x002AD648; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.197                                  = 0x002AD650; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.198                                  = 0x002AD6E0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOScissorZM                    = 0x002AD6E0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.199                                  = 0x002AD700; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOScissorZMLoop                = 0x002AD700; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.200                                  = 0x002AD788; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOScissorZP                    = 0x002AD788; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.201                                  = 0x002AD7A8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOScissorZPLoop                = 0x002AD7A8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.202                                  = 0x002AD830; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOScissorXM                    = 0x002AD830; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.203                                  = 0x002AD850; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOScissorXMLoop                = 0x002AD850; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.204                                  = 0x002AD8D8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOScissorXP                    = 0x002AD8D8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.205                                  = 0x002AD8F8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOScissorXPLoop                = 0x002AD8F8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.206                                  = 0x002AD980; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOScissorYM                    = 0x002AD980; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.207                                  = 0x002AD9A0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOScissorYMLoop                = 0x002AD9A0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.208                                  = 0x002ADA28; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOScissorYP                    = 0x002ADA28; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.209                                  = 0x002ADA48; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOScissorYPLoop                = 0x002ADA48; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.210                                  = 0x002ADAA0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOScissorPacket                = 0x002ADAA0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.211                                  = 0x002ADAB8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOScissorPSkip00               = 0x002ADAB8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.212                                  = 0x002ADB50; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOScissorLoop                  = 0x002ADB50; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.213                                  = 0x002ADC28; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOScissorEnd                   = 0x002ADC28; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.214                                  = 0x002ADC48; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOScissorEnd2                  = 0x002ADC48; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.215                                  = 0x002ADC58; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOInter                        = 0x002ADC58; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.216                                  = 0x002ADCD0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOInterCin                     = 0x002ADCD0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.217                                  = 0x002ADD10; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOInterCout                    = 0x002ADD10; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.218                                  = 0x002ADD28; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOInterCross                   = 0x002ADD28; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.219                                  = 0x002ADD58; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOInterEnd                     = 0x002ADD58; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.220                                  = 0x002ADD68; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOSubInter                     = 0x002ADD68; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.221                                  = 0x002ADD98; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOSILoop                       = 0x002ADD98; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.222                                  = 0x002ADDE0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOSILoopEnd                    = 0x002ADDE0; // (Region->LOCAL)  (Type->NOTYPE) 
.vif.223                                 = 0x002ADE50; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.226                                  = 0x002ADE58; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.227                                  = 0x002ADEA0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOSubInterEnd                  = 0x002ADEA0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.228                                  = 0x002ADEB0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOPush                         = 0x002ADEB0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.229                                  = 0x002ADFD0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DNFOPop                          = 0x002ADFD0; // (Region->LOCAL)  (Type->NOTYPE) 
//.dma.230                                 = 0x002AE0F0; // (Region->LOCAL)  (Type->NOTYPE) 
ltmasmSendPrgVu1Obj                      = 0x002AE0F0; // (Region->GLOBAL) (Type->NOTYPE) 
.vif.231                                 = 0x002AE0F8; // (Region->LOCAL)  (Type->NOTYPE) 
.dma.232                                 = 0x002AE100; // (Region->LOCAL)  (Type->NOTYPE) 
.vif.233                                 = 0x002AE108; // (Region->LOCAL)  (Type->NOTYPE) 
//.vif.234                                 = 0x002AE110; // (Region->LOCAL)  (Type->NOTYPE) 
ltmasmProgVu1Obj                         = 0x002AE110; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.237                                  = 0x002AE118; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.238                                  = 0x002AE188; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DrawObjectCheck                  = 0x002AE188; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.239                                  = 0x002AE2E8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1OCHK_SKIP                        = 0x002AE2E8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.240                                  = 0x002AE2F8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DrawObject                       = 0x002AE2F8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.241                                  = 0x002AE348; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DO_PRIM                          = 0x002AE348; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.242                                  = 0x002AE3C8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DO_RTP                           = 0x002AE3C8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.243                                  = 0x002AE478; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DO_Count                         = 0x002AE478; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.244                                  = 0x002AE4B0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DO_Skip                          = 0x002AE4B0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.245                                  = 0x002AE550; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DrawObjectScissor                = 0x002AE550; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.246                                  = 0x002AE5A0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOS_PRIM                         = 0x002AE5A0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.247                                  = 0x002AE618; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOS_RTP                          = 0x002AE618; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.248                                  = 0x002AE720; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOS_Flag                         = 0x002AE720; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.249                                  = 0x002AE740; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOS_Count                        = 0x002AE740; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.250                                  = 0x002AE800; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOS_Skip                         = 0x002AE800; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.251                                  = 0x002AE8B0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOScissor                        = 0x002AE8B0; // (Region->LOCAL)  (Type->NOTYPE) 
.vif.252                                 = 0x002AE918; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.255                                  = 0x002AE920; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.256                                  = 0x002AEA68; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOScissorZM                      = 0x002AEA68; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.257                                  = 0x002AEA88; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOScissorZMLoop                  = 0x002AEA88; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.258                                  = 0x002AEB10; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOScissorZP                      = 0x002AEB10; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.259                                  = 0x002AEB30; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOScissorZPLoop                  = 0x002AEB30; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.260                                  = 0x002AEBB8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOScissorXM                      = 0x002AEBB8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.261                                  = 0x002AEBD8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOScissorXMLoop                  = 0x002AEBD8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.262                                  = 0x002AEC60; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOScissorXP                      = 0x002AEC60; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.263                                  = 0x002AEC80; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOScissorXPLoop                  = 0x002AEC80; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.264                                  = 0x002AED08; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOScissorYM                      = 0x002AED08; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.265                                  = 0x002AED28; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOScissorYMLoop                  = 0x002AED28; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.266                                  = 0x002AEDB0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOScissorYP                      = 0x002AEDB0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.267                                  = 0x002AEDD0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOScissorYPLoop                  = 0x002AEDD0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.268                                  = 0x002AEE28; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOScissorPacket                  = 0x002AEE28; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.269                                  = 0x002AEE40; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOScissorPSkip00                 = 0x002AEE40; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.270                                  = 0x002AEED8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOScissorLoop                    = 0x002AEED8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.271                                  = 0x002AF008; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOScissorEnd                     = 0x002AF008; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.272                                  = 0x002AF028; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOScissorEnd2                    = 0x002AF028; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.273                                  = 0x002AF038; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOInter                          = 0x002AF038; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.274                                  = 0x002AF0B0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOInterCin                       = 0x002AF0B0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.275                                  = 0x002AF0F0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOInterCout                      = 0x002AF0F0; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.276                                  = 0x002AF108; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOInterCross                     = 0x002AF108; // (Region->LOCAL)  (Type->NOTYPE) 
.vif.277                                 = 0x002AF120; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.280                                  = 0x002AF128; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.281                                  = 0x002AF140; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOInterEnd                       = 0x002AF140; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.282                                  = 0x002AF150; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOSubInter                       = 0x002AF150; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.283                                  = 0x002AF180; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOSILoop                         = 0x002AF180; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.284                                  = 0x002AF1C8; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOSILoopEnd                      = 0x002AF1C8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.285                                  = 0x002AF280; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOSubInterEnd                    = 0x002AF280; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.286                                  = 0x002AF290; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOPush                           = 0x002AF290; // (Region->LOCAL)  (Type->NOTYPE) 
//.vu.287                                  = 0x002AF3B0; // (Region->LOCAL)  (Type->NOTYPE) 
_$ltmvu1DOPop                            = 0x002AF3B0; // (Region->LOCAL)  (Type->NOTYPE) 
//.dma.288                                 = 0x002AF4D0; // (Region->LOCAL)  (Type->NOTYPE) 
ltmasmSendMatrix                         = 0x002AF4D0; // (Region->GLOBAL) (Type->NOTYPE) 
.vif.289                                 = 0x002AF4D8; // (Region->LOCAL)  (Type->NOTYPE) 
.dma.290                                 = 0x002AF4E0; // (Region->LOCAL)  (Type->NOTYPE) 
.vif.291                                 = 0x002AF4E8; // (Region->LOCAL)  (Type->NOTYPE) 
//.vif.292                                 = 0x002AF4F0; // (Region->LOCAL)  (Type->NOTYPE) 
ltmasmMatrixData                         = 0x002AF4F0; // (Region->LOCAL)  (Type->NOTYPE) 
ltmasmPrimitive                          = 0x002AF4F8; // (Region->GLOBAL) (Type->NOTYPE) 
.vif.295                                 = 0x002AF538; // (Region->LOCAL)  (Type->NOTYPE) 
ltmasmLocalScreenMatrix                  = 0x002AF540; // (Region->GLOBAL) (Type->NOTYPE) 
.vif.298                                 = 0x002AF580; // (Region->LOCAL)  (Type->NOTYPE) 
ltmasmLocalClipMatrix                    = 0x002AF588; // (Region->GLOBAL) (Type->NOTYPE) 
.vif.301                                 = 0x002AF5C8; // (Region->LOCAL)  (Type->NOTYPE) 
ltmasmClipScreenMatrix                   = 0x002AF5D0; // (Region->GLOBAL) (Type->NOTYPE) 
.vif.304                                 = 0x002AF610; // (Region->LOCAL)  (Type->NOTYPE) 
.dma.305                                 = 0x002AF620; // (Region->LOCAL)  (Type->NOTYPE) 
.vif.306                                 = 0x002AF628; // (Region->LOCAL)  (Type->NOTYPE) 
__data_start                             = 0x002AF630; // (Region->GLOBAL) (Type->NOTYPE) 
//__ps2_libinfo__                          = 0x002AF680; // (Size->16)    
////.data                                    = 0x002AF680; // (Region->LOCAL)  (Type->SECTION)
gp.6                                     = 0x002AF690; // (Size->16)    
//.data                                    = 0x002AF6A0; // (Region->LOCAL)  (Type->SECTION)
init_vif_regs.3                          = 0x002AF6A0; // (Size->32)    
//.data                                    = 0x002AF6C0; // (Region->LOCAL)  (Type->SECTION)
init_mp3.3                               = 0x002AF6C0; // (Size->16)    
//.data                                    = 0x002AF6D0; // (Region->LOCAL)  (Type->SECTION)
dch                                      = 0x002AF6D0; //  (Size->40)    
sceDmaDebugMode                          = 0x002AF6F8; //  (Size->4)     
//__ps2_libinfo__                          = 0x002AF700; // (Size->16)    
isclr                                    = 0x002AF710; // (Size->40)    
ststbl                                   = 0x002AF738; // (Size->10)    
stdtbl                                   = 0x002AF748; // (Size->10)    
mfdtbl                                   = 0x002AF758; // (Size->10)    
sceDmaCurrentEnv                         = 0x002AF768; //  (Size->20)    
//.data                                    = 0x002AF780; // (Region->LOCAL)  (Type->SECTION)
S5432                                    = 0x002AF780; // (Region->LOCAL)  (Type->NOTYPE) 
init_vif_regs.126                        = 0x002AF790; // (Size->32)    
//.data                                    = 0x002AF7B0; // (Region->LOCAL)  (Type->SECTION)
_rix                                     = 0x002AF7B0; // (Size->32)    
_ri0                                     = 0x002AF7D0; // (Size->32)    
_isDirty                                 = 0x002AF7F0; // (Size->40)    
_tmpRefBase                              = 0x002AF818; //  (Size->4)     
_trFrameNumberA                          = 0x002AF81C; //  (Size->4)     
_tmpRefGOPreset                          = 0x002AF820; //  (Size->4)     
ext_func.183                             = 0x002AF828; // (Size->44)    
tempRefWrap.193                          = 0x002AF854; // (Size->4)     
tempRefOld.194                           = 0x002AF858; // (Size->4)     
_showCount                               = 0x002AF860; //  (Size->64)    
//.data                                    = 0x002AF8A0; // (Region->LOCAL)  (Type->SECTION)
_isCSCerror                              = 0x002AF8A0; // (Size->4)     
_cscDma                                  = 0x002AF8A8; //  (Size->16)    
//.data                                    = 0x002AF8B8; // (Region->LOCAL)  (Type->SECTION)
_strmap                                  = 0x002AF8B8; // (Size->160)   
ES_DSM_trick_mode_add_copy_CRC.39        = 0x002AF958; // (Region->LOCAL)  (Type->OBJECT) 
//.data                                    = 0x002AF968; // (Region->LOCAL)  (Type->SECTION)
_buffbase                                = 0x002AF968; // (Size->4)     
_sprtag                                  = 0x002AF96C; //  (Size->4)     
_refBlockp                               = 0x002AF970; //  (Size->4)     
_theSceMpeg                              = 0x002AF974; //  (Size->4)     
_bsDatap                                 = 0x002AF978; //  (Size->4)     
//.data                                    = 0x002AF980; // (Region->LOCAL)  (Type->SECTION)
_forwFrame                               = 0x002AF980; //  (Size->4)     
_backFrame                               = 0x002AF984; //  (Size->4)     
_zFrame                                  = 0x002AF988; //  (Size->4)     
_forwTop                                 = 0x002AF98C; //  (Size->4)     
_backTop                                 = 0x002AF990; //  (Size->4)     
_zTop                                    = 0x002AF994; //  (Size->4)     
_forwBot                                 = 0x002AF998; //  (Size->4)     
_backBot                                 = 0x002AF99C; //  (Size->4)     
_zBot                                    = 0x002AF9A0; //  (Size->4)     
_isTop32dirty                            = 0x002AF9A4; //  (Size->4)     
_tmp_flag                                = 0x002AF9A8; //  (Size->4)     
_ipucmd                                  = 0x002AF9AC; //  (Size->4)     
_ipuctrl                                 = 0x002AF9B0; //  (Size->4)     
_ipubp                                   = 0x002AF9B4; //  (Size->4)     
_iputop                                  = 0x002AF9B8; //  (Size->4)     
_d4tadr                                  = 0x002AF9BC; //  (Size->4)     
_d4madr                                  = 0x002AF9C0; //  (Size->4)     
_d4chcr                                  = 0x002AF9C4; //  (Size->4)     
_d4qwc                                   = 0x002AF9C8; //  (Size->4)     
_d3madr                                  = 0x002AF9CC; //  (Size->4)     
_d3chcr                                  = 0x002AF9D0; //  (Size->4)     
_d3qwc                                   = 0x002AF9D4; //  (Size->4)     
_defIQM                                  = 0x002AFA00; //  (Size->64)    
_defNIQM                                 = 0x002AFA40; //  (Size->64)    
_bsDataSize                              = 0x002AFA80; //  (Size->4)     
_totalFrames                             = 0x002AFA84; //  (Size->4)     
_isError                                 = 0x002AFA88; //  (Size->4)     
_picWidth                                = 0x002AFA8C; //  (Size->4)     
_picHeight                               = 0x002AFA90; //  (Size->4)     
_cWidth                                  = 0x002AFA94; //  (Size->4)     
_cHeight                                 = 0x002AFA98; //  (Size->4)     
_isSecondField                           = 0x002AFA9C; //  (Size->4)     
_horizontal_size                         = 0x002AFAA0; //  (Size->4)     
_vertical_size                           = 0x002AFAA4; //  (Size->4)     
_widthMB                                 = 0x002AFAA8; //  (Size->4)     
_heightMB                                = 0x002AFAAC; //  (Size->4)     
_aspect_ratio_information                = 0x002AFAB0; //  (Size->4)     
_frame_rate_code                         = 0x002AFAB4; //  (Size->4)     
_bit_rate_value                          = 0x002AFAB8; //  (Size->4)     
_vbv_buffer_size_value                   = 0x002AFABC; //  (Size->4)     
_constrained_parameters_flag             = 0x002AFAC0; //  (Size->4)     
_profile_and_level_indication            = 0x002AFAC4; //  (Size->4)     
_progressive_sequence                    = 0x002AFAC8; //  (Size->4)     
_chroma_format                           = 0x002AFACC; //  (Size->4)     
_low_delay                               = 0x002AFAD0; //  (Size->4)     
_frame_rate_extension_n                  = 0x002AFAD4; //  (Size->4)     
_frame_rate_extension_d                  = 0x002AFAD8; //  (Size->4)     
_video_format                            = 0x002AFADC; //  (Size->4)     
_color_description                       = 0x002AFAE0; //  (Size->4)     
_color_primaries                         = 0x002AFAE4; //  (Size->4)     
_transfer_characteristics                = 0x002AFAE8; //  (Size->4)     
_matrix_coefficients                     = 0x002AFAEC; //  (Size->4)     
_display_horizontal_size                 = 0x002AFAF0; //  (Size->4)     
_display_vertical_size                   = 0x002AFAF4; //  (Size->4)     
_temporal_reference                      = 0x002AFAF8; //  (Size->4)     
_picture_coding_type                     = 0x002AFAFC; //  (Size->4)     
_vbv_delay                               = 0x002AFB00; //  (Size->4)     
_full_pel_forward_vector                 = 0x002AFB04; //  (Size->4)     
_forward_f_code                          = 0x002AFB08; //  (Size->4)     
_full_pel_backward_vector                = 0x002AFB0C; //  (Size->4)     
_backward_f_code                         = 0x002AFB10; //  (Size->4)     
_f_code                                  = 0x002AFB18; //  (Size->16)    
_intra_dc_precision                      = 0x002AFB28; //  (Size->4)     
_picture_structure                       = 0x002AFB2C; //  (Size->4)     
_top_field_first                         = 0x002AFB30; //  (Size->4)     
_frame_pred_frame_dct                    = 0x002AFB34; //  (Size->4)     
_concealment_motion_vectors              = 0x002AFB38; //  (Size->4)     
_intra_vlc_format                        = 0x002AFB3C; //  (Size->4)     
_repeat_first_field                      = 0x002AFB40; //  (Size->4)     
_chroma_420_type                         = 0x002AFB44; //  (Size->4)     
_progressive_frame                       = 0x002AFB48; //  (Size->4)     
_composite_display_flag                  = 0x002AFB4C; //  (Size->4)     
_v_axis                                  = 0x002AFB50; //  (Size->4)     
_field_sequence                          = 0x002AFB54; //  (Size->4)     
_sub_carrier                             = 0x002AFB58; //  (Size->4)     
_burst_amplitude                         = 0x002AFB5C; //  (Size->4)     
_sub_carrier_phase                       = 0x002AFB60; //  (Size->4)     
_frame_center_horizontal_offset          = 0x002AFB68; //  (Size->12)    
_frame_center_vertical_offset            = 0x002AFB78; //  (Size->12)    
_copyright_flag                          = 0x002AFB84; //  (Size->4)     
_copyright_identifier                    = 0x002AFB88; //  (Size->4)     
_original_or_copy                        = 0x002AFB8C; //  (Size->4)     
_copyright_number_1                      = 0x002AFB90; //  (Size->4)     
_copyright_number_2                      = 0x002AFB94; //  (Size->4)     
_copyright_number_3                      = 0x002AFB98; //  (Size->4)     
_drop_frame_flag                         = 0x002AFB9C; //  (Size->4)     
_time_code_hours                         = 0x002AFBA0; //  (Size->4)     
_time_code_minutes                       = 0x002AFBA4; //  (Size->4)     
_time_code_seconds                       = 0x002AFBA8; //  (Size->4)     
_time_code_pictures                      = 0x002AFBAC; //  (Size->4)     
_closed_gop                              = 0x002AFBB0; //  (Size->4)     
_broken_link                             = 0x002AFBB4; //  (Size->4)     
_trFrameNumber                           = 0x002AFBB8; //  (Size->4)     
_sp_dcr                                  = 0x002AFBBC; //  (Size->4)     
_qscqsc                                  = 0x002AFBC0; //  (Size->4)     
_curFrame                                = 0x002AFBC4; //  (Size->4)     
_curTop                                  = 0x002AFBC8; //  (Size->4)     
_curBot                                  = 0x002AFBCC; //  (Size->4)     
_refFrame0                               = 0x002AFBD0; //  (Size->104)   
_refFrame1                               = 0x002AFC38; //  (Size->104)   
_refFrame2                               = 0x002AFCA0; //  (Size->104)   
_refTop0                                 = 0x002AFD08; //  (Size->104)   
_refTop1                                 = 0x002AFD70; //  (Size->104)   
_refTop2                                 = 0x002AFDD8; //  (Size->104)   
_refBot0                                 = 0x002AFE40; //  (Size->104)   
_refBot1                                 = 0x002AFEA8; //  (Size->104)   
_refBot2                                 = 0x002AFF10; //  (Size->104)   
_mbcont                                  = 0x002AFF78; //  (Size->648)   
_isOutputPicture                         = 0x002B0200; //  (Size->4)     
_headerPts                               = 0x002B0208; //  (Size->8)     
_headerDts                               = 0x002B0210; //  (Size->8)     
_top32                                   = 0x002B0218; //  (Size->4)     
_top32len                                = 0x002B021C; //  (Size->4)     
_load_intra_quantizer_matrix             = 0x002B0220; //  (Size->4)     
_load_non_intra_quantizer_matrix         = 0x002B0224; //  (Size->4)     
_load_chroma_intra_quantizer_matrix      = 0x002B0228; //  (Size->4)     
_load_chroma_non_intra_quantizer_matrix  = 0x002B022C; //  (Size->4)     
_isMpeg2                                 = 0x002B0230; //  (Size->4)     
_q_scale_type                            = 0x002B0234; //  (Size->4)     
_alternate_scan                          = 0x002B0238; //  (Size->4)     
_priority_breakpoint                     = 0x002B023C; //  (Size->4)     
_intra_slice                             = 0x002B0240; //  (Size->4)     
//__ps2_libinfo__                          = 0x002B0250; // (Size->16)    
//.data                                    = 0x002B0250; // (Region->LOCAL)  (Type->SECTION)
iqval                                    = 0x002B0260; // (Size->80)    
vqval                                    = 0x002B02B0; // (Size->32)    
//.data                                    = 0x002B02D0; // (Region->LOCAL)  (Type->SECTION)
__ps2_klibinfo__                         = 0x002B02D0; // 
ttyinit                                  = 0x002B02E0; // (Size->4)     
//.data                                    = 0x002B02E0; // (Region->LOCAL)  (Type->SECTION)
heap_ptr.30                              = 0x002B02E4; // (Size->4)     
srcfile                                  = 0x002B02E8; // (Size->1856)  
//.data                                    = 0x002B02E8; // (Region->LOCAL)  (Type->SECTION)
eenull                                   = 0x002B0A28; // (Size->40)    
SysEntry                                 = 0x002B0A50; // (Size->64)    
//.data                                    = 0x002B0A90; // (Region->LOCAL)  (Type->SECTION)
topId                                    = 0x002B0A90; // (Size->4)     
//.data                                    = 0x002B0A98; // (Region->LOCAL)  (Type->SECTION)
count                                    = 0x002B0A98; // (Size->4)     
_putchar                                 = 0x002B0A9C; // (Size->4)     
//.data                                    = 0x002B0AA0; // (Region->LOCAL)  (Type->SECTION)
_cmd_init_check                          = 0x002B0AA0; // (Size->4)     
//.data                                    = 0x002B0AA8; // (Region->LOCAL)  (Type->SECTION)
_sceSifInitCheck                         = 0x002B0AA8; // (Size->4)     
//.data                                    = 0x002B0AB0; // (Region->LOCAL)  (Type->SECTION)
_sceFs_q                                 = 0x002B0AB0; //  (Size->128)   
_fs_init                                 = 0x002B0B30; // (Size->4)     
_fs_semid                                = 0x002B0B34; // (Size->4)     
_fs_iob_semid                            = 0x002B0B38; // (Size->4)     
_fs_fsq_semid                            = 0x002B0B3C; // (Size->4)     
_fswildcard                              = 0x002B0B40; // (Size->4)     
//.data                                    = 0x002B0B48; // (Region->LOCAL)  (Type->SECTION)
_bind                                    = 0x002B0B48; // (Size->4)     
//.data                                    = 0x002B0B50; // (Region->LOCAL)  (Type->SECTION)
_bind_check                              = 0x002B0B50; // (Size->4)     
_lfwildcard                              = 0x002B0B54; // (Size->4)     
//.data                                    = 0x002B0B58; // (Region->LOCAL)  (Type->SECTION)
__sce_sema_id                            = 0x002B0B58; //  (Size->4)     
__sce_eh_sema_id                         = 0x002B0B5C; //  (Size->4)     
//__ps2_libinfo__                          = 0x002B0B60; // (Size->16)    
//.data                                    = 0x002B0B60; // (Region->LOCAL)  (Type->SECTION)
isInit                                   = 0x002B0B70; // (Size->4)     
isWarning                                = 0x002B0B74; // (Size->4)     
PadStateStr                              = 0x002B0B78; // (Size->32)    
ReqStateStr                              = 0x002B0B98; // (Size->12)    
//__ps2_libinfo__                          = 0x002B0BC0; // (Size->16)    
//.data                                    = 0x002B0BC0; // (Region->LOCAL)  (Type->SECTION)
SCE_CD_debug                             = 0x002B0BD0; //  (Size->4)     
cb_thid                                  = 0x002B0BD4; // (Size->4)     
scmd_sema_keep_cmd                       = 0x002B0BD8; // (Size->4)     
ncmd_sema_keep_cmd                       = 0x002B0BDC; // (Size->4)     
cb_semid                                 = 0x002B0BE0; // (Size->4)     
Init_seq                                 = 0x002B0BE4; // (Size->4)     
_sceCd_ncmd_semid                        = 0x002B0BE8; //  (Size->4)     
_sceCd_scmd_semid                        = 0x002B0BEC; //  (Size->4)     
_sceCd_c_cb_sem                          = 0x002B0BF0; //  (Size->4)     
_sceCd_ee_read_mode                      = 0x002B0BF4; //  (Size->4)     
_ncmd_bind                               = 0x002B0BF8; // (Size->4)     
_icmd_bind                               = 0x002B0BFC; // (Size->4)     
_sf_bind                                 = 0x002B0C00; // (Size->4)     
_scmd_dr_bind                            = 0x002B0C04; // (Size->4)     
_scmd_bind                               = 0x002B0C08; // (Size->4)     
_it_bind                                 = 0x002B0C0C; // (Size->4)     
c_cnt.57                                 = 0x002B0C10; // (Size->4)     
sceCdCbfunc_num                          = 0x002B0C14; //  (Size->4)     
sceCdCbfunc_number                       = 0x002B0C18; //  (Size->4)     
_sceCd_ncmdrdata                         = 0x002B0C40; //  (Size->96)    
_sceCd_ncmdsdata                         = 0x002B0CC0; //  (Size->4096)  
_sceCd_rd_intr_data                      = 0x002B1CC0; //  (Size->144)   
_sceCd_Read_cur_pos                      = 0x002B1D80; //  (Size->16)    
_sceCd_cd_ncmd                           = 0x002B1D90; //  (Size->40)    
_sceCd_scmdrdata                         = 0x002B1DC0; //  (Size->1056)  
_sceCd_scmdsdata                         = 0x002B2200; //  (Size->1032)  
_sceCd_cd_scmd                           = 0x002B2608; //  (Size->40)    
//.data                                    = 0x002B2630; // (Region->LOCAL)  (Type->SECTION)
stm_status                               = 0x002B2630; // (Size->4)     
//__ps2_libinfo__                          = 0x002B2638; // (Size->16)    
//.data                                    = 0x002B2638; // (Region->LOCAL)  (Type->SECTION)
mcRunCmdNo                               = 0x002B2648; // (Size->4)     
semaidRegFunc                            = 0x002B264C; // (Size->4)     
//__ps2_libinfo__                          = 0x002B2650; // (Size->16)    
//.data                                    = 0x002B2650; // (Region->LOCAL)  (Type->SECTION)
sceSd_gEnd_func                          = 0x002B2660; // (Size->4)     
//.data                                    = 0x002B2668; // (Region->LOCAL)  (Type->SECTION)
_sce_sdr_gDMA0CB                         = 0x002B2668; //  (Size->4)     
_sce_sdr_gDMA1CB                         = 0x002B266C; //  (Size->4)     
_sce_sdr_gIRQCB                          = 0x002B2670; //  (Size->4)     
_sce_sdr_transIntr0Hdr                   = 0x002B2674; //  (Size->4)     
_sce_sdr_transIntr1Hdr                   = 0x002B2678; //  (Size->4)     
_sce_sdr_spu2IntrHdr                     = 0x002B267C; //  (Size->4)     
_sce_sdr_transIntr0Arg                   = 0x002B2680; //  (Size->4)     
_sce_sdr_transIntr1Arg                   = 0x002B2684; //  (Size->4)     
_sce_sdr_spu2IntrArg                     = 0x002B2688; //  (Size->4)     
//.data                                    = 0x002B2690; // (Region->LOCAL)  (Type->SECTION)
impure_data                              = 0x002B2690; // (Size->748)   
_impure_ptr                              = 0x002B297C; //  (Size->4)     
//.data                                    = 0x002B2980; // (Region->LOCAL)  (Type->SECTION)
__mb_cur_max                             = 0x002B2980; //  (Size->4)     
lc_ctype.3                               = 0x002B2988; // (Size->8)     
last_lc_ctype.4                          = 0x002B2990; // (Size->8)     
//.data                                    = 0x002B2998; // (Region->LOCAL)  (Type->SECTION)
__malloc_av_                             = 0x002B2998; //  (Size->1032)  
__malloc_trim_threshold                  = 0x002B2DA0; //  (Size->8)     
__malloc_top_pad                         = 0x002B2DA8; //  (Size->8)     
__malloc_sbrk_base                       = 0x002B2DB0; //  (Size->4)     
__malloc_max_sbrked_mem                  = 0x002B2DB8; //  (Size->8)     
__malloc_max_total_mem                   = 0x002B2DC0; //  (Size->8)     
__malloc_current_mallinfo                = 0x002B2DC8; //  (Size->40)    
// Main.c .data
vgmsysSetScreenMode                      = 0x002B2DF0; // (Size->12)    
// mdlpr.c .data
black$14                                 = 0x002B2E00; // (Size->16)    
black$24                                 = 0x002B2E10; // (Size->16)    
// model.c .data
Constant                                 = 0x002B2E20; // (Size->48)    
PrimPhysiqueStripGT                      = 0x002B2E50; // (Size->32)    
PrimMeshStripGT                          = 0x002B2E70; // (Size->32)    
PrimPhysiqueStripGTalpha                 = 0x002B2E90; // (Size->32)    
PrimMeshStripGTalpha                     = 0x002B2EB0; // (Size->32)    
// movie2.c .data
@151movie2                               = 0x002B2ED0; // allow_duplicated:True (Size->16)
@152movie2                               = 0x002B2EE0; // allow_duplicated:True (Size->16)
// strconv.c .data
@14strconv                               = 0x002B2EF0; // allow_duplicated:True (Size->33)
// tmgraph.c .data
@222tmgraph                              = 0x002B2F20; // allow_duplicated:True (Size->64)
// tmcrs.c .data
@1766tmcrs                               = 0x002B2F60; // allow_duplicated:True (Size->12)
@1767tmcrs                               = 0x002B2F70; // allow_duplicated:True (Size->64)
@1974tmcrs                               = 0x002B2FB0; // allow_duplicated:True (Size->32)
// maanim.c .data
model_mode                               = 0x002B2FD0; // (Size->80)    
@1353maanim                              = 0x002B3020; // allow_duplicated:True (Size->16)
@1381maanim                              = 0x002B3030; // allow_duplicated:True (Size->16)
@1401maanim                              = 0x002B3040; // allow_duplicated:True (Size->16)
@1402maanim                              = 0x002B3050; // allow_duplicated:True (Size->16)
@1403maanim                              = 0x002B3060; // allow_duplicated:True (Size->16)
@1404maanim                              = 0x002B3070; // allow_duplicated:True (Size->16)
// ktmot.c .data
vktmotFlipKey_fs_rodeo5                  = 0x002B3080; // (Size->288)   
vktmotFlipKey_backflip                   = 0x002B31A0; // (Size->160)   
vktmotFlipKey_backflip180                = 0x002B3240; // (Size->160)   
vktmotFlipKey_fs_cork5                   = 0x002B32E0; // (Size->288)   
vktmotFlipKey_bs_cork5                   = 0x002B3400; // (Size->288)   
vktmotFlipKey_front_flip180              = 0x002B3520; // (Size->160)   
vktmotFlipKey_front_flip                 = 0x002B35C0; // (Size->160)   
vktmotFlipKey_misty5                     = 0x002B3660; // (Size->288)   
vktmotFlipKey_bs_rodeo                   = 0x002B3780; // (Size->288)   
vktmotFlipKey_fs_rodeo7                  = 0x002B38A0; // (Size->416)   
vktmotFlipKey_bs_rodeo7                  = 0x002B3A40; // (Size->416)   
vktmotFlipKey_fs_rodeo9                  = 0x002B3BE0; // (Size->512)   
vktmotFlipKey_bs_rodeo9                  = 0x002B3DE0; // (Size->512)   
vktmotFlipKey_fs_cork7                   = 0x002B3FE0; // (Size->416)   
vktmotFlipKey_bs_cork7                   = 0x002B4180; // (Size->416)   
vktmotFlipKey_fs_cork9                   = 0x002B4320; // (Size->512)   
vktmotFlipKey_bs_cork9                   = 0x002B4520; // (Size->512)   
vktmotFlipKey_misty7                     = 0x002B4720; // (Size->352)   
vktmotFlipKey_misty9                     = 0x002B4880; // (Size->416)   
vktmotFlipKey_double_flip                = 0x002B4A20; // (Size->288)   
vktmotFlipKey_double_backflip            = 0x002B4B40; // (Size->288)   
vktmotFlipKey_under_flip                 = 0x002B4C60; // (Size->160)   
vktmotFlipKey_superman_flip              = 0x002B4D00; // (Size->160)   
vktmotFlipKey_backflip540                = 0x002B4DA0; // (Size->160)   
vktmotFlipKey                            = 0x002B4E40; // (Size->192)   
vktmotMotSpeed                           = 0x002B4F00; // (Size->320)   
@1275ktmot                               = 0x002B5040; // allow_duplicated:True (Size->16)
@1283ktmot                               = 0x002B5050; // allow_duplicated:True (Size->16)
@1284ktmot                               = 0x002B5060; // allow_duplicated:True (Size->16)
@1344ktmot                               = 0x002B5070; // allow_duplicated:True (Size->24)
@1345ktmot                               = 0x002B5090; // allow_duplicated:True (Size->24)
// ktact.c .data
vktactMinParam                           = 0x002B50B0; // (Size->40)    
vktactCmnParam                           = 0x002B50E0; // (Size->40)    
vktactMaxParam                           = 0x002B5110; // (Size->40)    
vktactPlantTumbleFrame                   = 0x002B5140; // (Size->48)    
vktactMatMaxSpRate                       = 0x002B5170; // (Size->48)    
vktactMatAccelRate                       = 0x002B51A0; // (Size->48)    
vktactMatEdgeAdj                         = 0x002B51D0; // (Size->48)    
vktactMatSideSlip                        = 0x002B5200; // (Size->48)    
vktactMatCrashSpDown                     = 0x002B5230; // (Size->48)    
vktactTTCrashSpDown_normal               = 0x002B5260; // (Size->20)    
vktactTTCrashSpDown_touch                = 0x002B5280; // (Size->20)    
vktactMatTumbleSpeed_normal              = 0x002B5298; // (Size->12)    
vktactMatTumbleAng_normal                = 0x002B52A8; // (Size->12)    
vktactMatTumbleSpeed_touch               = 0x002B52B8; // (Size->12)    
vktactMatRate_touch                      = 0x002B52D0; // (Size->48)    
vktactTrkToMot                           = 0x002B5300; // (Size->216)   
vktactCmdToGrab                          = 0x002B53E0; // (Size->50)    
vktactCmdToFlip                          = 0x002B5420; // (Size->50)    
vktactCmdToGrind                         = 0x002B5460; // (Size->26)    
vktactCmdToBonk                          = 0x002B5480; // (Size->18)    
vktactCmdToPlant                         = 0x002B54A0; // (Size->18)    
vktactCmdToManual                        = 0x002B54C0; // (Size->18)    
vktactSpTrk                              = 0x002B54E0; // (Size->48)    
@334ktact                                = 0x002B5510; // allow_duplicated:True (Size->24)
@461ktact                                = 0x002B5530; // allow_duplicated:True (Size->16)
@462ktact                                = 0x002B5540; // allow_duplicated:True (Size->16)    
@1855ktact                               = 0x002B5550; // allow_duplicated:True (Size->16)
@1856ktact                               = 0x002B5560; // allow_duplicated:True (Size->16)
@1857ktact                               = 0x002B5570; // allow_duplicated:True (Size->16)
@1858ktact                               = 0x002B5580; // allow_duplicated:True (Size->16)
@1859ktact                               = 0x002B5590; // allow_duplicated:True (Size->16)
@2114ktact                               = 0x002B55A0; // allow_duplicated:True (Size->16)
@2309ktact                               = 0x002B55B0; // allow_duplicated:True (Size->16)
@2347ktact                               = 0x002B55C0; // allow_duplicated:True (Size->16)
@2404ktact                               = 0x002B55D0; // allow_duplicated:True (Size->16)
@2409ktact                               = 0x002B55E0; // allow_duplicated:True (Size->16)
@2447ktact                               = 0x002B55F0; // allow_duplicated:True (Size->16)
@2448ktact                               = 0x002B5600; // allow_duplicated:True (Size->16)
@2487ktact                               = 0x002B5610; // allow_duplicated:True (Size->16)
@2580ktact                               = 0x002B5620; // allow_duplicated:True (Size->16)
@3030ktact                               = 0x002B5630; // allow_duplicated:True (Size->16)
@3040ktact                               = 0x002B5640; // allow_duplicated:True (Size->16)
@3172ktact                               = 0x002B5650; // allow_duplicated:True (Size->16)
@4091ktact                               = 0x002B5660; // allow_duplicated:True (Size->16)
@4106ktact                               = 0x002B5670; // allow_duplicated:True (Size->16)
@4356ktact                               = 0x002B5680; // allow_duplicated:True (Size->16)
@4357ktact                               = 0x002B5690; // allow_duplicated:True (Size->16)
@4407ktact                               = 0x002B56A0; // allow_duplicated:True (Size->16)
@4435ktact                               = 0x002B56B0; // allow_duplicated:True (Size->16)
@5314ktact                               = 0x002B56C0; // allow_duplicated:True (Size->16)
@5332ktact                               = 0x002B56D0; // allow_duplicated:True (Size->24)
@5398ktact                               = 0x002B56F0; // allow_duplicated:True (Size->16)
@5448ktact                               = 0x002B5700; // allow_duplicated:True (Size->16)
@5562ktact                               = 0x002B5710; // allow_duplicated:True (Size->40)
@5751ktact                               = 0x002B5740; // allow_duplicated:True (Size->48)
@6096ktact                               = 0x002B5770; // allow_duplicated:True (Size->128)
@6298ktact                               = 0x002B57F0; // allow_duplicated:True (Size->16)
// ktmnufnc.c .data
vktmfMenuText                            = 0x002B5800; // (Size->24)    
vktmfMenuFunc                            = 0x002B5820; // (Size->24)    
vktmfMenuUseNum                          = 0x002B5838; // (Size->12)    
vktmfMenuMinMax                          = 0x002B5850; // (Size->24)    
vktmfdbgMenuMinMax2                      = 0x002B5870; // (Size->16)    
// spinit.c .data
vsptblCharacterName                      = 0x002B5880; //  (Size->48)    
vsptblBoardName                          = 0x002B58B0; //  (Size->336)   
vsptblCourseName                         = 0x002B5A00; //  (Size->96)    
vsptblGapList                            = 0x002B5A60; //  (Size->2048)  
vsptblGapPoint                           = 0x002B6260; //  (Size->2048)  
vsptblLevelGoalValue                     = 0x002B6A60; //  (Size->224)   
vsptblLevelGoalStrE                      = 0x002B6B40; // (Size->96)    
vsptblLevelGoalStrG                      = 0x002B6BA0; // (Size->96)    
vsptblLevelGoalStrF                      = 0x002B6C00; // (Size->96)    
vsptblTrickName                          = 0x002B6C60; //  (Size->640)   
vsptblTrickPoint                         = 0x002B6EE0; //  (Size->640)   
vsptblCharacterParam                     = 0x002B7160; //  (Size->336)   
vsptblBoardParam                         = 0x002B72B0; //  (Size->1344)  
vsptblCourseParam                        = 0x002B77F0; //  (Size->160)   
vsptblCheatsE                            = 0x002B7890; // (Size->40)    
vsptblCheatsG                            = 0x002B78C0; // (Size->40)    
vsptblCheatsF                            = 0x002B78F0; // (Size->40)    
vsptblFreeStyleRanking                   = 0x002B7920; // (Size->1536)  
vsptblBestTime                           = 0x002B7F20; // (Size->32)    
vsptblMovieName                          = 0x002B7F40; //  (Size->60)    
@732                                     = 0x002B7F80; // allow_duplicated:True (Size->48)
// spload.c .data
@100spload                               = 0x002B7FB0; // allow_duplicated:True (Size->12)
@155spload                               = 0x002B7FC0; // allow_duplicated:True (Size->132)
@215spload                               = 0x002B8050; // allow_duplicated:True (Size->72)
@253spload                               = 0x002B80A0; // allow_duplicated:True (Size->288)
@301spload                               = 0x002B81C0; // allow_duplicated:True (Size->48)
@338spload                               = 0x002B81F0; // allow_duplicated:True (Size->240)
@403spload                               = 0x002B82E0; // allow_duplicated:True (Size->48)
@591spload                               = 0x002B8310; // allow_duplicated:True (Size->48)    
@697spload                               = 0x002B8340; // allow_duplicated:True (Size->544)
@871spload                               = 0x002B8560; // allow_duplicated:True (Size->32)
// ktrider.c .data
@162ktrider                              = 0x002B8580; // allow_duplicated:True (Size->16)
@169ktrider                              = 0x002B8590; // allow_duplicated:True (Size->16)    
@1250ktrider                             = 0x002B85A0; // allow_duplicated:True (Size->16)
// tmevent.c .data
@54tmevent                               = 0x002B85B0; // allow_duplicated:True (Size->32)
@55tmevent                               = 0x002B85D0; // allow_duplicated:True (Size->32)
@544tmevent                              = 0x002B85F0; // allow_duplicated:True (Size->416)
// aycomfnk.c .data
vaytblCredit                             = 0x002B8790; //  (Size->62592) 
vayParamMax                              = 0x002C7C10; //  (Size->288)   
@135aycomfnk                             = 0x002C7D30; // allow_duplicated:True (Size->84)
@136aycomfnk                             = 0x002C7D88; // allow_duplicated:True (Size->12)
// aymcard.c .data
@34aymcard                               = 0x002C7DA0; // allow_duplicated:True (Size->24)
@236aymcard                              = 0x002C7DC0; // allow_duplicated:True (Size->36)
@237aymcard                              = 0x002C7DE8; // allow_duplicated:True (Size->12)
@447aymcard                              = 0x002C7E00; // allow_duplicated:True (Size->36)    
@448aymcard                              = 0x002C7E28; // allow_duplicated:True (Size->12)    
@745aymcard                              = 0x002C7E40; // allow_duplicated:True (Size->36)    
@746aymcard                              = 0x002C7E68; // allow_duplicated:True (Size->12)    
@958aymcard                              = 0x002C7E80; // allow_duplicated:True (Size->36)
@959aymcard                              = 0x002C7EA8; // allow_duplicated:True (Size->12)
@1261aymcard                             = 0x002C7EC0; // allow_duplicated:True (Size->72)    
@1331aymcard                             = 0x002C7F10; // allow_duplicated:True (Size->48)
@1499aymcard                             = 0x002C7F40; // allow_duplicated:True (Size->18720)
// aymodsel.c .data
@168aymodsel                             = 0x002CC860; // allow_duplicated:True (Size->128)
@169aymodsel                             = 0x002CC8E0; // allow_duplicated:True (Size->128)   
@445aymodsel                             = 0x002CC960; // allow_duplicated:True (Size->16)    
// aymovie.c .data
@32aymovie                               = 0x002CC970; // allow_duplicated:True (Size->72)
@79aymovie                               = 0x002CC9C0; // allow_duplicated:True (Size->192)
@80aymovie                               = 0x002CCA80; // allow_duplicated:True (Size->12)
@81aymovie                               = 0x002CCA90; // allow_duplicated:True (Size->16)
// aychrsel.c .data
@36aychrsel                              = 0x002CCAA0; // allow_duplicated:True (Size->12)
@341aychrsel                             = 0x002CCAB0; // allow_duplicated:True (Size->16)
@462aychrsel                             = 0x002CCAC0; // allow_duplicated:True (Size->28)    
@463aychrsel                             = 0x002CCAE0; // allow_duplicated:True (Size->16)
@629aychrsel                             = 0x002CCAF0; // allow_duplicated:True (Size->52)
@810aychrsel                             = 0x002CCB30; // allow_duplicated:True (Size->60)
@817aychrsel                             = 0x002CCB70; // allow_duplicated:True (Size->48)
@818aychrsel                             = 0x002CCBA0; // allow_duplicated:True (Size->16)    
@951aychrsel                             = 0x002CCBB0; // allow_duplicated:True (Size->36)
@952aychrsel                             = 0x002CCBE0; // allow_duplicated:True (Size->16)
@998aychrsel                             = 0x002CCBF0; // allow_duplicated:True (Size->48)
@999aychrsel                             = 0x002CCC20; // allow_duplicated:True (Size->32)
@1215aychrsel                            = 0x002CCC40; // allow_duplicated:True (Size->64)
@1216aychrsel                            = 0x002CCC80; // allow_duplicated:True (Size->16)
@1220aychrsel                            = 0x002CCC90; // allow_duplicated:True (Size->28)    
@1221aychrsel                            = 0x002CCCB0; // allow_duplicated:True (Size->48)
@1230aychrsel                            = 0x002CCCE0; // allow_duplicated:True (Size->32)
@1431aychrsel                            = 0x002CCD00; // allow_duplicated:True (Size->36)
@1432aychrsel                            = 0x002CCD30; // allow_duplicated:True (Size->64)
@1433aychrsel                            = 0x002CCD70; // allow_duplicated:True (Size->12)
@1891aychrsel                            = 0x002CCD80; // allow_duplicated:True (Size->120)
// kncamera.c .data
@74kncamera                              = 0x002CCE00; // allow_duplicated:True (Size->16)    
@75kncamera                              = 0x002CCE10; // allow_duplicated:True (Size->16)    
cdd$76                                   = 0x002CCE20; // (Size->16)    
odd$77                                   = 0x002CCE30; // (Size->16)    
@736kncamera                             = 0x002CCE40; // allow_duplicated:True (Size->16)
// ayoption.c .data
vbgmtblMusicayoption                     = 0x002CCE50; // (Size->48)    
vbgmtblArtistayoption                    = 0x002CCE80; // (Size->48)    
@415ayoption                             = 0x002CCEB0; // allow_duplicated:True (Size->72)
@428ayoption                             = 0x002CCF00; // allow_duplicated:True (Size->48)
@775ayoption                             = 0x002CCF30; // allow_duplicated:True (Size->180)
@787ayoption                             = 0x002CCFF0; // allow_duplicated:True (Size->48)
@1095ayoption                            = 0x002CD020; // allow_duplicated:True (Size->24)
@1220ayoption                            = 0x002CD040; // allow_duplicated:True (Size->36)    
@1423ayoption                            = 0x002CD070; // allow_duplicated:True (Size->24)
@1428ayoption                            = 0x002CD090; // allow_duplicated:True (Size->24)
@1586ayoption                            = 0x002CD0B0; // allow_duplicated:True (Size->24)
@1589ayoption                            = 0x002CD0D0; // allow_duplicated:True (Size->36)
@1825ayoption                            = 0x002CD100; // allow_duplicated:True (Size->72)
@1958ayoption                            = 0x002CD148; // allow_duplicated:True (Size->12)
@2031ayoption                            = 0x002CD160; // allow_duplicated:True (Size->16)
@2032ayoption                            = 0x002CD170; // allow_duplicated:True (Size->16)
@2048ayoption                            = 0x002CD180; // allow_duplicated:True (Size->96)
@2050ayoption                            = 0x002CD1E0; // allow_duplicated:True (Size->24)
@2058ayoption                            = 0x002CD200; // allow_duplicated:True (Size->32)
@2065ayoption                            = 0x002CD220; // allow_duplicated:True (Size->48)
// nmbgm.c .data
vnmbgmFileTbl                            = 0x002CD280; // (Size->1792)  
// nmdisp.c .data
vnmtblPauseMenu                          = 0x002CD980; // (Size->120)   
vnmtblPauseFlag                          = 0x002CDA00; // (Size->24)    
vnmtblTlistCate                          = 0x002CDA20; // (Size->108)   
vnmtblTlistNum                           = 0x002CDA90; // (Size->9)     
vnmtblTlistCom                           = 0x002CDAA0; // (Size->688)   
vnmtblTutoItem                           = 0x002CDD50; // (Size->96)    
vnmtblTutoMes                            = 0x002CDDB0; // (Size->1500)  
vnmtblCourseLogo                         = 0x002CE390; // (Size->64)    
vnmtblMatchRule                          = 0x002CE3D0; // (Size->48)    
vnmtblTrickAcce                          = 0x002CE400; //  (Size->84)    
vnmtblLevelCompMes                       = 0x002CE460; // (Size->84)    
vnmtblLevelIncompMes                     = 0x002CE4C0; // (Size->384)   
vnmtblResultItem                         = 0x002CE640; // (Size->36)    
vnmtblGetSoft                            = 0x002CE668; // (Size->9)     
vnmtblCareerItem                         = 0x002CE680; // (Size->408)   
vnmtblCareerMessage                      = 0x002CE820; // (Size->84)    
vnmtblRank                               = 0x002CE880; // (Size->72)    
vnmtblRank2                              = 0x002CE8D0; // (Size->72)    
vnmtblCommon                             = 0x002CE920; // (Size->60)    
vbgmtblMusicnmdisp                       = 0x002CE960; // (Size->48)    
vbgmtblArtistnmdisp                      = 0x002CE990; // (Size->48)    
@554nmdisp                               = 0x002CE9C0; // allow_duplicated:True (Size->12)
@1104nmdisp                              = 0x002CE9D0; // allow_duplicated:True (Size->12)
@1129nmdisp                              = 0x002CE9E0; // allow_duplicated:True (Size->36)
@1343nmdisp                              = 0x002CEA10; // allow_duplicated:True (Size->60)
@1772nmdisp                              = 0x002CEA50; // allow_duplicated:True (Size->12)
@1828nmdisp                              = 0x002CEA60; // allow_duplicated:True (Size->12)
@1890nmdisp                              = 0x002CEA70; // allow_duplicated:True (Size->12)
@1944nmdisp                              = 0x002CEA80; // allow_duplicated:True (Size->12)
@2583nmdisp                              = 0x002CEA90; // allow_duplicated:True (Size->12)
@2617nmdisp                              = 0x002CEAA0; // allow_duplicated:True (Size->36)
@2738nmdisp                              = 0x002CEAC8; // allow_duplicated:True (Size->12)
@2778nmdisp                              = 0x002CEAD8; // allow_duplicated:True (Size->12)
@2803nmdisp                              = 0x002CEAE8; // allow_duplicated:True (Size->12)
@2818nmdisp                              = 0x002CEAF8; // allow_duplicated:True (Size->12)
@2874nmdisp                              = 0x002CEB10; // allow_duplicated:True (Size->108)
@2982nmdisp                              = 0x002CEB80; // allow_duplicated:True (Size->12)
@3057nmdisp                              = 0x002CEB90; // allow_duplicated:True (Size->96)
@3085nmdisp                              = 0x002CEBF0; // allow_duplicated:True (Size->36)
@3109nmdisp                              = 0x002CEC20; // allow_duplicated:True (Size->60)
@3118nmdisp                              = 0x002CEC60; // allow_duplicated:True (Size->48)
@3126nmdisp                              = 0x002CEC90; // allow_duplicated:True (Size->36)
@3254nmdisp                              = 0x002CECB8; // allow_duplicated:True (Size->12)
@3417nmdisp                              = 0x002CECC8; // allow_duplicated:True (Size->12)
@3425nmdisp                              = 0x002CECD8; // allow_duplicated:True (Size->12)
@3436nmdisp                              = 0x002CECE8; // allow_duplicated:True (Size->12)
// nmdraw.c .data
@45nmdraw                                = 0x002CED00; // allow_duplicated:True (Size->20)    
@46nmdraw                                = 0x002CED20; // allow_duplicated:True (Size->20)
@47nmdraw                                = 0x002CED40; // allow_duplicated:True (Size->20)
@74nmdraw                                = 0x002CED60; // allow_duplicated:True (Size->120)   
@137nmdraw                               = 0x002CEDD8; // allow_duplicated:True (Size->12)
@232nmdraw                               = 0x002CEDE8; // allow_duplicated:True (Size->12)
@308nmdraw                               = 0x002CEE00; // allow_duplicated:True (Size->24)
@309nmdraw                               = 0x002CEE20; // allow_duplicated:True (Size->16)
@310nmdraw                               = 0x002CEE30; // allow_duplicated:True (Size->16)
// knreplay.c .data
vknIntro_ChrCamData                      = 0x002CEE40; // (Size->448)   
axis$139                                 = 0x002CF000; // (Size->16)    
length$272                               = 0x002CF010; // (Size->16)    
dis$593                                  = 0x002CF020; // (Size->16)    
@771knreplay                             = 0x002CF030; // allow_duplicated:True (Size->16)
// spev01.c .data
vspev01Lift1Pos                          = 0x002CF040; // (Size->800)   
vspev01Lift2Pos                          = 0x002CF360; // (Size->480)   
vspev01SmokeInfo                         = 0x002CF540; // (Size->1280)  
@65spev01                                = 0x002CFA40; // allow_duplicated:True (Size->64)    
@134spev01                               = 0x002CFA80; // allow_duplicated:True (Size->32)
@268spev01                               = 0x002CFAA0; // allow_duplicated:True (Size->20)
@870spev01                               = 0x002CFAC0; // allow_duplicated:True (Size->88)
@1103spev01                              = 0x002CFB20; // allow_duplicated:True (Size->64)
@1114spev01                              = 0x002CFB60; // allow_duplicated:True (Size->16)
// ktsbcore.c .data
@180ktsbcore                             = 0x002CFB70; // allow_duplicated:True (Size->16)
@362ktsbcore                             = 0x002CFB80; // allow_duplicated:True (Size->32)
@363ktsbcore                             = 0x002CFBA0; // allow_duplicated:True (Size->32)
// aycreate.c .data
@348aycreate                             = 0x002CFBC0; // allow_duplicated:True (Size->12)
@349aycreate                             = 0x002CFBD0; // allow_duplicated:True (Size->12)
@364aycreate                             = 0x002CFBE0; // allow_duplicated:True (Size->60)
@446aycreate                             = 0x002CFC20; // allow_duplicated:True (Size->16)
@447aycreate                             = 0x002CFC30; // allow_duplicated:True (Size->16)    
@448aycreate                             = 0x002CFC40; // allow_duplicated:True (Size->176)   
@449aycreate                             = 0x002CFCF0; // allow_duplicated:True (Size->44)
@487aycreate                             = 0x002CFD20; // allow_duplicated:True (Size->12)
@491aycreate                             = 0x002CFD30; // allow_duplicated:True (Size->36)
@492aycreate                             = 0x002CFD58; // allow_duplicated:True (Size->12)    
@782aycreate                             = 0x002CFD70; // allow_duplicated:True (Size->60)
@849aycreate                             = 0x002CFDB0; // allow_duplicated:True (Size->36)
@858aycreate                             = 0x002CFDE0; // allow_duplicated:True (Size->48)
@859aycreate                             = 0x002CFE10; // allow_duplicated:True (Size->12)
@932aycreate                             = 0x002CFE20; // allow_duplicated:True (Size->11)
@962aycreate                             = 0x002CFE30; // allow_duplicated:True (Size->132)
@995aycreate                             = 0x002CFEC0; // allow_duplicated:True (Size->1320)
@996aycreate                             = 0x002D03E8; // allow_duplicated:True (Size->12)
@1132aycreate                            = 0x002D0400; // allow_duplicated:True (Size->60)
@1234aycreate                            = 0x002D0440; // allow_duplicated:True (Size->32)
@1259aycreate                            = 0x002D0460; // allow_duplicated:True (Size->120)
@1266aycreate                            = 0x002D04E0; // allow_duplicated:True (Size->24)
@1407aycreate                            = 0x002D04F8; // allow_duplicated:True (Size->12)
// akEffect.c .data
@662akEffect                             = 0x002D0510; // allow_duplicated:True (Size->24)
// ayresult.c .data
vaytblEnding                             = 0x002D0530; // (Size->288)   
@492ayresult                             = 0x002D0650; // allow_duplicated:True (Size->96)    
@493ayresult                             = 0x002D06B0; // allow_duplicated:True (Size->32)
@494ayresult                             = 0x002D06D0; // allow_duplicated:True (Size->16)
@637ayresult                             = 0x002D06E0; // allow_duplicated:True (Size->120)
@834ayresult                             = 0x002D0760; // allow_duplicated:True (Size->32)
@880ayresult                             = 0x002D0780; // allow_duplicated:True (Size->72)
@935ayresult                             = 0x002D07D0; // allow_duplicated:True (Size->60)
@945ayresult                             = 0x002D0810; // allow_duplicated:True (Size->36)
@1110ayresult                            = 0x002D0840; // allow_duplicated:True (Size->36)
@1111ayresult                            = 0x002D0870; // allow_duplicated:True (Size->32)
@1188ayresult                            = 0x002D0890; // allow_duplicated:True (Size->36)
@1189ayresult                            = 0x002D08C0; // allow_duplicated:True (Size->32)
@1262ayresult                            = 0x002D08E0; // allow_duplicated:True (Size->24)
@1675ayresult                            = 0x002D08F8; // allow_duplicated:True (Size->12)
@1676ayresult                            = 0x002D0908; // allow_duplicated:True (Size->12)
@1728ayresult                            = 0x002D0920; // allow_duplicated:True (Size->16)
@1729ayresult                            = 0x002D0930; // allow_duplicated:True (Size->16)
@1742ayresult                            = 0x002D0940; // allow_duplicated:True (Size->48)
@1743ayresult                            = 0x002D0970; // allow_duplicated:True (Size->24)
@1900ayresult                            = 0x002D0990; // allow_duplicated:True (Size->48)
@1901ayresult                            = 0x002D09C0; // allow_duplicated:True (Size->32)
@1973ayresult                            = 0x002D09E0; // allow_duplicated:True (Size->12)
@2046ayresult                            = 0x002D09F0; // allow_duplicated:True (Size->36)
@2108ayresult                            = 0x002D0A20; // allow_duplicated:True (Size->72)
// spev04.c .data
vspev04LiftPos                           = 0x002D0A70; // (Size->560)   
vspev04Gond1Pos                          = 0x002D0CA0; // (Size->224)   
vspev04Gond2Pos                          = 0x002D0D80; // (Size->240)   
vspev04SBallPos                          = 0x002D0E70; // (Size->464)   
vspev04RecoverPos                        = 0x002D1040; // (Size->464)   
sp_tbl$151                               = 0x002D1210; // (Size->88)    
crane_no$751                             = 0x002D1270; // (Size->16)    
@798spev04                               = 0x002D1280; // allow_duplicated:True (Size->16)
@814spev04                               = 0x002D1290; // allow_duplicated:True (Size->16)
@815spev04                               = 0x002D12A0; // allow_duplicated:True (Size->16)
@893spev04                               = 0x002D12B0; // allow_duplicated:True (Size->16)
lift_pos$969                             = 0x002D12C0; // (Size->64)    
pos$1034                                 = 0x002D1300; // (Size->96)    
@1754spev04                              = 0x002D1360; // allow_duplicated:True (Size->20)
pos$1755                                 = 0x002D1380; // (Size->80)    
mov$1756                                 = 0x002D13D0; // (Size->80)    
pos$1842                                 = 0x002D1420; // (Size->96)    
// tieffect.c .data
_stq                                     = 0x002D1480; // (Size->32)    
_stqex                                   = 0x002D14A0; // (Size->128)   
c0$localstatic3$tifxdrawspur             = 0x002D1520; // (Region->MULTID) (Type->OBJECT)  (Size->16)    
c1$localstatic4$tifxdrawspur             = 0x002D1530; // (Region->MULTID) (Type->OBJECT)  (Size->16)    
after_x$143                              = 0x002D1540; // (Size->32)    
after_y$144                              = 0x002D1560; // (Size->64)    
after_l$145                              = 0x002D15A0; // (Size->32)    
after_r$146                              = 0x002D15C0; // (Size->32)    
rgba0$275                                = 0x002D15E0; // (Size->16)    
rgba1$276                                = 0x002D15F0; // (Size->16)    
rgba$334                                 = 0x002D1600; // (Size->16)    
c0$415                                   = 0x002D1610; // (Size->16)    
c1$416                                   = 0x002D1620; // (Size->16)    
rgba$482                                 = 0x002D1630; // (Size->16)    
clip1$725                                = 0x002D1640; // (Size->16)    
clip2$726                                = 0x002D1650; // (Size->16)    
uv$727                                   = 0x002D1660; // (Size->32)    
obj$756                                  = 0x002D1680; // (Size->16)    
info$757                                 = 0x002D1690; // (Size->160)   
// spev08.c .data
vspev08TexScrInfo                        = 0x002D1730; // (Size->192)   
vspev08SnowMachinePos                    = 0x002D17F0; // (Size->352)   
vspev08BridgeSmokeInfo                   = 0x002D1950; // (Size->384)   
dir$39                                   = 0x002D1AD0; // (Size->16)    
light$57                                 = 0x002D1AE0; // (Size->80)    
grasscrash$244                           = 0x002D1B30; // (Size->16)    
warppos$346                              = 0x002D1B40; // (Size->48)    
cam$635                                  = 0x002D1B70; // (Size->32)    
grasscrash$636                           = 0x002D1B90; // (Size->16)    
cam$668                                  = 0x002D1BA0; // (Size->32)    
cam$694                                  = 0x002D1BC0; // (Size->32)    
pos$720                                  = 0x002D1BE0; // (Size->992)   
// spev02.c .data
vspev02LiftPos                           = 0x002D1FC0; // (Size->512)   
vspev02Gond1Pos                          = 0x002D21C0; // (Size->112)   
vspev02Gond2Pos                          = 0x002D2230; // (Size->112)   
sp_tbl$104                               = 0x002D22A0; // (Size->88)    
@390spev02                               = 0x002D2300; // allow_duplicated:True (Size->20)
@391spev02                               = 0x002D2320; // allow_duplicated:True (Size->20)
@392spev02                               = 0x002D2340; // allow_duplicated:True (Size->20)
@405spev02                               = 0x002D2360; // allow_duplicated:True (Size->20)
@406spev02                               = 0x002D2380; // allow_duplicated:True (Size->40)
@407spev02                               = 0x002D23B0; // allow_duplicated:True (Size->20)
@408spev02                               = 0x002D23D0; // allow_duplicated:True (Size->20)
lift_pos$630                             = 0x002D23F0; // (Size->48)    
cafe_tbl$683                             = 0x002D2420; // (Size->20)    
@1261spev02                              = 0x002D2440; // allow_duplicated:True (Size->20)    
pos$1262                                 = 0x002D2460; // (Size->80)    
mov$1263                                 = 0x002D24B0; // (Size->80)    
// spev03.c .data
vspev03Mokuzai                           = 0x002D2500; // (Size->192)   
vspev03SnowFall                          = 0x002D25C0; // (Size->192)   
vspev03SnowFall2                         = 0x002D2680; // (Size->192)   
@42spev03                                = 0x002D2740; // allow_duplicated:True (Size->64)
@59spev03                                = 0x002D2780; // allow_duplicated:True (Size->88)
@65spev03                                = 0x002D27E0; // allow_duplicated:True (Size->116)   
@66spev03                                = 0x002D2860; // allow_duplicated:True (Size->64)    
@95spev03                                = 0x002D28A0; // allow_duplicated:True (Size->24)
@96spev03                                = 0x002D28C0; // allow_duplicated:True (Size->24)
@97spev03                                = 0x002D28E0; // allow_duplicated:True (Size->24)
light$119                                = 0x002D2900; // (Size->80)    
@144spev03                               = 0x002D2950; // allow_duplicated:True (Size->64)
@145spev03                               = 0x002D2990; // allow_duplicated:True (Size->16)
@243spev03                               = 0x002D29A0; // allow_duplicated:True (Size->48)
@244spev03                               = 0x002D29D0; // allow_duplicated:True (Size->48)
@259spev03                               = 0x002D2A00; // allow_duplicated:True (Size->16)
@376spev03                               = 0x002D2A10; // allow_duplicated:True (Size->16)
@378spev03                               = 0x002D2A20; // allow_duplicated:True (Size->16)
@439spev03                               = 0x002D2A30; // allow_duplicated:True (Size->16)    
@445spev03                               = 0x002D2A40; // allow_duplicated:True (Size->16)    
@451spev03                               = 0x002D2A50; // allow_duplicated:True (Size->16)    
vspev03LiftStartIdx$545                  = 0x002D2A60; // (Size->64)    
vspev03LiftStartRot$546                  = 0x002D2AA0; // (Size->64)    
@548spev03                               = 0x002D2AE0; // allow_duplicated:True (Size->16)
vspev03LiftList$560                      = 0x002D2AF0; // (Size->1232)  
@562spev03                               = 0x002D2FC0; // allow_duplicated:True (Size->16)
@591spev03                               = 0x002D2FD0; // allow_duplicated:True (Size->16)    
vspev03BunnyList$597                     = 0x002D2FE0; // (Size->208)   
@618spev03                               = 0x002D30B0; // allow_duplicated:True (Size->16)
@653spev03                               = 0x002D30C0; // allow_duplicated:True (Size->16)    
vspev03EagleList$659                     = 0x002D30D0; // (Size->224)   
@737spev03                               = 0x002D31B0; // allow_duplicated:True (Size->12)
@755spev03                               = 0x002D31C0; // allow_duplicated:True (Size->12)
pos_list$932                             = 0x002D31D0; // (Size->28)    
draw_list$933                            = 0x002D31F0; // (Size->28)    
fog_list$934                             = 0x002D3210; // (Size->28)    
// spev06.c .data
vspev06TexScrInfo                        = 0x002D3230; // (Size->96)    
vspev06SteamInfo                         = 0x002D3290; // (Size->192)   
vspev06FountainPos                       = 0x002D3350; // (Size->64)    
vspev06SnowGunPos                        = 0x002D3390; // (Size->128)   
vspev06SnowcatInfo                       = 0x002D3410; // (Size->384)   
vspev06SmokeInfo                         = 0x002D3590; // (Size->384)   
vspev06FireworkAttr                      = 0x002D3710; // (Size->80)    
vspev06FireworkInfo                      = 0x002D3760; // (Size->320)   
vspev06LiftObj                           = 0x002D38A0; // (Size->16)    
vspev06LiftPos0                          = 0x002D38B0; // (Size->144)   
vspev06LiftPos1                          = 0x002D3940; // (Size->144)   
vspev06LiftPos2                          = 0x002D39D0; // (Size->80)    
vspev06LiftPos3                          = 0x002D3A20; // (Size->80)    
vspev06SquawLight                        = 0x002D3A70; // (Size->240)   
light$69                                 = 0x002D3B60; // (Size->80)    
@157spev06                               = 0x002D3BB0; // allow_duplicated:True (Size->48)
crash$310                                = 0x002D3BE0; // (Size->32)    
@431spev06                               = 0x002D3C00; // allow_duplicated:True (Size->16)
se$886                                   = 0x002D3C10; // (Size->96)    
cam$887                                  = 0x002D3C70; // (Size->64)    
pos$945                                  = 0x002D3CB0; // (Size->128)   
@1009spev06                              = 0x002D3D30; // allow_duplicated:True (Size->24)
@1035spev06                              = 0x002D3D50; // allow_duplicated:True (Size->64)
// spev07.c .data
vspev07TexScrInfo                        = 0x002D3D90; // (Size->96)    
spev07Lift1Rail                          = 0x002D3DF0; // (Size->1056)  
spev07Lift2Rail                          = 0x002D4210; // (Size->720)   
spev07Motion                             = 0x002D44E0; // (Size->220)   
spev07RailColl                           = 0x002D45C0; // (Size->208)   
spev07HitObj                             = 0x002D4690; // (Size->500)   
spev07DrawObj                            = 0x002D4890; // (Size->756)   
spev07LiftPos                            = 0x002D4B90; // (Size->48)    
spev07Lift1ID                            = 0x002D4BC0; // (Size->40)    
spev07Lift2ID                            = 0x002D4BF0; // (Size->16)    
spev07Lift1Cell                          = 0x002D4C00; // (Size->40)    
spev07Lift2Cell                          = 0x002D4C30; // (Size->16)    
spev07Agent1                             = 0x002D4C40; // (Size->160)   
spev07Agent2                             = 0x002D4CE0; // (Size->160)   
pos$79                                   = 0x002D4D80; // (Size->16)    
obj$80                                   = 0x002D4D90; // (Size->16)    
info$81                                  = 0x002D4DA0; // (Size->160)   
pos$114                                  = 0x002D4E40; // (Size->16)    
pos$140                                  = 0x002D4E50; // (Size->16)    
info$141                                 = 0x002D4E60; // (Size->160)   
pos$162                                  = 0x002D4F00; // (Size->32)    
trg$163                                  = 0x002D4F20; // (Size->32)    
bus1start$164                            = 0x002D4F40; // (Size->16)    
bus1end$165                              = 0x002D4F50; // (Size->16)    
bus2start$166                            = 0x002D4F60; // (Size->16)    
bus2end$167                              = 0x002D4F70; // (Size->16)    
info1$168                                = 0x002D4F80; // (Size->160)   
info2$169                                = 0x002D5020; // (Size->160)   
info3$170                                = 0x002D50C0; // (Size->160)   
pos$204                                  = 0x002D5160; // (Size->32)    
trg$205                                  = 0x002D5180; // (Size->32)    
viewstart$207                            = 0x002D51A0; // (Size->16)    
viewend$208                              = 0x002D51B0; // (Size->16)    
tower1start$209                          = 0x002D51C0; // (Size->16)    
tower1end$210                            = 0x002D51D0; // (Size->16)    
tower2start$211                          = 0x002D51E0; // (Size->16)    
tower2end$212                            = 0x002D51F0; // (Size->16)    
info$213                                 = 0x002D5200; // (Size->160)   
info2$214                                = 0x002D52A0; // (Size->160)   
info3$215                                = 0x002D5340; // (Size->128)   
sl_pos$216                               = 0x002D53C0; // (Size->64)    
sl_obj$217                               = 0x002D5400; // (Size->16)    
@230spev07                               = 0x002D5410; // allow_duplicated:True (Size->16)
@231spev07                               = 0x002D5420; // allow_duplicated:True (Size->16)
pos$266                                  = 0x002D5430; // (Size->48)    
trg$267                                  = 0x002D5460; // (Size->48)    
ava1start$268                            = 0x002D5490; // (Size->16)    
ava1end$269                              = 0x002D54A0; // (Size->16)    
ava2start$270                            = 0x002D54B0; // (Size->16)    
ava2end$271                              = 0x002D54C0; // (Size->16)    
ava3start$272                            = 0x002D54D0; // (Size->16)    
ava3end$273                              = 0x002D54E0; // (Size->16)    
ava4start$274                            = 0x002D54F0; // (Size->16)    
ava4end$275                              = 0x002D5500; // (Size->16)    
info$280                                 = 0x002D5510; // (Size->160)   
llpos$281                                = 0x002D55B0; // (Size->32)    
llobj$282                                = 0x002D55D0; // (Size->16)    
@295spev07                               = 0x002D55E0; // allow_duplicated:True (Size->16)
@296spev07                               = 0x002D55F0; // allow_duplicated:True (Size->16)
pos$329                                  = 0x002D5600; // (Size->16)    
trg$330                                  = 0x002D5610; // (Size->16)    
mapstart$331                             = 0x002D5620; // (Size->16)    
mapend$332                               = 0x002D5630; // (Size->16)    
info$333                                 = 0x002D5640; // (Size->160)   
info2$334                                = 0x002D56E0; // (Size->128)   
info1$443                                = 0x002D5760; // (Size->160)   
info2$444                                = 0x002D5800; // (Size->160)   
info3$445                                = 0x002D58A0; // (Size->160)   
info4$446                                = 0x002D5940; // (Size->160)   
pos$457                                  = 0x002D59E0; // (Size->16)    
info1$458                                = 0x002D59F0; // (Size->160)   
info2$459                                = 0x002D5A90; // (Size->160)   
info$498                                 = 0x002D5B30; // (Size->160)   
@556spev07                               = 0x002D5BD0; // allow_duplicated:True (Size->16)
snowcat$571                              = 0x002D5BE0; // (Size->16)    
lasther$572                              = 0x002D5BF0; // (Size->16)    
liftexp$573                              = 0x002D5C00; // (Size->16)    
snowmob$574                              = 0x002D5C10; // (Size->16)    
spev07BonkDram1$939                      = 0x002D5C20; // (Size->20)    
spev07BonkDram2$940                      = 0x002D5C40; // (Size->20)    
@1024spev07                              = 0x002D5C60; // allow_duplicated:True (Size->192)
@1038spev07                              = 0x002D5D20; // allow_duplicated:True (Size->88)
@1039spev07                              = 0x002D5D80; // allow_duplicated:True (Size->80)
// spev05.c .data
vspev05SnowFall                          = 0x002D5DD0; // (Size->192)   
vspev05SnowFall2                         = 0x002D5E90; // (Size->192)   
vspev05SnowFallB                         = 0x002D5F50; // (Size->192)   
vspev05SnowCat                           = 0x002D6010; // (Size->192)   
vspev05SmokeInfo                         = 0x002D60D0; // (Size->160)   
@45spev05                                = 0x002D6170; // allow_duplicated:True (Size->128)   
@51spev05                                = 0x002D61F0; // allow_duplicated:True (Size->72)
@52spev05                                = 0x002D6240; // allow_duplicated:True (Size->168)
@63spev05                                = 0x002D62F0; // allow_duplicated:True (Size->16)
@64spev05                                = 0x002D6300; // allow_duplicated:True (Size->16)
@65spev05                                = 0x002D6310; // allow_duplicated:True (Size->16)    
@66spev05                                = 0x002D6320; // allow_duplicated:True (Size->16)    
@67spev05                                = 0x002D6330; // allow_duplicated:True (Size->28)
@68spev05                                = 0x002D6350; // allow_duplicated:True (Size->28)
@69spev05                                = 0x002D6370; // allow_duplicated:True (Size->28)
@75spev05                                = 0x002D6390; // allow_duplicated:True (Size->16)    
@91spev05                                = 0x002D63A0; // allow_duplicated:True (Size->16)
@92spev05                                = 0x002D63B0; // allow_duplicated:True (Size->108)
@93spev05                                = 0x002D6420; // allow_duplicated:True (Size->76)
@114spev05                               = 0x002D6470; // allow_duplicated:True (Size->88)
light$128                                = 0x002D64D0; // (Size->80)    
@175spev05                               = 0x002D6520; // allow_duplicated:True (Size->64)
@262spev05                               = 0x002D6560; // allow_duplicated:True // (Size->64)    
vspev05LiftList$353                      = 0x002D65A0; // (Size->736)   
@355spev05                               = 0x002D6880; // allow_duplicated:True (Size->16)
@412spev05                               = 0x002D6890; // allow_duplicated:True (Size->16)
@439spev05                               = 0x002D68A0; // allow_duplicated:True (Size->16)    
@471spev05                               = 0x002D68B0; // allow_duplicated:True (Size->16)
@472spev05                               = 0x002D68C0; // allow_duplicated:True (Size->16)
@480spev05                               = 0x002D68D0; // allow_duplicated:True (Size->16)
@498spev05                               = 0x002D68E0; // allow_duplicated:True (Size->16)
@652spev05                               = 0x002D68F0; // allow_duplicated:True (Size->24)    
@653spev05                               = 0x002D6910; // allow_duplicated:True (Size->24)    
@674spev05                               = 0x002D6928; // allow_duplicated:True (Size->12)
@709spev05                               = 0x002D6940; // allow_duplicated:True (Size->16)
@719spev05                               = 0x002D6950; // allow_duplicated:True (Size->16)
@776spev05                               = 0x002D6960; // allow_duplicated:True (Size->16)
@792spev05                               = 0x002D6970; // allow_duplicated:True (Size->16)
@793spev05                               = 0x002D6980; // allow_duplicated:True (Size->16)
@803spev05                               = 0x002D6990; // allow_duplicated:True (Size->16)
@818spev05                               = 0x002D69A0; // allow_duplicated:True (Size->16)    
@819spev05                               = 0x002D69B0; // allow_duplicated:True (Size->16)
@829spev05                               = 0x002D69C0; // allow_duplicated:True (Size->16)
@896spev05                               = 0x002D69D0; // allow_duplicated:True (Size->16)
vspev05SnowMobileList$903                = 0x002D69E0; // (Size->144)   
vspev05SnowMobileListFrame$906           = 0x002D6A70; // (Size->36)    
@908spev05                               = 0x002D6AA0; // allow_duplicated:True (Size->16)
@925spev05                               = 0x002D6AB0; // allow_duplicated:True (Size->16)
@926spev05                               = 0x002D6AC0; // allow_duplicated:True (Size->16)
@939spev05                               = 0x002D6AD0; // allow_duplicated:True (Size->16)
@940spev05                               = 0x002D6AE0; // allow_duplicated:True (Size->16)
@1008spev05                              = 0x002D6AF0; // allow_duplicated:True (Size->16)
@1011spev05                              = 0x002D6B00; // allow_duplicated:True (Size->16)
@1034spev05                              = 0x002D6B10; // allow_duplicated:True (Size->16)
@1042spev05                              = 0x002D6B20; // allow_duplicated:True (Size->16)
@1063spev05                              = 0x002D6B30; // allow_duplicated:True (Size->12)
@1081spev05                              = 0x002D6B40; // allow_duplicated:True (Size->12)
// kncore.c .data
@431kncore                               = 0x002D6B50; // allow_duplicated:True (Size->16)
@443kncore                               = 0x002D6B60; // allow_duplicated:True (Size->16)
// akEvEfct.c .data
@335akEvEfct                             = 0x002D6B70; // allow_duplicated:True (Size->32)
mov$381                                  = 0x002D6B90; // (Size->16)    
nor$382                                  = 0x002D6BA0; // (Size->16)    
// akSelEff.c .data
@27akSelEff                              = 0x002D6BB0; // allow_duplicated:True (Size->32)
// akshadow.c .data
shadow                                   = 0x002D6BD0; // (Size->288)   
@67akshadow                              = 0x002D6CF0; // allow_duplicated:True (Size->16)
@68akshadow                              = 0x002D6D00; // allow_duplicated:True (Size->64)
// tiutill.c .data
_randtbl                                 = 0x002D6D40; // (Size->400)   
// tievent.c .data
c0$65                                    = 0x002D6ED0; // (Size->16)    
c1$66                                    = 0x002D6EE0; // (Size->16)    
uv$68                                    = 0x002D6EF0; // (Size->32)    
info$130                                 = 0x002D6F10; // (Size->80)    
clip1$131                                = 0x002D6F60; // (Size->16)    
clip2$132                                = 0x002D6F70; // (Size->16)    
uv$133                                   = 0x002D6F80; // (Size->32)    
clip1$200                                = 0x002D6FA0; // (Size->16)    
clip2$201                                = 0x002D6FB0; // (Size->16)    
uv$202                                   = 0x002D6FC0; // (Size->32)    
@251tievent                              = 0x002D6FE0; // allow_duplicated:True (Size->16)
clip1$281                                = 0x002D6FF0; // (Size->16)    
clip2$282                                = 0x002D7000; // (Size->16)    
rgba$283                                 = 0x002D7010; // (Size->16)    
clip1$372                                = 0x002D7020; // (Size->16)    
clip2$373                                = 0x002D7030; // (Size->16)    
rgb1$374                                 = 0x002D7040; // (Size->16)    
rgb2$375                                 = 0x002D7050; // (Size->16)    
rgba$457                                 = 0x002D7060; // (Size->16)    
size$458                                 = 0x002D7070; // (Size->16)    
gravity$459                              = 0x002D7080; // (Size->16)    
clip1$559                                = 0x002D7090; // (Size->16)    
clip2$560                                = 0x002D70A0; // (Size->16)    
uv$561                                   = 0x002D70B0; // (Size->32)    
rgb1$562                                 = 0x002D70D0; // (Size->16)    
rgb2$563                                 = 0x002D70E0; // (Size->16)    
info$598                                 = 0x002D70F0; // (Size->160)   
// end of game .c. file .data
//__ps2_libinfo__                          = 0x002D7190; // (Size->16)    
//.data                                    = 0x002D7190; // (Region->LOCAL)  (Type->SECTION)
gConfig                                  = 0x002D71A0; // (Size->8)     
gRomName                                 = 0x002D71A8; // (Size->15)    
//.rodata                                  = 0x002D7200; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D7238; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D7268; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D7400; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D7520; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D7560; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D7730; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D7748; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D7758; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D7768; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D7A00; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D7A18; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D7A50; // (Region->LOCAL)  (Type->SECTION)
////.rodata                                  = 0x002D7AF8; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D7C40; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D7C68; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D7CE0; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D7E40; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D7EB0; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D7EC0; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D7EF0; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D8048; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D81F8; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D8220; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D8230; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D8270; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D8390; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D83F8; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D8420; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D8440; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D8458; // (Region->LOCAL)  (Type->SECTION)
tiny                                     = 0x002D8458; // (Size->8)     
zero                                     = 0x002D8460; // (Size->8)     
pi_o_4                                   = 0x002D8468; // (Size->8)     
pi_o_2                                   = 0x002D8470; // (Size->8)     
pi                                       = 0x002D8478; // (Size->8)     
pi_lo                                    = 0x002D8480; // (Size->8)     
//.rodata                                  = 0x002D8508; // (Region->LOCAL)  (Type->SECTION)
//tiny                                     = 0x002D8508; // (Size->4)     
//zero                                     = 0x002D850C; // (Size->4)     
//pi_o_4                                   = 0x002D8510; // (Size->4)     
//pi_o_2                                   = 0x002D8514; // (Size->4)     
//pi                                       = 0x002D8518; // (Size->4)     
//pi_lo                                    = 0x002D851C; // (Size->4)     
two_over_pi                              = 0x002D8528; // (Size->792)   
//.rodata                                  = 0x002D8528; // (Region->LOCAL)  (Type->SECTION)
npio2_hw                                 = 0x002D8840; // (Size->128)   
//zero                                     = 0x002D88C0; // (Size->4)     
half                                     = 0x002D88C4; // (Size->4)     
two8                                     = 0x002D88C8; // (Size->4)     
invpio2                                  = 0x002D88CC; // (Size->4)     
pio2_1                                   = 0x002D88D0; // (Size->4)     
pio2_1t                                  = 0x002D88D4; // (Size->4)     
pio2_2                                   = 0x002D88D8; // (Size->4)     
pio2_2t                                  = 0x002D88DC; // (Size->4)     
pio2_3                                   = 0x002D88E0; // (Size->4)     
pio2_3t                                  = 0x002D88E4; // (Size->4)     
//.rodata                                  = 0x002D88E8; // (Region->LOCAL)  (Type->SECTION)
init_jk                                  = 0x002D88E8; // (Size->12)    
PIo2                                     = 0x002D88F8; // (Size->44)    
//zero                                     = 0x002D8924; // (Size->4)     
one                                      = 0x002D8928; // (Size->4)     
//two8                                     = 0x002D892C; // (Size->4)     
twon8                                    = 0x002D8930; // (Size->4)     
//one                                      = 0x002D8938; // (Size->4)     
//.rodata                                  = 0x002D8938; // (Region->LOCAL)  (Type->SECTION)
pio4                                     = 0x002D893C; // (Size->4)     
pio4lo                                   = 0x002D8940; // (Size->4)     
T                                        = 0x002D8948; // (Size->52)    
//.rodata                                  = 0x002D8980; // (Region->LOCAL)  (Type->SECTION)
atanhi                                   = 0x002D8980; // (Size->32)    
atanlo                                   = 0x002D89A0; // (Size->32)    
aT                                       = 0x002D89C0; // (Size->88)    
//one                                      = 0x002D8A18; // (Size->8)     
huge                                     = 0x002D8A20; // (Size->8)     
//.rodata                                  = 0x002D8A30; // (Region->LOCAL)  (Type->SECTION)
__fdlib_version                          = 0x002D8A30; //  (Size->4)     
//.rodata                                  = 0x002D8A38; // (Region->LOCAL)  (Type->SECTION)
//atanhi                                   = 0x002D8A38; // (Size->16)    
//atanlo                                   = 0x002D8A48; // (Size->16)    
//aT                                       = 0x002D8A58; // (Size->44)    
//one                                      = 0x002D8A84; // (Size->4)     
//huge                                     = 0x002D8A88; // (Size->4)     
//.rodata                                  = 0x002D8A90; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D8A98; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D8AA0; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D8AA8; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D8AB8; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D8AF0; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D8B48; // (Region->LOCAL)  (Type->SECTION)
//.rodata                                  = 0x002D8B50; // (Region->LOCAL)  (Type->SECTION)
lconv                                    = 0x002D8B50; // (Size->48)    
p05.27                                   = 0x002D8B98; // (Size->12)    
//.rodata                                  = 0x002D8B98; // (Region->LOCAL)  (Type->SECTION)
__mprec_tens                             = 0x002D8BA8; //  (Size->200)   
__mprec_bigtens                          = 0x002D8C70; //  (Size->40)    
__mprec_tinytens                         = 0x002D8C98; //  (Size->40)    
//.rodata                                  = 0x002D8CC0; // (Region->LOCAL)  (Type->SECTION)
blanks.12                                = 0x002D8CC0; // (Size->16)    
zeroes.13                                = 0x002D8CD0; // (Size->16)    
//.rodata                                  = 0x002D8EB0; // (Region->LOCAL)  (Type->SECTION)
//blanks.12                                = 0x002D8EB0; // (Size->16)    
//zeroes.13                                = 0x002D8EC0; // (Size->16)    
__clz_tab                                = 0x002D90B8; // (Size->256)   
//.rodata                                  = 0x002D90B8; // (Region->LOCAL)  (Type->SECTION)
//__clz_tab                                = 0x002D91B8; // (Size->256)   
//.rodata                                  = 0x002D91B8; // (Region->LOCAL)  (Type->SECTION)
//__clz_tab                                = 0x002D92B8; // (Size->256)   
//.rodata                                  = 0x002D92B8; // (Region->LOCAL)  (Type->SECTION)
//__clz_tab                                = 0x002D93B8; // (Size->256)   
//.rodata                                  = 0x002D93B8; // (Region->LOCAL)  (Type->SECTION)
// Main.c .rodata
@62main                                  = 0x002D94C0; // allow_duplicated:True (Size->25)
@63main                                  = 0x002D94E0; // allow_duplicated:True (Size->22)
@141main                                 = 0x002D9500; // allow_duplicated:True (Size->21)
@142main                                 = 0x002D9518; // allow_duplicated:True (Size->13)
@143main                                 = 0x002D9530; // allow_duplicated:True (Size->30)
@144main                                 = 0x002D9550; // allow_duplicated:True (Size->29)
@145main                                 = 0x002D9570; // allow_duplicated:True (Size->28)
@146main                                 = 0x002D9590; // allow_duplicated:True (Size->29)
@147main                                 = 0x002D95B0; // allow_duplicated:True (Size->28)
@148main                                 = 0x002D95D0; // allow_duplicated:True (Size->29)
@149main                                 = 0x002D95F0; // allow_duplicated:True (Size->30)
@150main                                 = 0x002D9610; // allow_duplicated:True (Size->30)
@151main                                 = 0x002D9630; // allow_duplicated:True (Size->30)
@152main                                 = 0x002D9650; // allow_duplicated:True main.c string rodata
// cdvd.c .rodata
@104cdvd                                 = 0x002D9670; // allow_duplicated:True (Size->5)
// heap.c .rodata
@33heap                                  = 0x002D9680; // allow_duplicated:True (Size->29)
@34heap                                  = 0x002D96A0; // allow_duplicated:True (Size->20)
@35heap                                  = 0x002D96C0; // allow_duplicated:True (Size->20)
@79heap                                  = 0x002D96E0; // allow_duplicated:True (Size->24)
@80heap                                  = 0x002D96F8; // allow_duplicated:True (Size->12)
@81heap                                  = 0x002D9708; // allow_duplicated:True (Size->13)
@82heap                                  = 0x002D9718; // allow_duplicated:True (Size->13)
@83heap                                  = 0x002D9730; // allow_duplicated:True (Size->17)
@84heap                                  = 0x002D9748; // allow_duplicated:True (Size->15)
@85heap                                  = 0x002D9760; // allow_duplicated:True (Size->41)
@86heap                                  = 0x002D9790; // allow_duplicated:True (Size->26)
// mcard.c .rodata
@132mcard                                = 0x002D97B0; // allow_duplicated:True (Size->3)
@181mcard                                = 0x002D97C0; // allow_duplicated:True (Size->40)
@282mcard                                = 0x002D97E8; // allow_duplicated:True (Size->2)
// sprintf.c .rodata
fmultable                                = 0x002D97F0; // (Size->64)    
@56sprintf                               = 0x002D9830; // allow_duplicated:True (Size->17)
@57sprintf                               = 0x002D9850; // allow_duplicated:True (Size->17)
@124sprintf                              = 0x002D9868; // allow_duplicated:True (Size->7)
// system.c .rodata
vulsysScrArea                            = 0x002D9870; // (Size->40)    
@18system                                = 0x002D98A0; // allow_duplicated:True (Size->23)
@19system                                = 0x002D98C0; // allow_duplicated:True (Size->26)
@20system                                = 0x002D98E0; // allow_duplicated:True (Size->26)
@21system                                = 0x002D9900; // allow_duplicated:True (Size->26)
@22system                                = 0x002D9920; // allow_duplicated:True (Size->26)
// mv2ext.c .rodata
@24mv2ext                                = 0x002D9940; // allow_duplicated:True (Size->37)
@25mv2ext                                = 0x002D9970; // allow_duplicated:True (Size->42)
@323mv2ext                               = 0x002D99A0; // allow_duplicated:True (Size->21)
@390mv2ext                               = 0x002D99B8; // allow_duplicated:True (Size->6)
@391mv2ext                               = 0x002D99C0; // allow_duplicated:True (Size->33)
@392mv2ext                               = 0x002D99F0; // allow_duplicated:True (Size->44)
@411mv2ext                               = 0x002D9A20; // allow_duplicated:True (Size->30)
@483mv2ext                               = 0x002D9A40; // allow_duplicated:True (Size->20)
@575mv2ext                               = 0x002D9A60; // allow_duplicated:True (Size->17)
@700mv2ext                               = 0x002D9A80; // allow_duplicated:True (Size->24)
@701mv2ext                               = 0x002D9AA0; // allow_duplicated:True (Size->34)
@706mv2ext                               = 0x002D9AC8; // allow_duplicated:True (Size->4)
// movie2.c .rodata
@52movie2                                = 0x002D9AD0; // allow_duplicated:True (Size->29)
// graph2.c .rodata
@33graph2                                = 0x002D9AF0; // allow_duplicated:True (Size->30)
@34graph2                                = 0x002D9B10; // allow_duplicated:True (Size->29)
@35graph2                                = 0x002D9B30; // allow_duplicated:True (Size->32)
// mdlprTon.c .rodata
rgba                                     = 0x002D9B50; // (Size->16)    
// vumodel.c .rodata
_Constant                                = 0x002D9B60; // (Size->32)    
// tmcrs.c .rodata
alpha_tbl$336                            = 0x002D9B80; // (Size->56)    
@1681                                    = 0x002D9BB8; // allow_duplicated:True (Size->7)
alpha_tbl$1857                           = 0x002D9BC0; // (Size->56)    
alpha_tbl$1871                           = 0x002D9C00; // (Size->56)    
alpha_tbl$1897                           = 0x002D9C40; // (Size->56)    
// maanim.c .rodata
@797                                     = 0x002D9C80; // allow_duplicated:True (Size->24)
// ktmot.c .rodata
@1226                                    = 0x002D9CA0; // allow_duplicated:True (Size->300)
@1225                                    = 0x002D9DD0; // allow_duplicated:True (Size->864)
@1224                                    = 0x002DA130; // allow_duplicated:True (Size->36)
@1519                                    = 0x002DA160; // allow_duplicated:True (Size->128)
// ktact.c .rodata
@377ktact                                = 0x002DA1E0; // allow_duplicated:True (Size->96)
@997ktact                                = 0x002DA240; // allow_duplicated:True (Size->28)
@1533ktact                               = 0x002DA260; // allow_duplicated:True (Size->32)
@1532ktact                               = 0x002DA280; // allow_duplicated:True (Size->36)
@1973ktact                               = 0x002DA2B0; // allow_duplicated:True (Size->44)
@1972ktact                               = 0x002DA2E0; // allow_duplicated:True (Size->36)
@2500ktact                               = 0x002DA310; // allow_duplicated:True (Size->56)
@3791ktact                               = 0x002DA350; // allow_duplicated:True (Size->36)
@4022ktact                               = 0x002DA380; // allow_duplicated:True (Size->36)
@4021ktact                               = 0x002DA3B0; // allow_duplicated:True (Size->36)
@5408ktact                               = 0x002DA3E0; // allow_duplicated:True (Size->108)
@5728ktact                               = 0x002DA450; // allow_duplicated:True (Size->36)
normal$406ktact                          = 0x002DA480; // (Size->256)   
g_normal$407ktact                        = 0x002DA580; // (Size->256)   
f_normal$408ktact                        = 0x002DA680; // (Size->256)   
arrange$409ktact                         = 0x002DA780; // (Size->256)   
g_arrange$410ktact                       = 0x002DA880; // (Size->256)   
f_arrange$411ktact                       = 0x002DA980; // (Size->256)   
// ktmnufnc.c .rodata
@36ktmnufnc                              = 0x002DAA80; // allow_duplicated:True (Size->9)
@37ktmnufnc                              = 0x002DAA90; // allow_duplicated:True (Size->8)
@38ktmnufnc                              = 0x002DAA98; // allow_duplicated:True (Size->5)
@39ktmnufnc                              = 0x002DAAA0; // allow_duplicated:True (Size->7)
@40ktmnufnc                              = 0x002DAAA8; // allow_duplicated:True (Size->7)
@41ktmnufnc                              = 0x002DAAB0; // allow_duplicated:True (Size->3)
@42ktmnufnc                              = 0x002DAAB8; // allow_duplicated:True (Size->3)
@43ktmnufnc                              = 0x002DAAC0; // allow_duplicated:True (Size->4)
// spinit.c .rodata
@11spinit                                = 0x002DAAC8; // allow_duplicated:True (Size->13)
@12spinit                                = 0x002DAAD8; // allow_duplicated:True (Size->15)
@13spinit                                = 0x002DAAE8; // allow_duplicated:True (Size->15)
@14spinit                                = 0x002DAAF8; // allow_duplicated:True (Size->12)
@15spinit                                = 0x002DAB08; // allow_duplicated:True (Size->13)
@16spinit                                = 0x002DAB18; // allow_duplicated:True (Size->13)
@17spinit                                = 0x002DAB28; // allow_duplicated:True (Size->12)
@18spinit                                = 0x002DAB38; // allow_duplicated:True (Size->13)
@19spinit                                = 0x002DAB50; // allow_duplicated:True (Size->16)
@20spinit                                = 0x002DAB60; // allow_duplicated:True (Size->13)
@21spinit                                = 0x002DAB70; // allow_duplicated:True (Size->8)
@22spinit                                = 0x002DAB78; // allow_duplicated:True (Size->14)
@23spinit                                = 0x002DAB88; // allow_duplicated:True (Size->14)
@24spinit                                = 0x002DABA0; // allow_duplicated:True (Size->17)
@25spinit                                = 0x002DABB8; // allow_duplicated:True (Size->10)
@26spinit                                = 0x002DABC8; // allow_duplicated:True (Size->12)
@27spinit                                = 0x002DABD8; // allow_duplicated:True (Size->8)
@28spinit                                = 0x002DABE0; // allow_duplicated:True (Size->4)
@29spinit                                = 0x002DABE8; // allow_duplicated:True (Size->6)
@30spinit                                = 0x002DABF0; // allow_duplicated:True (Size->15)
@31spinit                                = 0x002DAC00; // allow_duplicated:True (Size->10)
@32spinit                                = 0x002DAC10; // allow_duplicated:True (Size->14)
@33spinit                                = 0x002DAC20; // allow_duplicated:True (Size->8)
@34spinit                                = 0x002DAC28; // allow_duplicated:True (Size->9)
@35spinit                                = 0x002DAC38; // allow_duplicated:True (Size->10)
@36spinit                                = 0x002DAC48; // allow_duplicated:True (Size->12)
@37spinit                                = 0x002DAC58; // allow_duplicated:True (Size->12)
@38spinit                                = 0x002DAC68; // allow_duplicated:True (Size->11)
@39spinit                                = 0x002DAC78; // allow_duplicated:True (Size->11)
@40spinit                                = 0x002DAC88; // allow_duplicated:True (Size->11)
@41spinit                                = 0x002DAC98; // allow_duplicated:True (Size->11)
@42spinit                                = 0x002DACA8; // allow_duplicated:True (Size->9)
@43spinit                                = 0x002DACB8; // allow_duplicated:True (Size->10)
@44spinit                                = 0x002DACC8; // allow_duplicated:True (Size->10)
@45spinit                                = 0x002DACD8; // allow_duplicated:True (Size->10)    
@46spinit                                = 0x002DACE8; // allow_duplicated:True (Size->11)
@47spinit                                = 0x002DACF8; // allow_duplicated:True (Size->11)
@48spinit                                = 0x002DAD08; // allow_duplicated:True (Size->13)
@49spinit                                = 0x002DAD18; // allow_duplicated:True (Size->12)
@50spinit                                = 0x002DAD30; // allow_duplicated:True (Size->18)
@51spinit                                = 0x002DAD48; // allow_duplicated:True (Size->15)
@52spinit                                = 0x002DAD58; // allow_duplicated:True (Size->10)
@53spinit                                = 0x002DAD68; // allow_duplicated:True (Size->6)
@54spinit                                = 0x002DAD70; // allow_duplicated:True (Size->13)
@55spinit                                = 0x002DAD80; // allow_duplicated:True (Size->12)
@56spinit                                = 0x002DAD90; // allow_duplicated:True (Size->10)
@57spinit                                = 0x002DADA0; // allow_duplicated:True (Size->10)
@58spinit                                = 0x002DADB0; // allow_duplicated:True (Size->6)
@59spinit                                = 0x002DADB8; // allow_duplicated:True (Size->6)
@60spinit                                = 0x002DADC0; // allow_duplicated:True (Size->10)
@61spinit                                = 0x002DADD0; // allow_duplicated:True (Size->13)
@62spinit                                = 0x002DADE0; // allow_duplicated:True (Size->11)
@63spinit                                = 0x002DADF0; // allow_duplicated:True (Size->10)
@64spinit                                = 0x002DAE00; // allow_duplicated:True (Size->10)
@65spinit                                = 0x002DAE10; // allow_duplicated:True (Size->11)    
@66spinit                                = 0x002DAE20; // allow_duplicated:True (Size->11)    
@67spinit                                = 0x002DAE30; // allow_duplicated:True (Size->11)
@68spinit                                = 0x002DAE40; // allow_duplicated:True (Size->12)
@69spinit                                = 0x002DAE50; // allow_duplicated:True (Size->12)
@70spinit                                = 0x002DAE60; // allow_duplicated:True (Size->12)
@71spinit                                = 0x002DAE70; // allow_duplicated:True (Size->16)
@72spinit                                = 0x002DAE80; // allow_duplicated:True (Size->16)
@73spinit                                = 0x002DAE90; // allow_duplicated:True (Size->12)
@74spinit                                = 0x002DAEA0; // allow_duplicated:True (Size->16)    
@75spinit                                = 0x002DAEB0; // allow_duplicated:True (Size->16)    
@76spinit                                = 0x002DAEC0; // allow_duplicated:True (Size->16)
@77spinit                                = 0x002DAED0; // allow_duplicated:True (Size->13)
@78spinit                                = 0x002DAEE0; // allow_duplicated:True (Size->12)
@79spinit                                = 0x002DAEF0; // allow_duplicated:True (Size->9)
@80spinit                                = 0x002DAF00; // allow_duplicated:True (Size->11)
@81spinit                                = 0x002DAF10; // allow_duplicated:True (Size->14)
@82spinit                                = 0x002DAF20; // allow_duplicated:True (Size->13)
@83spinit                                = 0x002DAF30; // allow_duplicated:True (Size->9)
@84spinit                                = 0x002DAF40; // allow_duplicated:True (Size->5)
@85spinit                                = 0x002DAF48; // allow_duplicated:True (Size->5)
@86spinit                                = 0x002DAF50; // allow_duplicated:True (Size->7)
@87spinit                                = 0x002DAF58; // allow_duplicated:True (Size->7)
@88spinit                                = 0x002DAF60; // allow_duplicated:True (Size->9)
@89spinit                                = 0x002DAF70; // allow_duplicated:True (Size->7)
@90spinit                                = 0x002DAF78; // allow_duplicated:True (Size->6)
@91spinit                                = 0x002DAF80; // allow_duplicated:True (Size->5)
@92spinit                                = 0x002DAF88; // allow_duplicated:True (Size->9)
@93spinit                                = 0x002DAF98; // allow_duplicated:True (Size->10)
@94spinit                                = 0x002DAFA8; // allow_duplicated:True (Size->5)
@95spinit                                = 0x002DAFB0; // allow_duplicated:True (Size->17)
@96spinit                                = 0x002DAFC8; // allow_duplicated:True (Size->6)
@97spinit                                = 0x002DAFD0; // allow_duplicated:True (Size->9)
@98spinit                                = 0x002DAFE0; // allow_duplicated:True (Size->9)
@99spinit                                = 0x002DAFF0; // allow_duplicated:True (Size->9)
@100spinit                               = 0x002DB000; // allow_duplicated:True (Size->13)
@101spinit                               = 0x002DB010; // allow_duplicated:True (Size->17)
@102spinit                               = 0x002DB028; // allow_duplicated:True (Size->15)
@103spinit                               = 0x002DB040; // allow_duplicated:True (Size->17)
@104spinit                               = 0x002DB060; // allow_duplicated:True (Size->25)
@105spinit                               = 0x002DB080; // allow_duplicated:True (Size->20)
@106spinit                               = 0x002DB0A0; // allow_duplicated:True (Size->24)
@107spinit                               = 0x002DB0C0; // allow_duplicated:True (Size->30)
@108spinit                               = 0x002DB0E0; // allow_duplicated:True (Size->7)
@109spinit                               = 0x002DB0E8; // allow_duplicated:True (Size->6)
@110spinit                               = 0x002DB0F0; // allow_duplicated:True (Size->9)
@111spinit                               = 0x002DB100; // allow_duplicated:True (Size->7)
@112spinit                               = 0x002DB108; // allow_duplicated:True (Size->13)
@113spinit                               = 0x002DB118; // allow_duplicated:True (Size->13)
@114spinit                               = 0x002DB130; // allow_duplicated:True (Size->17)
@115spinit                               = 0x002DB148; // allow_duplicated:True (Size->13)
@116spinit                               = 0x002DB158; // allow_duplicated:True (Size->13)
@117spinit                               = 0x002DB168; // allow_duplicated:True (Size->10)
@118spinit                               = 0x002DB178; // allow_duplicated:True (Size->14)
@119spinit                               = 0x002DB190; // allow_duplicated:True (Size->24)
@120spinit                               = 0x002DB1A8; // allow_duplicated:True (Size->13)
@121spinit                               = 0x002DB1B8; // allow_duplicated:True (Size->14)
@122spinit                               = 0x002DB1C8; // allow_duplicated:True (Size->13)
@123spinit                               = 0x002DB1D8; // allow_duplicated:True (Size->14)
@124spinit                               = 0x002DB1E8; // allow_duplicated:True (Size->12)
@125spinit                               = 0x002DB1F8; // allow_duplicated:True (Size->14)
@126spinit                               = 0x002DB208; // allow_duplicated:True (Size->11)
@127spinit                               = 0x002DB220; // allow_duplicated:True (Size->16)
@128spinit                               = 0x002DB230; // allow_duplicated:True (Size->16)
@129spinit                               = 0x002DB240; // allow_duplicated:True (Size->19)
@130spinit                               = 0x002DB258; // allow_duplicated:True (Size->14)
@131spinit                               = 0x002DB268; // allow_duplicated:True (Size->14)
@132spinit                               = 0x002DB280; // allow_duplicated:True (Size->19)
@133spinit                               = 0x002DB2A0; // allow_duplicated:True (Size->19)
@134spinit                               = 0x002DB2C0; // allow_duplicated:True (Size->17)
@135spinit                               = 0x002DB2D8; // allow_duplicated:True (Size->11)
@136spinit                               = 0x002DB2E8; // allow_duplicated:True (Size->12)
@137spinit                               = 0x002DB2F8; // allow_duplicated:True (Size->11)
@138spinit                               = 0x002DB310; // allow_duplicated:True (Size->23)
@139spinit                               = 0x002DB328; // allow_duplicated:True (Size->15)
@140spinit                               = 0x002DB338; // allow_duplicated:True (Size->13)
@141spinit                               = 0x002DB348; // allow_duplicated:True (Size->13)
@142spinit                               = 0x002DB358; // allow_duplicated:True (Size->12)
@143spinit                               = 0x002DB368; // allow_duplicated:True (Size->10)
@144spinit                               = 0x002DB378; // allow_duplicated:True (Size->12)
@145spinit                               = 0x002DB388; // allow_duplicated:True (Size->13)
@146spinit                               = 0x002DB398; // allow_duplicated:True (Size->15)
@147spinit                               = 0x002DB3A8; // allow_duplicated:True (Size->14)
@148spinit                               = 0x002DB3B8; // allow_duplicated:True (Size->13)
@149spinit                               = 0x002DB3D0; // allow_duplicated:True (Size->20)
@150spinit                               = 0x002DB3E8; // allow_duplicated:True (Size->10)
@151spinit                               = 0x002DB400; // allow_duplicated:True (Size->23)
@152spinit                               = 0x002DB418; // allow_duplicated:True (Size->13)
@153spinit                               = 0x002DB430; // allow_duplicated:True (Size->17)
@154spinit                               = 0x002DB448; // allow_duplicated:True (Size->12)
@155spinit                               = 0x002DB458; // allow_duplicated:True (Size->11)
@156spinit                               = 0x002DB468; // allow_duplicated:True (Size->15)
@157spinit                               = 0x002DB478; // allow_duplicated:True (Size->11)
@158spinit                               = 0x002DB488; // allow_duplicated:True (Size->12)
@159spinit                               = 0x002DB498; // allow_duplicated:True (Size->11)
@160spinit                               = 0x002DB4A8; // allow_duplicated:True (Size->9)
@161spinit                               = 0x002DB4B8; // allow_duplicated:True (Size->13)
@162spinit                               = 0x002DB4D0; // allow_duplicated:True (Size->18)
@163spinit                               = 0x002DB4F0; // allow_duplicated:True (Size->20)
@164spinit                               = 0x002DB510; // allow_duplicated:True (Size->19)
@165spinit                               = 0x002DB530; // allow_duplicated:True (Size->19)
@166spinit                               = 0x002DB550; // allow_duplicated:True (Size->23)
@167spinit                               = 0x002DB568; // allow_duplicated:True (Size->10)
@168spinit                               = 0x002DB580; // allow_duplicated:True (Size->18)
@169spinit                               = 0x002DB598; // allow_duplicated:True (Size->9)     
@170spinit                               = 0x002DB5A8; // allow_duplicated:True (Size->14)
@171spinit                               = 0x002DB5B8; // allow_duplicated:True (Size->10)
@172spinit                               = 0x002DB5C8; // allow_duplicated:True (Size->12)
@173spinit                               = 0x002DB5E0; // allow_duplicated:True (Size->21)
@174spinit                               = 0x002DB5F8; // allow_duplicated:True (Size->14)
@175spinit                               = 0x002DB610; // allow_duplicated:True (Size->20)
@176spinit                               = 0x002DB628; // allow_duplicated:True (Size->10)
@177spinit                               = 0x002DB640; // allow_duplicated:True (Size->19)
@178spinit                               = 0x002DB658; // allow_duplicated:True (Size->12)
@179spinit                               = 0x002DB668; // allow_duplicated:True (Size->12)
@180spinit                               = 0x002DB678; // allow_duplicated:True (Size->10)
@181spinit                               = 0x002DB690; // allow_duplicated:True (Size->22)
@182spinit                               = 0x002DB6A8; // allow_duplicated:True (Size->9)
@183spinit                               = 0x002DB6B8; // allow_duplicated:True (Size->10)
@184spinit                               = 0x002DB6D0; // allow_duplicated:True (Size->18)
@185spinit                               = 0x002DB6E8; // allow_duplicated:True (Size->12)
@186spinit                               = 0x002DB6F8; // allow_duplicated:True (Size->11)
@187spinit                               = 0x002DB708; // allow_duplicated:True (Size->15)
@188spinit                               = 0x002DB718; // allow_duplicated:True (Size->14)
@189spinit                               = 0x002DB728; // allow_duplicated:True (Size->12)
@190spinit                               = 0x002DB738; // allow_duplicated:True (Size->11)
@191spinit                               = 0x002DB748; // allow_duplicated:True (Size->13)
@192spinit                               = 0x002DB758; // allow_duplicated:True (Size->10)
@193spinit                               = 0x002DB770; // allow_duplicated:True (Size->19)
@194spinit                               = 0x002DB790; // allow_duplicated:True (Size->20)
@195spinit                               = 0x002DB7B0; // allow_duplicated:True (Size->16)
@196spinit                               = 0x002DB7C0; // allow_duplicated:True (Size->10)
@197spinit                               = 0x002DB7D0; // allow_duplicated:True (Size->18)
@198spinit                               = 0x002DB7E8; // allow_duplicated:True (Size->15)
@199spinit                               = 0x002DB800; // allow_duplicated:True (Size->19)
@200spinit                               = 0x002DB818; // allow_duplicated:True (Size->11)
@201spinit                               = 0x002DB828; // allow_duplicated:True (Size->11)
@202spinit                               = 0x002DB840; // allow_duplicated:True (Size->16)
@203spinit                               = 0x002DB850; // allow_duplicated:True (Size->13)
@204spinit                               = 0x002DB860; // allow_duplicated:True (Size->12)
@205spinit                               = 0x002DB870; // allow_duplicated:True (Size->13)
@206spinit                               = 0x002DB880; // allow_duplicated:True (Size->13)
@207spinit                               = 0x002DB890; // allow_duplicated:True (Size->8)
@208spinit                               = 0x002DB898; // allow_duplicated:True (Size->15)
@209spinit                               = 0x002DB8A8; // allow_duplicated:True (Size->14)
@210spinit                               = 0x002DB8C0; // allow_duplicated:True (Size->18)
@211spinit                               = 0x002DB8D8; // allow_duplicated:True (Size->14)
@212spinit                               = 0x002DB8E8; // allow_duplicated:True (Size->13)
@213spinit                               = 0x002DB8F8; // allow_duplicated:True (Size->13)
@214spinit                               = 0x002DB908; // allow_duplicated:True (Size->11)
@215spinit                               = 0x002DB918; // allow_duplicated:True (Size->11)
@216spinit                               = 0x002DB930; // allow_duplicated:True (Size->19)
@217spinit                               = 0x002DB948; // allow_duplicated:True (Size->10)
@218spinit                               = 0x002DB958; // allow_duplicated:True (Size->10)
@219spinit                               = 0x002DB968; // allow_duplicated:True (Size->15)
@220spinit                               = 0x002DB978; // allow_duplicated:True (Size->13)
@221spinit                               = 0x002DB988; // allow_duplicated:True (Size->12)
@222spinit                               = 0x002DB998; // allow_duplicated:True (Size->12)
@223spinit                               = 0x002DB9A8; // allow_duplicated:True (Size->11)
@224spinit                               = 0x002DB9B8; // allow_duplicated:True (Size->12)
@225spinit                               = 0x002DB9C8; // allow_duplicated:True (Size->13)
@226spinit                               = 0x002DB9E0; // allow_duplicated:True (Size->16)
@227spinit                               = 0x002DB9F0; // allow_duplicated:True (Size->17)
@228spinit                               = 0x002DBA10; // allow_duplicated:True (Size->16)
@229spinit                               = 0x002DBA20; // allow_duplicated:True (Size->20)
@230spinit                               = 0x002DBA40; // allow_duplicated:True (Size->21)
@231spinit                               = 0x002DBA58; // allow_duplicated:True (Size->9)
@232spinit                               = 0x002DBA70; // allow_duplicated:True (Size->19)
@233spinit                               = 0x002DBA88; // allow_duplicated:True (Size->14)
@234spinit                               = 0x002DBAA0; // allow_duplicated:True (Size->19)
@235spinit                               = 0x002DBAC0; // allow_duplicated:True (Size->18)
@236spinit                               = 0x002DBAD8; // allow_duplicated:True (Size->12)
@237spinit                               = 0x002DBAE8; // allow_duplicated:True (Size->13)
@238spinit                               = 0x002DBAF8; // allow_duplicated:True (Size->14)
@239spinit                               = 0x002DBB10; // allow_duplicated:True (Size->16)
@240spinit                               = 0x002DBB20; // allow_duplicated:True (Size->16)
@241spinit                               = 0x002DBB30; // allow_duplicated:True (Size->14)
@242spinit                               = 0x002DBB40; // allow_duplicated:True (Size->16)
@243spinit                               = 0x002DBB50; // allow_duplicated:True (Size->18)
@244spinit                               = 0x002DBB68; // allow_duplicated:True (Size->11)
@245spinit                               = 0x002DBB78; // allow_duplicated:True (Size->12)
@246spinit                               = 0x002DBB88; // allow_duplicated:True (Size->10)
@247spinit                               = 0x002DBB98; // allow_duplicated:True (Size->15)
@248spinit                               = 0x002DBBA8; // allow_duplicated:True (Size->11)
@249spinit                               = 0x002DBBC0; // allow_duplicated:True (Size->26)
@250spinit                               = 0x002DBBE0; // allow_duplicated:True (Size->19)
@251spinit                               = 0x002DBBF8; // allow_duplicated:True (Size->11)
@252spinit                               = 0x002DBC08; // allow_duplicated:True (Size->14)
@253spinit                               = 0x002DBC20; // allow_duplicated:True (Size->18)
@254spinit                               = 0x002DBC38; // allow_duplicated:True (Size->10)
@255spinit                               = 0x002DBC48; // allow_duplicated:True (Size->14)
@256spinit                               = 0x002DBC60; // allow_duplicated:True (Size->19)
@257spinit                               = 0x002DBC80; // allow_duplicated:True (Size->16)
@258spinit                               = 0x002DBC90; // allow_duplicated:True (Size->15)
@259spinit                               = 0x002DBCA0; // allow_duplicated:True (Size->14)
@260spinit                               = 0x002DBCB0; // allow_duplicated:True (Size->15)
@261spinit                               = 0x002DBCC0; // allow_duplicated:True (Size->11)
@262spinit                               = 0x002DBCD0; // allow_duplicated:True // (Size->11)    
@263spinit                               = 0x002DBCE0; // allow_duplicated:True (Size->11)
@264spinit                               = 0x002DBCF0; // allow_duplicated:True (Size->9)
@265spinit                               = 0x002DBD00; // allow_duplicated:True (Size->11)
@266spinit                               = 0x002DBD10; // allow_duplicated:True (Size->14)
@267spinit                               = 0x002DBD20; // allow_duplicated:True (Size->11)
@268spinit                               = 0x002DBD30; // allow_duplicated:True (Size->15)
@269spinit                               = 0x002DBD40; // allow_duplicated:True (Size->19)
@270spinit                               = 0x002DBD58; // allow_duplicated:True (Size->12)
@271spinit                               = 0x002DBD68; // allow_duplicated:True (Size->12)
@272spinit                               = 0x002DBD80; // allow_duplicated:True (Size->18)
@273spinit                               = 0x002DBD98; // allow_duplicated:True (Size->14)
@274spinit                               = 0x002DBDB0; // allow_duplicated:True (Size->17)
@275spinit                               = 0x002DBDC8; // allow_duplicated:True (Size->15)
@276spinit                               = 0x002DBDD8; // allow_duplicated:True (Size->14)
@277spinit                               = 0x002DBDE8; // allow_duplicated:True (Size->9)
@278spinit                               = 0x002DBDF8; // allow_duplicated:True (Size->14)
@279spinit                               = 0x002DBE08; // allow_duplicated:True (Size->12)
@280spinit                               = 0x002DBE20; // allow_duplicated:True (Size->21)
@281spinit                               = 0x002DBE38; // allow_duplicated:True (Size->14)
@282spinit                               = 0x002DBE48; // allow_duplicated:True (Size->12)
@283spinit                               = 0x002DBE60; // allow_duplicated:True (Size->16)
@284spinit                               = 0x002DBE70; // allow_duplicated:True (Size->10)
@285spinit                               = 0x002DBE80; // allow_duplicated:True (Size->17)
@286spinit                               = 0x002DBE98; // allow_duplicated:True (Size->14)
@287spinit                               = 0x002DBEA8; // allow_duplicated:True (Size->10)
@288spinit                               = 0x002DBEC0; // allow_duplicated:True (Size->24)
@289spinit                               = 0x002DBED8; // allow_duplicated:True (Size->10)
@290spinit                               = 0x002DBEE8; // allow_duplicated:True (Size->10)
@291spinit                               = 0x002DBEF8; // allow_duplicated:True (Size->15)
@292spinit                               = 0x002DBF10; // allow_duplicated:True (Size->25)
@293spinit                               = 0x002DBF30; // allow_duplicated:True (Size->14)
@294spinit                               = 0x002DBF40; // allow_duplicated:True (Size->20)
@295spinit                               = 0x002DBF58; // allow_duplicated:True (Size->15)
@296spinit                               = 0x002DBF70; // allow_duplicated:True (Size->21)
@297spinit                               = 0x002DBF90; // allow_duplicated:True (Size->18)
@298spinit                               = 0x002DBFA8; // allow_duplicated:True (Size->10)
@299spinit                               = 0x002DBFC0; // allow_duplicated:True (Size->18)
@300spinit                               = 0x002DBFD8; // allow_duplicated:True (Size->10)
@301spinit                               = 0x002DBFE8; // allow_duplicated:True (Size->10)
@302spinit                               = 0x002DBFF8; // allow_duplicated:True (Size->15)
@303spinit                               = 0x002DC010; // allow_duplicated:True (Size->19)
@304spinit                               = 0x002DC028; // allow_duplicated:True (Size->15)
@305spinit                               = 0x002DC038; // allow_duplicated:True (Size->12)
@306spinit                               = 0x002DC048; // allow_duplicated:True (Size->11)
@307spinit                               = 0x002DC060; // allow_duplicated:True (Size->18)
@308spinit                               = 0x002DC080; // allow_duplicated:True (Size->17)
@309spinit                               = 0x002DC0A0; // allow_duplicated:True (Size->17)
@310spinit                               = 0x002DC0B8; // allow_duplicated:True (Size->11)
@311spinit                               = 0x002DC0D0; // allow_duplicated:True (Size->18)
@312spinit                               = 0x002DC0E8; // allow_duplicated:True (Size->10)
@313spinit                               = 0x002DC100; // allow_duplicated:True (Size->16)
@314spinit                               = 0x002DC110; // allow_duplicated:True (Size->16)
@315spinit                               = 0x002DC120; // allow_duplicated:True (Size->16)
@316spinit                               = 0x002DC130; // allow_duplicated:True (Size->11)
@317spinit                               = 0x002DC140; // allow_duplicated:True (Size->16)
@318spinit                               = 0x002DC150; // allow_duplicated:True (Size->13)
@319spinit                               = 0x002DC160; // allow_duplicated:True (Size->15)
@320spinit                               = 0x002DC170; // allow_duplicated:True (Size->18)
@321spinit                               = 0x002DC188; // allow_duplicated:True (Size->9)
@322spinit                               = 0x002DC1A0; // allow_duplicated:True (Size->19)
@323spinit                               = 0x002DC1B8; // allow_duplicated:True (Size->13)
@324spinit                               = 0x002DC1C8; // allow_duplicated:True (Size->15)
@325spinit                               = 0x002DC1D8; // allow_duplicated:True (Size->15)
@326spinit                               = 0x002DC1E8; // allow_duplicated:True (Size->12)
@327spinit                               = 0x002DC1F8; // allow_duplicated:True (Size->14)
@328spinit                               = 0x002DC208; // allow_duplicated:True (Size->10)
@329spinit                               = 0x002DC220; // allow_duplicated:True (Size->25)
@330spinit                               = 0x002DC240; // allow_duplicated:True (Size->12)
@331spinit                               = 0x002DC250; // allow_duplicated:True (Size->29)
@332spinit                               = 0x002DC270; // allow_duplicated:True (Size->12)
@333spinit                               = 0x002DC280; // allow_duplicated:True (Size->12)
@334spinit                               = 0x002DC290; // allow_duplicated:True (Size->17)
@335spinit                               = 0x002DC2A8; // allow_duplicated:True (Size->11)
@336spinit                               = 0x002DC2B8; // allow_duplicated:True (Size->9)
@337spinit                               = 0x002DC2C8; // allow_duplicated:True (Size->13)
@338spinit                               = 0x002DC2D8; // allow_duplicated:True (Size->9)
@339spinit                               = 0x002DC2E8; // allow_duplicated:True (Size->9)
@340spinit                               = 0x002DC2F8; // allow_duplicated:True (Size->12)
@341spinit                               = 0x002DC308; // allow_duplicated:True (Size->13)
@342spinit                               = 0x002DC318; // allow_duplicated:True (Size->12)
@343spinit                               = 0x002DC328; // allow_duplicated:True (Size->15)
@344spinit                               = 0x002DC340; // allow_duplicated:True (Size->24)
@345spinit                               = 0x002DC360; // allow_duplicated:True (Size->18)
@346spinit                               = 0x002DC380; // allow_duplicated:True (Size->17)
@347spinit                               = 0x002DC398; // allow_duplicated:True (Size->11)
@348spinit                               = 0x002DC3B0; // allow_duplicated:True (Size->21)
@349spinit                               = 0x002DC3C8; // allow_duplicated:True (Size->8)
@350spinit                               = 0x002DC3D0; // allow_duplicated:True (Size->23)
@351spinit                               = 0x002DC3E8; // allow_duplicated:True (Size->13)
@352spinit                               = 0x002DC400; // allow_duplicated:True (Size->16)
@353spinit                               = 0x002DC410; // allow_duplicated:True (Size->15)
@354spinit                               = 0x002DC420; // allow_duplicated:True (Size->11)
@355spinit                               = 0x002DC430; // allow_duplicated:True (Size->15)
@356spinit                               = 0x002DC440; // allow_duplicated:True (Size->12)
@357spinit                               = 0x002DC450; // allow_duplicated:True (Size->15)
@358spinit                               = 0x002DC460; // allow_duplicated:True (Size->10)
@359spinit                               = 0x002DC470; // allow_duplicated:True (Size->12)
@360spinit                               = 0x002DC480; // allow_duplicated:True (Size->17)
@361spinit                               = 0x002DC498; // allow_duplicated:True (Size->12)
@362spinit                               = 0x002DC4B0; // allow_duplicated:True (Size->21)
@363spinit                               = 0x002DC4C8; // allow_duplicated:True (Size->13)
@364spinit                               = 0x002DC4D8; // allow_duplicated:True (Size->14)
@365spinit                               = 0x002DC4E8; // allow_duplicated:True (Size->13)
@366spinit                               = 0x002DC500; // allow_duplicated:True (Size->23)
@367spinit                               = 0x002DC518; // allow_duplicated:True (Size->9)
@368spinit                               = 0x002DC528; // allow_duplicated:True (Size->6)
@369spinit                               = 0x002DC530; // allow_duplicated:True (Size->11)
@370spinit                               = 0x002DC540; // allow_duplicated:True (Size->8)
@371spinit                               = 0x002DC548; // allow_duplicated:True (Size->12)
@372spinit                               = 0x002DC558; // allow_duplicated:True (Size->7)
@373spinit                               = 0x002DC560; // allow_duplicated:True (Size->10)
@374spinit                               = 0x002DC570; // allow_duplicated:True (Size->11)
@375spinit                               = 0x002DC580; // allow_duplicated:True (Size->18)
@376spinit                               = 0x002DC5A0; // allow_duplicated:True (Size->22)
@377spinit                               = 0x002DC5B8; // allow_duplicated:True (Size->9)
@378spinit                               = 0x002DC5D0; // allow_duplicated:True (Size->18)
@379spinit                               = 0x002DC5E8; // allow_duplicated:True (Size->14)
@380spinit                               = 0x002DC5F8; // allow_duplicated:True (Size->13)
@381spinit                               = 0x002DC608; // allow_duplicated:True (Size->14)
@382spinit                               = 0x002DC618; // allow_duplicated:True (Size->10)
@383spinit                               = 0x002DC630; // allow_duplicated:True (Size->20)
@384spinit                               = 0x002DC648; // allow_duplicated:True (Size->12)
@385spinit                               = 0x002DC658; // allow_duplicated:True (Size->13)
@386spinit                               = 0x002DC668; // allow_duplicated:True (Size->11)
@387spinit                               = 0x002DC678; // allow_duplicated:True (Size->10)
@388spinit                               = 0x002DC688; // allow_duplicated:True (Size->11)
@389spinit                               = 0x002DC698; // allow_duplicated:True (Size->12)
@390spinit                               = 0x002DC6A8; // allow_duplicated:True (Size->7)
@391spinit                               = 0x002DC6B0; // allow_duplicated:True (Size->9)
@392spinit                               = 0x002DC6C0; // allow_duplicated:True (Size->11)
@393spinit                               = 0x002DC6D0; // allow_duplicated:True (Size->10)
@394spinit                               = 0x002DC6E0; // allow_duplicated:True (Size->15)
@395spinit                               = 0x002DC6F0; // allow_duplicated:True (Size->12)
@396spinit                               = 0x002DC700; // allow_duplicated:True (Size->32)
@397spinit                               = 0x002DC720; // allow_duplicated:True (Size->13)
@398spinit                               = 0x002DC730; // allow_duplicated:True (Size->16)
@399spinit                               = 0x002DC740; // allow_duplicated:True (Size->14)
@400spinit                               = 0x002DC750; // allow_duplicated:True (Size->12)
@401spinit                               = 0x002DC760; // allow_duplicated:True (Size->11)
@402spinit                               = 0x002DC770; // allow_duplicated:True (Size->20)
@403spinit                               = 0x002DC788; // allow_duplicated:True (Size->7)
@404spinit                               = 0x002DC790; // allow_duplicated:True (Size->13)
@405spinit                               = 0x002DC7A0; // allow_duplicated:True (Size->18)
@406spinit                               = 0x002DC7B8; // allow_duplicated:True (Size->11)
@407spinit                               = 0x002DC7C8; // allow_duplicated:True (Size->13)
@408spinit                               = 0x002DC7D8; // allow_duplicated:True (Size->12)
@409spinit                               = 0x002DC7F0; // allow_duplicated:True (Size->16)
@410spinit                               = 0x002DC800; // allow_duplicated:True (Size->14)
@411spinit                               = 0x002DC810; // allow_duplicated:True (Size->13)
@412spinit                               = 0x002DC820; // allow_duplicated:True (Size->13)
@413spinit                               = 0x002DC830; // allow_duplicated:True (Size->13)
@414spinit                               = 0x002DC840; // allow_duplicated:True (Size->18)
@415spinit                               = 0x002DC860; // allow_duplicated:True (Size->23)
@416spinit                               = 0x002DC878; // allow_duplicated:True (Size->13)
@417spinit                               = 0x002DC888; // allow_duplicated:True (Size->6)
@418spinit                               = 0x002DC890; // allow_duplicated:True (Size->15)
@419spinit                               = 0x002DC8A0; // allow_duplicated:True (Size->11)
@420spinit                               = 0x002DC8B0; // allow_duplicated:True (Size->17)
@421spinit                               = 0x002DC8C8; // allow_duplicated:True (Size->10)
@422spinit                               = 0x002DC8E0; // allow_duplicated:True (Size->18)
@423spinit                               = 0x002DC900; // allow_duplicated:True (Size->21)
@424spinit                               = 0x002DC918; // allow_duplicated:True (Size->11)
@425spinit                               = 0x002DC930; // allow_duplicated:True (Size->19)
@426spinit                               = 0x002DC950; // allow_duplicated:True (Size->17)
@427spinit                               = 0x002DC968; // allow_duplicated:True (Size->5)
@428spinit                               = 0x002DC970; // allow_duplicated:True (Size->5)
@429spinit                               = 0x002DC978; // allow_duplicated:True (Size->5)
@430spinit                               = 0x002DC980; // allow_duplicated:True (Size->5)
@431spinit                               = 0x002DC990; // allow_duplicated:True (Size->20)
@432spinit                               = 0x002DC9B0; // allow_duplicated:True (Size->30)
@433spinit                               = 0x002DC9D0; // allow_duplicated:True (Size->12)
@434spinit                               = 0x002DC9E0; // allow_duplicated:True (Size->27)
@435spinit                               = 0x002DCA00; // allow_duplicated:True (Size->17)
@436spinit                               = 0x002DCA20; // allow_duplicated:True (Size->42)
@437spinit                               = 0x002DCA50; // allow_duplicated:True (Size->18)
@438spinit                               = 0x002DCA70; // allow_duplicated:True (Size->23)
@439spinit                               = 0x002DCA90; // allow_duplicated:True (Size->27)    
@440spinit                               = 0x002DCAB0; // allow_duplicated:True (Size->16)
@441spinit                               = 0x002DCAC0; // allow_duplicated:True (Size->19)
@442spinit                               = 0x002DCAE0; // allow_duplicated:True (Size->21)
@443spinit                               = 0x002DCB00; // allow_duplicated:True (Size->20)
@444spinit                               = 0x002DCB18; // allow_duplicated:True (Size->15)
@445spinit                               = 0x002DCB30; // allow_duplicated:True (Size->28)    
@446spinit                               = 0x002DCB50; // allow_duplicated:True (Size->16)
@447spinit                               = 0x002DCB60; // allow_duplicated:True (Size->38)    
@448spinit                               = 0x002DCB90; // allow_duplicated:True (Size->28)    
@449spinit                               = 0x002DCBB0; // allow_duplicated:True (Size->14)
@450spinit                               = 0x002DCBC0; // allow_duplicated:True (Size->22)    
@451spinit                               = 0x002DCBD8; // allow_duplicated:True (Size->15)    
@452spinit                               = 0x002DCBF0; // allow_duplicated:True (Size->19)    
@453spinit                               = 0x002DCC10; // allow_duplicated:True (Size->20)    
@454spinit                               = 0x002DCC30; // allow_duplicated:True (Size->24)    
@455spinit                               = 0x002DCC50; // allow_duplicated:True (Size->27)    
@456spinit                               = 0x002DCC70; // allow_duplicated:True (Size->30)    
@457spinit                               = 0x002DCC90; // allow_duplicated:True (Size->14)    
@458spinit                               = 0x002DCCA0; // allow_duplicated:True (Size->26)    
@459spinit                               = 0x002DCCC0; // allow_duplicated:True (Size->18)    
@460spinit                               = 0x002DCCE0; // allow_duplicated:True (Size->47)
@461spinit                               = 0x002DCD10; // allow_duplicated:True (Size->21)
@462spinit                               = 0x002DCD30; // allow_duplicated:True (Size->30)    
@463spinit                               = 0x002DCD50; // allow_duplicated:True (Size->30)
@464spinit                               = 0x002DCD70; // allow_duplicated:True (Size->18)
@465spinit                               = 0x002DCD90; // allow_duplicated:True (Size->32)
@466spinit                               = 0x002DCDB0; // allow_duplicated:True (Size->19)
@467spinit                               = 0x002DCDD0; // allow_duplicated:True (Size->26)
@468spinit                               = 0x002DCDF0; // allow_duplicated:True (Size->27)
@469spinit                               = 0x002DCE10; // allow_duplicated:True (Size->38)
@470spinit                               = 0x002DCE40; // allow_duplicated:True (Size->21)
@471spinit                               = 0x002DCE60; // allow_duplicated:True (Size->38)
@472spinit                               = 0x002DCE90; // allow_duplicated:True (Size->25)
@473spinit                               = 0x002DCEB0; // allow_duplicated:True (Size->19)
@474spinit                               = 0x002DCED0; // allow_duplicated:True (Size->24)
@475spinit                               = 0x002DCEF0; // allow_duplicated:True (Size->19)
@476spinit                               = 0x002DCF10; // allow_duplicated:True (Size->28)
@477spinit                               = 0x002DCF30; // allow_duplicated:True (Size->31)
@478spinit                               = 0x002DCF50; // allow_duplicated:True (Size->24)
@479spinit                               = 0x002DCF70; // allow_duplicated:True (Size->32)
@480spinit                               = 0x002DCF90; // allow_duplicated:True (Size->44)
@481spinit                               = 0x002DCFC0; // allow_duplicated:True (Size->23)
@482spinit                               = 0x002DCFE0; // allow_duplicated:True (Size->28)
@483spinit                               = 0x002DD000; // allow_duplicated:True (Size->16)
@484spinit                               = 0x002DD010; // allow_duplicated:True (Size->44)
@485spinit                               = 0x002DD040; // allow_duplicated:True (Size->18)
@486spinit                               = 0x002DD060; // allow_duplicated:True (Size->30)
@487spinit                               = 0x002DD080; // allow_duplicated:True (Size->37)
@488spinit                               = 0x002DD0B0; // allow_duplicated:True (Size->18)
@489spinit                               = 0x002DD0D0; // allow_duplicated:True (Size->35)
@490spinit                               = 0x002DD100; // allow_duplicated:True (Size->24)
@491spinit                               = 0x002DD120; // allow_duplicated:True (Size->31)
@492spinit                               = 0x002DD140; // allow_duplicated:True (Size->19)    
@493spinit                               = 0x002DD160; // allow_duplicated:True (Size->29)
@494spinit                               = 0x002DD180; // allow_duplicated:True (Size->22)
@495spinit                               = 0x002DD1A0; // allow_duplicated:True (Size->33)
@496spinit                               = 0x002DD1D0; // allow_duplicated:True (Size->18)
@497spinit                               = 0x002DD1F0; // allow_duplicated:True (Size->17)
@498spinit                               = 0x002DD210; // allow_duplicated:True (Size->19)
@499spinit                               = 0x002DD230; // allow_duplicated:True (Size->28)
@500spinit                               = 0x002DD250; // allow_duplicated:True (Size->19)
@501spinit                               = 0x002DD270; // allow_duplicated:True (Size->16)
@502spinit                               = 0x002DD280; // allow_duplicated:True (Size->16)
@503spinit                               = 0x002DD290; // allow_duplicated:True (Size->7)
@504spinit                               = 0x002DD298; // allow_duplicated:True (Size->9)
@505spinit                               = 0x002DD2A8; // allow_duplicated:True (Size->5)
@506spinit                               = 0x002DD2B0; // allow_duplicated:True (Size->5)
@507spinit                               = 0x002DD2B8; // allow_duplicated:True (Size->14)
@508spinit                               = 0x002DD2C8; // allow_duplicated:True (Size->9)
@509spinit                               = 0x002DD2D8; // allow_duplicated:True (Size->11)
@510spinit                               = 0x002DD2E8; // allow_duplicated:True (Size->7)
@511spinit                               = 0x002DD2F0; // allow_duplicated:True (Size->8)
@512spinit                               = 0x002DD2F8; // allow_duplicated:True (Size->11)
@513spinit                               = 0x002DD308; // allow_duplicated:True (Size->9)
@514spinit                               = 0x002DD318; // allow_duplicated:True (Size->10)
@515spinit                               = 0x002DD328; // allow_duplicated:True (Size->12)
@516spinit                               = 0x002DD340; // allow_duplicated:True (Size->19)
@517spinit                               = 0x002DD358; // allow_duplicated:True (Size->14)
@518spinit                               = 0x002DD368; // allow_duplicated:True (Size->11)
@519spinit                               = 0x002DD378; // allow_duplicated:True (Size->6)
@520spinit                               = 0x002DD380; // allow_duplicated:True (Size->8)
@521spinit                               = 0x002DD388; // allow_duplicated:True (Size->9)
@522spinit                               = 0x002DD398; // allow_duplicated:True (Size->14)
@523spinit                               = 0x002DD3A8; // allow_duplicated:True (Size->8)
@524spinit                               = 0x002DD3B0; // allow_duplicated:True (Size->10)
@525spinit                               = 0x002DD3C0; // allow_duplicated:True (Size->12)
@526spinit                               = 0x002DD3D0; // allow_duplicated:True (Size->11)
@527spinit                               = 0x002DD3E0; // allow_duplicated:True (Size->25)
@528spinit                               = 0x002DD400; // allow_duplicated:True (Size->11)
@529spinit                               = 0x002DD410; // allow_duplicated:True (Size->10)
@530spinit                               = 0x002DD420; // allow_duplicated:True (Size->8)
@531spinit                               = 0x002DD428; // allow_duplicated:True (Size->11)
@532spinit                               = 0x002DD438; // allow_duplicated:True (Size->10)
@533spinit                               = 0x002DD448; // allow_duplicated:True (Size->11)
@534spinit                               = 0x002DD458; // allow_duplicated:True (Size->11)
@535spinit                               = 0x002DD468; // allow_duplicated:True (Size->10)
@536spinit                               = 0x002DD478; // allow_duplicated:True (Size->12)
@537spinit                               = 0x002DD488; // allow_duplicated:True (Size->10)
@538spinit                               = 0x002DD498; // allow_duplicated:True (Size->15)
@539spinit                               = 0x002DD4A8; // allow_duplicated:True (Size->10)
@540spinit                               = 0x002DD4B8; // allow_duplicated:True (Size->10)
@541spinit                               = 0x002DD4C8; // allow_duplicated:True (Size->8)
@542spinit                               = 0x002DD4D0; // allow_duplicated:True (Size->11)
@543spinit                               = 0x002DD4E0; // allow_duplicated:True (Size->14)
@544spinit                               = 0x002DD4F0; // allow_duplicated:True (Size->14)
@545spinit                               = 0x002DD500; // allow_duplicated:True (Size->11)
@546spinit                               = 0x002DD510; // allow_duplicated:True (Size->17)
@547spinit                               = 0x002DD528; // allow_duplicated:True (Size->11)
@548spinit                               = 0x002DD538; // allow_duplicated:True (Size->10)
@549spinit                               = 0x002DD548; // allow_duplicated:True (Size->8)
@550spinit                               = 0x002DD550; // allow_duplicated:True (Size->11)
@551spinit                               = 0x002DD560; // allow_duplicated:True (Size->14)
@552spinit                               = 0x002DD570; // allow_duplicated:True (Size->6)
@553spinit                               = 0x002DD578; // allow_duplicated:True (Size->10)
@554spinit                               = 0x002DD588; // allow_duplicated:True (Size->14)
@555spinit                               = 0x002DD598; // allow_duplicated:True (Size->15)
@556spinit                               = 0x002DD5A8; // allow_duplicated:True (Size->14)
@557spinit                               = 0x002DD5B8; // allow_duplicated:True (Size->10)
@558spinit                               = 0x002DD5C8; // allow_duplicated:True (Size->14)
@559spinit                               = 0x002DD5D8; // allow_duplicated:True (Size->15)
@560spinit                               = 0x002DD5E8; // allow_duplicated:True (Size->14)
@561spinit                               = 0x002DD5F8; // allow_duplicated:True (Size->13)
@562spinit                               = 0x002DD610; // allow_duplicated:True (Size->30)
@563spinit                               = 0x002DD630; // allow_duplicated:True (Size->30)
@564spinit                               = 0x002DD650; // allow_duplicated:True (Size->13)
@565spinit                               = 0x002DD660; // allow_duplicated:True (Size->10)
@566spinit                               = 0x002DD670; // allow_duplicated:True (Size->12)
@567spinit                               = 0x002DD680; // allow_duplicated:True (Size->10)
@568spinit                               = 0x002DD690; // allow_duplicated:True (Size->12)
@569spinit                               = 0x002DD6A0; // allow_duplicated:True (Size->10)
@570spinit                               = 0x002DD6B0; // allow_duplicated:True (Size->19)
@571spinit                               = 0x002DD6C8; // allow_duplicated:True (Size->14)
@572spinit                               = 0x002DD6D8; // allow_duplicated:True (Size->9)
@573spinit                               = 0x002DD6F0; // allow_duplicated:True (Size->19)
@574spinit                               = 0x002DD708; // allow_duplicated:True (Size->8)
@575spinit                               = 0x002DD710; // allow_duplicated:True (Size->12)
@576spinit                               = 0x002DD720; // allow_duplicated:True (Size->7)
@577spinit                               = 0x002DD730; // allow_duplicated:True (Size->17)
@578spinit                               = 0x002DD748; // allow_duplicated:True (Size->7)
@579spinit                               = 0x002DD750; // allow_duplicated:True (Size->12)
@580spinit                               = 0x002DD760; // allow_duplicated:True (Size->12)
@581spinit                               = 0x002DD770; // allow_duplicated:True (Size->12)
@582spinit                               = 0x002DD780; // allow_duplicated:True (Size->10)
@583spinit                               = 0x002DD790; // allow_duplicated:True (Size->10)
@584spinit                               = 0x002DD7A0; // allow_duplicated:True (Size->10)
@585spinit                               = 0x002DD7B0; // allow_duplicated:True (Size->12)
@586spinit                               = 0x002DD7C0; // allow_duplicated:True (Size->7)
@587spinit                               = 0x002DD7C8; // allow_duplicated:True (Size->9)
@588spinit                               = 0x002DD7E0; // allow_duplicated:True (Size->23)
@589spinit                               = 0x002DD800; // allow_duplicated:True (Size->27)
@590spinit                               = 0x002DD820; // allow_duplicated:True (Size->18)
@591spinit                               = 0x002DD840; // allow_duplicated:True (Size->22)    
@592spinit                               = 0x002DD860; // allow_duplicated:True (Size->28)
@593spinit                               = 0x002DD880; // allow_duplicated:True (Size->29)
@594spinit                               = 0x002DD8A0; // allow_duplicated:True (Size->14)
@595spinit                               = 0x002DD8B0; // allow_duplicated:True (Size->13)
@596spinit                               = 0x002DD8C0; // allow_duplicated:True (Size->19)
@597spinit                               = 0x002DD8D8; // allow_duplicated:True (Size->11)
@598spinit                               = 0x002DD8E8; // allow_duplicated:True (Size->11)
@599spinit                               = 0x002DD900; // allow_duplicated:True (Size->23)
@600spinit                               = 0x002DD920; // allow_duplicated:True (Size->19)
@601spinit                               = 0x002DD940; // allow_duplicated:True (Size->24)
@602spinit                               = 0x002DD960; // allow_duplicated:True (Size->22)
@603spinit                               = 0x002DD978; // allow_duplicated:True (Size->8)
@604spinit                               = 0x002DD980; // allow_duplicated:True (Size->19)
@605spinit                               = 0x002DD9A0; // allow_duplicated:True (Size->22)
@606spinit                               = 0x002DD9C0; // allow_duplicated:True (Size->21)
@607spinit                               = 0x002DD9D8; // allow_duplicated:True (Size->12)
@608spinit                               = 0x002DD9F0; // allow_duplicated:True (Size->21)
@609spinit                               = 0x002DDA10; // allow_duplicated:True (Size->28)
@610spinit                               = 0x002DDA30; // allow_duplicated:True (Size->12)
@611spinit                               = 0x002DDA40; // allow_duplicated:True (Size->15)
@612spinit                               = 0x002DDA50; // allow_duplicated:True (Size->32)
@613spinit                               = 0x002DDA70; // allow_duplicated:True (Size->9)
@614spinit                               = 0x002DDA80; // allow_duplicated:True (Size->9)
@615spinit                               = 0x002DDA90; // allow_duplicated:True (Size->11)
@616spinit                               = 0x002DDAA0; // allow_duplicated:True (Size->11)
@617spinit                               = 0x002DDAB0; // allow_duplicated:True (Size->11)
@618spinit                               = 0x002DDAC0; // allow_duplicated:True (Size->9)
@619spinit                               = 0x002DDAD0; // allow_duplicated:True (Size->15)
@620spinit                               = 0x002DDAE0; // allow_duplicated:True (Size->16)
@621spinit                               = 0x002DDAF0; // allow_duplicated:True (Size->11)
@622spinit                               = 0x002DDB00; // allow_duplicated:True (Size->13)
@623spinit                               = 0x002DDB10; // allow_duplicated:True (Size->15)
@624spinit                               = 0x002DDB20; // allow_duplicated:True (Size->13)
@625spinit                               = 0x002DDB30; // allow_duplicated:True (Size->14)
@626spinit                               = 0x002DDB40; // allow_duplicated:True (Size->17)
@627spinit                               = 0x002DDB58; // allow_duplicated:True (Size->13)
@628spinit                               = 0x002DDB68; // allow_duplicated:True (Size->10)
@629spinit                               = 0x002DDB78; // allow_duplicated:True (Size->14)
@630spinit                               = 0x002DDB90; // allow_duplicated:True (Size->17)
@631spinit                               = 0x002DDBA8; // allow_duplicated:True (Size->11)
@632spinit                               = 0x002DDBC0; // allow_duplicated:True (Size->18)
@633spinit                               = 0x002DDBD8; // allow_duplicated:True (Size->15)
@634spinit                               = 0x002DDBF0; // allow_duplicated:True (Size->16)
@635spinit                               = 0x002DDC00; // allow_duplicated:True (Size->11)
@636spinit                               = 0x002DDC10; // allow_duplicated:True (Size->14)
@637spinit                               = 0x002DDC20; // allow_duplicated:True (Size->13)
@638spinit                               = 0x002DDC30; // allow_duplicated:True (Size->9)
@639spinit                               = 0x002DDC40; // allow_duplicated:True (Size->17)
@640spinit                               = 0x002DDC60; // allow_duplicated:True (Size->18)
@641spinit                               = 0x002DDC78; // allow_duplicated:True (Size->15)
@642spinit                               = 0x002DDC88; // allow_duplicated:True (Size->11)
@643spinit                               = 0x002DDC98; // allow_duplicated:True (Size->15)
@644spinit                               = 0x002DDCA8; // allow_duplicated:True (Size->15)
@645spinit                               = 0x002DDCC0; // allow_duplicated:True (Size->17)
@646spinit                               = 0x002DDCE0; // allow_duplicated:True (Size->23)
@647spinit                               = 0x002DDCF8; // allow_duplicated:True (Size->15)
@648spinit                               = 0x002DDD08; // allow_duplicated:True (Size->11)
@649spinit                               = 0x002DDD18; // allow_duplicated:True (Size->8)
@650spinit                               = 0x002DDD20; // allow_duplicated:True (Size->8)     
@678spinit                               = 0x002DDD28; // allow_duplicated:True (Size->10)
// spload.c .rodata
@97spload                                = 0x002DDD40; // allow_duplicated:True (Size->18)
@98spload                                = 0x002DDD58; // allow_duplicated:True (Size->13)
@99spload                                = 0x002DDD70; // allow_duplicated:True (Size->20)
@111spload                               = 0x002DDD88; // allow_duplicated:True (Size->3)
@124spload                               = 0x002DDD90; // allow_duplicated:True (Size->12)
@125spload                               = 0x002DDDA0; // allow_duplicated:True (Size->14)
@126spload                               = 0x002DDDB0; // allow_duplicated:True (Size->10)
@127spload                               = 0x002DDDC0; // allow_duplicated:True (Size->11)
@128spload                               = 0x002DDDD0; // allow_duplicated:True (Size->15)
@129spload                               = 0x002DDDE0; // allow_duplicated:True (Size->7)
@130spload                               = 0x002DDDE8; // allow_duplicated:True (Size->13)
@131spload                               = 0x002DDDF8; // allow_duplicated:True (Size->7)
@132spload                               = 0x002DDE00; // allow_duplicated:True (Size->24)
@133spload                               = 0x002DDE18; // allow_duplicated:True (Size->5)
@134spload                               = 0x002DDE20; // allow_duplicated:True (Size->12)
@135spload                               = 0x002DDE30; // allow_duplicated:True (Size->14)
@136spload                               = 0x002DDE40; // allow_duplicated:True (Size->12)
@137spload                               = 0x002DDE50; // allow_duplicated:True (Size->13)
@138spload                               = 0x002DDE60; // allow_duplicated:True (Size->14)
@139spload                               = 0x002DDE70; // allow_duplicated:True (Size->6)
@140spload                               = 0x002DDE78; // allow_duplicated:True (Size->11)
@141spload                               = 0x002DDE88; // allow_duplicated:True (Size->8)
@142spload                               = 0x002DDE90; // allow_duplicated:True (Size->31)
@143spload                               = 0x002DDEB0; // allow_duplicated:True (Size->6)
@144spload                               = 0x002DDEB8; // allow_duplicated:True (Size->7)
@145spload                               = 0x002DDEC0; // allow_duplicated:True (Size->12)
@146spload                               = 0x002DDED0; // allow_duplicated:True (Size->21)
@147spload                               = 0x002DDEE8; // allow_duplicated:True (Size->10)
@148spload                               = 0x002DDEF8; // allow_duplicated:True (Size->13)
@149spload                               = 0x002DDF08; // allow_duplicated:True (Size->13)
@150spload                               = 0x002DDF18; // allow_duplicated:True (Size->7)
@151spload                               = 0x002DDF20; // allow_duplicated:True (Size->21)
@152spload                               = 0x002DDF38; // allow_duplicated:True (Size->2)
@153spload                               = 0x002DDF40; // allow_duplicated:True (Size->26)
@154spload                               = 0x002DDF60; // allow_duplicated:True (Size->6)
@188spload                               = 0x002DDF68; // allow_duplicated:True (Size->5)
@189spload                               = 0x002DDF70; // allow_duplicated:True (Size->2)
@190spload                               = 0x002DDF78; // allow_duplicated:True (Size->5)
@191spload                               = 0x002DDF80; // allow_duplicated:True (Size->4)
@192spload                               = 0x002DDF88; // allow_duplicated:True (Size->3)
@193spload                               = 0x002DDF90; // allow_duplicated:True (Size->2)
@194spload                               = 0x002DDF98; // allow_duplicated:True (Size->5)
@195spload                               = 0x002DDFA0; // allow_duplicated:True (Size->7)
@197spload                               = 0x002DDFB0; // allow_duplicated:True (Size->24)
@201spload                               = 0x002DDFC8; // allow_duplicated:True (Size->11)
@202spload                               = 0x002DDFD8; // allow_duplicated:True (Size->10)
@203spload                               = 0x002DDFE8; // allow_duplicated:True (Size->15)
@204spload                               = 0x002DDFF8; // allow_duplicated:True (Size->15)
@205spload                               = 0x002DE008; // allow_duplicated:True (Size->1)
@206spload                               = 0x002DE010; // allow_duplicated:True (Size->7)
@207spload                               = 0x002DE018; // allow_duplicated:True (Size->13)
@208spload                               = 0x002DE028; // allow_duplicated:True (Size->8)
@209spload                               = 0x002DE030; // allow_duplicated:True (Size->14)
@210spload                               = 0x002DE040; // allow_duplicated:True (Size->13)
@211spload                               = 0x002DE050; // allow_duplicated:True (Size->18)
@212spload                               = 0x002DE068; // allow_duplicated:True (Size->13)
@213spload                               = 0x002DE080; // allow_duplicated:True (Size->16)
@214spload                               = 0x002DE090; // allow_duplicated:True (Size->9)
@216spload                               = 0x002DE0A0; // allow_duplicated:True (Size->9)
@217spload                               = 0x002DE0B0; // allow_duplicated:True (Size->21)
@218spload                               = 0x002DE0C8; // allow_duplicated:True (Size->9)
@219spload                               = 0x002DE0E0; // allow_duplicated:True (Size->18)
@220spload                               = 0x002DE0F8; // allow_duplicated:True (Size->9)
@221spload                               = 0x002DE110; // allow_duplicated:True (Size->16)
@222spload                               = 0x002DE120; // allow_duplicated:True (Size->8)
@223spload                               = 0x002DE128; // allow_duplicated:True (Size->14)
@224spload                               = 0x002DE138; // allow_duplicated:True (Size->9)
@225spload                               = 0x002DE148; // allow_duplicated:True (Size->13)
@226spload                               = 0x002DE158; // allow_duplicated:True (Size->9)
@227spload                               = 0x002DE170; // allow_duplicated:True (Size->19)
@228spload                               = 0x002DE188; // allow_duplicated:True (Size->9)
@229spload                               = 0x002DE1A0; // allow_duplicated:True (Size->20)
@230spload                               = 0x002DE1B8; // allow_duplicated:True (Size->9)
@231spload                               = 0x002DE1C8; // allow_duplicated:True (Size->8)
@232spload                               = 0x002DE1D0; // allow_duplicated:True (Size->19)
@233spload                               = 0x002DE1E8; // allow_duplicated:True (Size->8)
@234spload                               = 0x002DE1F0; // allow_duplicated:True (Size->18)
@235spload                               = 0x002DE208; // allow_duplicated:True (Size->8)
@236spload                               = 0x002DE210; // allow_duplicated:True (Size->15)
@237spload                               = 0x002DE220; // allow_duplicated:True (Size->9)
@238spload                               = 0x002DE230; // allow_duplicated:True (Size->14)
@239spload                               = 0x002DE240; // allow_duplicated:True (Size->9)
@240spload                               = 0x002DE250; // allow_duplicated:True (Size->8)
@241spload                               = 0x002DE258; // allow_duplicated:True (Size->8)
@242spload                               = 0x002DE260; // allow_duplicated:True (Size->8)
@243spload                               = 0x002DE268; // allow_duplicated:True (Size->8)
@244spload                               = 0x002DE270; // allow_duplicated:True (Size->8)
@245spload                               = 0x002DE280; // allow_duplicated:True (Size->19)
@246spload                               = 0x002DE298; // allow_duplicated:True (Size->8)
@247spload                               = 0x002DE2A0; // allow_duplicated:True (Size->8)
@248spload                               = 0x002DE2A8; // allow_duplicated:True (Size->8)
@249spload                               = 0x002DE2B0; // allow_duplicated:True (Size->21)
@250spload                               = 0x002DE2C8; // allow_duplicated:True (Size->8)
@251spload                               = 0x002DE2D0; // allow_duplicated:True (Size->19)
@252spload                               = 0x002DE2E8; // allow_duplicated:True (Size->8)
@283spload                               = 0x002DE2F0; // allow_duplicated:True (Size->8)
@284spload                               = 0x002DE2F8; // allow_duplicated:True (Size->6)
@294spload                               = 0x002DE300; // allow_duplicated:True (Size->10)
@295spload                               = 0x002DE310; // allow_duplicated:True (Size->9)
@296spload                               = 0x002DE320; // allow_duplicated:True (Size->5)
@297spload                               = 0x002DE328; // allow_duplicated:True (Size->6)
@298spload                               = 0x002DE330; // allow_duplicated:True (Size->6)
@299spload                               = 0x002DE338; // allow_duplicated:True (Size->5)
@300spload                               = 0x002DE340; // allow_duplicated:True (Size->6)
@302spload                               = 0x002DE350; // allow_duplicated:True (Size->35)
@303spload                               = 0x002DE380; // allow_duplicated:True (Size->32)
@304spload                               = 0x002DE3A0; // allow_duplicated:True (Size->25)
@305spload                               = 0x002DE3C0; // allow_duplicated:True (Size->25)
@306spload                               = 0x002DE3E0; // allow_duplicated:True (Size->28)
@307spload                               = 0x002DE400; // allow_duplicated:True (Size->34)
@308spload                               = 0x002DE428; // allow_duplicated:True (Size->15)
@309spload                               = 0x002DE440; // allow_duplicated:True (Size->38)
@310spload                               = 0x002DE470; // allow_duplicated:True (Size->23)
@311spload                               = 0x002DE490; // allow_duplicated:True (Size->35)
@312spload                               = 0x002DE4C0; // allow_duplicated:True (Size->36)
@313spload                               = 0x002DE4F0; // allow_duplicated:True (Size->35)
@314spload                               = 0x002DE520; // allow_duplicated:True (Size->27)
@315spload                               = 0x002DE540; // allow_duplicated:True (Size->28)
@316spload                               = 0x002DE560; // allow_duplicated:True (Size->25)
@317spload                               = 0x002DE580; // allow_duplicated:True (Size->31)
@318spload                               = 0x002DE5A0; // allow_duplicated:True (Size->13)
@319spload                               = 0x002DE5B0; // allow_duplicated:True (Size->36)
@320spload                               = 0x002DE5E0; // allow_duplicated:True (Size->35)
@321spload                               = 0x002DE610; // allow_duplicated:True (Size->30)
@322spload                               = 0x002DE630; // allow_duplicated:True (Size->32)
@323spload                               = 0x002DE650; // allow_duplicated:True (Size->15)
@324spload                               = 0x002DE660; // allow_duplicated:True (Size->30)
@325spload                               = 0x002DE680; // allow_duplicated:True (Size->31)
@326spload                               = 0x002DE6A0; // allow_duplicated:True (Size->21)
@327spload                               = 0x002DE6C0; // allow_duplicated:True (Size->25)
@328spload                               = 0x002DE6E0; // allow_duplicated:True (Size->22)
@329spload                               = 0x002DE700; // allow_duplicated:True (Size->25)
@330spload                               = 0x002DE720; // allow_duplicated:True (Size->22)
@331spload                               = 0x002DE738; // allow_duplicated:True (Size->11)
@332spload                               = 0x002DE750; // allow_duplicated:True (Size->23)
@333spload                               = 0x002DE770; // allow_duplicated:True (Size->17)
@334spload                               = 0x002DE790; // allow_duplicated:True (Size->32)
@335spload                               = 0x002DE7B0; // allow_duplicated:True (Size->28)
@336spload                               = 0x002DE7D0; // allow_duplicated:True (Size->31)
@337spload                               = 0x002DE7F0; // allow_duplicated:True (Size->18)
@369spload                               = 0x002DE808; // allow_duplicated:True (Size->3)
@442spload                               = 0x002DE810; // allow_duplicated:True (Size->48)
@757spload                               = 0x002DE840; // allow_duplicated:True (Size->24)
// ktrider.c .rodata
@86                                      = 0x002DE860; // allow_duplicated:True (Size->32)
// spfree.c .rodata
@731                                     = 0x002DE880; // allow_duplicated:True (Size->28)
@730                                     = 0x002DE8A0; // allow_duplicated:True (Size->36)
// tmevent.c .rodata
@50tmevent                               = 0x002DE8D0; // allow_duplicated:True (Size->32)
// aycomfnk.c .rodata
@115aycomfnk                             = 0x002DE8F0; // allow_duplicated:True (Size->7)
@116aycomfnk                             = 0x002DE8F8; // allow_duplicated:True (Size->5)
@117aycomfnk                             = 0x002DE900; // allow_duplicated:True (Size->12)
@118aycomfnk                             = 0x002DE910; // allow_duplicated:True (Size->7)
@119aycomfnk                             = 0x002DE918; // allow_duplicated:True (Size->6)
@120aycomfnk                             = 0x002DE920; // allow_duplicated:True (Size->12)
@121aycomfnk                             = 0x002DE930; // allow_duplicated:True (Size->14)
@122aycomfnk                             = 0x002DE940; // allow_duplicated:True (Size->3)
@123aycomfnk                             = 0x002DE948; // allow_duplicated:True (Size->7)
@124aycomfnk                             = 0x002DE950; // allow_duplicated:True (Size->11)
@125aycomfnk                             = 0x002DE960; // allow_duplicated:True (Size->8)
@126aycomfnk                             = 0x002DE968; // allow_duplicated:True (Size->8)
@127aycomfnk                             = 0x002DE970; // allow_duplicated:True (Size->10)
@128aycomfnk                             = 0x002DE980; // allow_duplicated:True (Size->17)
@129aycomfnk                             = 0x002DE998; // allow_duplicated:True (Size->9)
@130aycomfnk                             = 0x002DE9A8; // allow_duplicated:True (Size->7)
@131aycomfnk                             = 0x002DE9B0; // allow_duplicated:True (Size->12)
@132aycomfnk                             = 0x002DE9C0; // allow_duplicated:True (Size->10)
@133aycomfnk                             = 0x002DE9D0; // allow_duplicated:True (Size->16)
@134aycomfnk                             = 0x002DE9E0; // allow_duplicated:True (Size->17)
@174aycomfnk                             = 0x002DEA00; // allow_duplicated:True (Size->28)
@291aycomfnk                             = 0x002DEA20; // allow_duplicated:True (Size->2)
@292aycomfnk                             = 0x002DEA28; // allow_duplicated:True (Size->5)
@293aycomfnk                             = 0x002DEA30; // allow_duplicated:True (Size->3)
// aymcard.c .rodata
@11aymcard                               = 0x002DEA38; // allow_duplicated:True (Size->13)
@28aymcard                               = 0x002DEA48; // allow_duplicated:True (Size->4)
@29aymcard                               = 0x002DEA50; // allow_duplicated:True (Size->3)
@30aymcard                               = 0x002DEA58; // allow_duplicated:True (Size->3)
@31aymcard                               = 0x002DEA60; // allow_duplicated:True (Size->5)
@32aymcard                               = 0x002DEA68; // allow_duplicated:True (Size->4)
@33aymcard                               = 0x002DEA70; // allow_duplicated:True (Size->4)
@217aymcard                              = 0x002DEA78; // allow_duplicated:True (Size->6)
@218aymcard                              = 0x002DEA80; // allow_duplicated:True (Size->6)
@219aymcard                              = 0x002DEA88; // allow_duplicated:True (Size->6)
@220aymcard                              = 0x002DEA90; // allow_duplicated:True (Size->9)
@221aymcard                              = 0x002DEAA0; // allow_duplicated:True (Size->11)
@222aymcard                              = 0x002DEAB0; // allow_duplicated:True (Size->11)
@223aymcard                              = 0x002DEAC0; // allow_duplicated:True (Size->11)
@224aymcard                              = 0x002DEAD0; // allow_duplicated:True (Size->7)
@225aymcard                              = 0x002DEAE0; // allow_duplicated:True (Size->28)
@233aymcard                              = 0x002DEB00; // allow_duplicated:True (Size->9)
@234aymcard                              = 0x002DEB10; // allow_duplicated:True (Size->11)
@235aymcard                              = 0x002DEB20; // allow_duplicated:True (Size->11)
@439aymcard                              = 0x002DEB30; // allow_duplicated:True (Size->7)     
@440aymcard                              = 0x002DEB38; // allow_duplicated:True (Size->3)
@441aymcard                              = 0x002DEB40; // allow_duplicated:True (Size->10)
@442aymcard                              = 0x002DEB50; // allow_duplicated:True (Size->15)
@443aymcard                              = 0x002DEB60; // allow_duplicated:True (Size->36)
@727aymcard                              = 0x002DEB88; // allow_duplicated:True (Size->5)
@728aymcard                              = 0x002DEB90; // allow_duplicated:True (Size->29)
@729aymcard                              = 0x002DEBB0; // allow_duplicated:True (Size->16)
@730aymcard                              = 0x002DEBC0; // allow_duplicated:True (Size->10)
@731aymcard                              = 0x002DEBD0; // allow_duplicated:True (Size->14)
@732aymcard                              = 0x002DEBE0; // allow_duplicated:True (Size->2)
@734aymcard                              = 0x002DEBF0; // allow_duplicated:True (Size->24)
@733aymcard                              = 0x002DEC10; // allow_duplicated:True (Size->44)
@742aymcard                              = 0x002DEC40; // allow_duplicated:True (Size->9)     
@743aymcard                              = 0x002DEC50; // allow_duplicated:True (Size->15)    
@744aymcard                              = 0x002DEC60; // allow_duplicated:True (Size->16)    
@950aymcard                              = 0x002DEC70; // allow_duplicated:True (Size->7)
@951aymcard                              = 0x002DEC78; // allow_duplicated:True (Size->10)
@952aymcard                              = 0x002DEC88; // allow_duplicated:True (Size->10)
@953aymcard                              = 0x002DEC98; // allow_duplicated:True (Size->10)
@954aymcard                              = 0x002DECB0; // allow_duplicated:True (Size->40)
@1238aymcard                             = 0x002DECE0; // allow_duplicated:True (Size->29)
@1240aymcard                             = 0x002DED00; // allow_duplicated:True (Size->24)
@1239aymcard                             = 0x002DED20; // allow_duplicated:True (Size->44)
@1244aymcard                             = 0x002DED50; // allow_duplicated:True (Size->14)
@1245aymcard                             = 0x002DED60; // allow_duplicated:True (Size->5)
@1246aymcard                             = 0x002DED68; // allow_duplicated:True (Size->5)
@1247aymcard                             = 0x002DED70; // allow_duplicated:True (Size->8)
@1248aymcard                             = 0x002DED78; // allow_duplicated:True (Size->15)
@1249aymcard                             = 0x002DED90; // allow_duplicated:True (Size->23)
@1250aymcard                             = 0x002DEDA8; // allow_duplicated:True (Size->13)
@1251aymcard                             = 0x002DEDB8; // allow_duplicated:True (Size->6)
@1252aymcard                             = 0x002DEDC0; // allow_duplicated:True (Size->6)
@1253aymcard                             = 0x002DEDC8; // allow_duplicated:True (Size->12)
@1254aymcard                             = 0x002DEDE0; // allow_duplicated:True (Size->16)
@1255aymcard                             = 0x002DEDF0; // allow_duplicated:True (Size->24)
@1256aymcard                             = 0x002DEE10; // allow_duplicated:True (Size->24)
@1257aymcard                             = 0x002DEE28; // allow_duplicated:True (Size->8)
@1258aymcard                             = 0x002DEE30; // allow_duplicated:True (Size->14)
@1259aymcard                             = 0x002DEE40; // allow_duplicated:True (Size->19)
@1260aymcard                             = 0x002DEE60; // allow_duplicated:True (Size->24)
@1325aymcard                             = 0x002DEE78; // allow_duplicated:True (Size->11)
@1326aymcard                             = 0x002DEE88; // allow_duplicated:True (Size->4)
@1327aymcard                             = 0x002DEE90; // allow_duplicated:True (Size->4)
@1328aymcard                             = 0x002DEE98; // allow_duplicated:True (Size->4)
@1329aymcard                             = 0x002DEEA0; // allow_duplicated:True (Size->14)
@1330aymcard                             = 0x002DEEB0; // allow_duplicated:True (Size->11)
@1458aymcard                             = 0x002DEEC0; // allow_duplicated:True (Size->38)
@1540aymcard                             = 0x002DEEF0; // allow_duplicated:True (Size->16)
@1541aymcard                             = 0x002DEF00; // allow_duplicated:True (Size->16)
@1542aymcard                             = 0x002DEF10; // allow_duplicated:True (Size->14)
@1543aymcard                             = 0x002DEF20; // allow_duplicated:True (Size->12)
@1544aymcard                             = 0x002DEF30; // allow_duplicated:True (Size->12)
@1545aymcard                             = 0x002DEF40; // allow_duplicated:True (Size->6)
// aymodsel.c .rodata
@160aymodsel                             = 0x002DEF50; // allow_duplicated:True (Size->48)
@255aymodsel                             = 0x002DEF80; // allow_duplicated:True (Size->48)
@479aymodsel                             = 0x002DEFB0; // allow_duplicated:True (Size->28)
// aymovie.c .rodata
@14aymovie                               = 0x002DEFD0; // allow_duplicated:True (Size->14)
@15aymovie                               = 0x002DEFE0; // allow_duplicated:True (Size->19)
@16aymovie                               = 0x002DF000; // allow_duplicated:True (Size->17)
@17aymovie                               = 0x002DF020; // allow_duplicated:True (Size->17)
@18aymovie                               = 0x002DF040; // allow_duplicated:True (Size->17)
@19aymovie                               = 0x002DF060; // allow_duplicated:True (Size->17)
@20aymovie                               = 0x002DF080; // allow_duplicated:True (Size->17)
@21aymovie                               = 0x002DF0A0; // allow_duplicated:True (Size->17)
@22aymovie                               = 0x002DF0C0; // allow_duplicated:True (Size->17)
@23aymovie                               = 0x002DF0E0; // allow_duplicated:True (Size->17)
@24aymovie                               = 0x002DF100; // allow_duplicated:True (Size->17)
@25aymovie                               = 0x002DF120; // allow_duplicated:True (Size->17)
@26aymovie                               = 0x002DF140; // allow_duplicated:True (Size->17)
@27aymovie                               = 0x002DF160; // allow_duplicated:True (Size->17)
@28aymovie                               = 0x002DF180; // allow_duplicated:True (Size->17)
@29aymovie                               = 0x002DF1A0; // allow_duplicated:True (Size->19)
@30aymovie                               = 0x002DF1C0; // allow_duplicated:True (Size->19)
@31aymovie                               = 0x002DF1E0; // allow_duplicated:True (Size->16)
@45aymovie                               = 0x002DF1F0; // allow_duplicated:True (Size->44)    
@46aymovie                               = 0x002DF220; // allow_duplicated:True (Size->40)
@47aymovie                               = 0x002DF250; // allow_duplicated:True (Size->49)
@48aymovie                               = 0x002DF290; // allow_duplicated:True (Size->41)
@49aymovie                               = 0x002DF2C0; // allow_duplicated:True (Size->46)
@50aymovie                               = 0x002DF2F0; // allow_duplicated:True (Size->38)
@51aymovie                               = 0x002DF320; // allow_duplicated:True (Size->37)
@52aymovie                               = 0x002DF350; // allow_duplicated:True (Size->21)
@53aymovie                               = 0x002DF370; // allow_duplicated:True (Size->45)
@54aymovie                               = 0x002DF3A0; // allow_duplicated:True (Size->37)
@55aymovie                               = 0x002DF3D0; // allow_duplicated:True (Size->45)
@56aymovie                               = 0x002DF400; // allow_duplicated:True (Size->44)
@57aymovie                               = 0x002DF430; // allow_duplicated:True (Size->34)
@58aymovie                               = 0x002DF460; // allow_duplicated:True (Size->43)
@59aymovie                               = 0x002DF490; // allow_duplicated:True (Size->45)
@60aymovie                               = 0x002DF4C0; // allow_duplicated:True (Size->39)
@61aymovie                               = 0x002DF4F0; // allow_duplicated:True (Size->42)
@62aymovie                               = 0x002DF520; // allow_duplicated:True (Size->37)
@63aymovie                               = 0x002DF550; // allow_duplicated:True (Size->38)
@64aymovie                               = 0x002DF580; // allow_duplicated:True (Size->38)
@65aymovie                               = 0x002DF5B0; // allow_duplicated:True (Size->45)    
@66aymovie                               = 0x002DF5E0; // allow_duplicated:True (Size->31)    
@67aymovie                               = 0x002DF600; // allow_duplicated:True (Size->20)
@68aymovie                               = 0x002DF620; // allow_duplicated:True (Size->41)
@69aymovie                               = 0x002DF650; // allow_duplicated:True (Size->35)
@70aymovie                               = 0x002DF680; // allow_duplicated:True (Size->50)
@71aymovie                               = 0x002DF6C0; // allow_duplicated:True (Size->37)
@72aymovie                               = 0x002DF6F0; // allow_duplicated:True (Size->36)
@73aymovie                               = 0x002DF720; // allow_duplicated:True (Size->50)
@74aymovie                               = 0x002DF760; // allow_duplicated:True (Size->39)    
@75aymovie                               = 0x002DF790; // allow_duplicated:True (Size->40)    
@76aymovie                               = 0x002DF7C0; // allow_duplicated:True (Size->38)
@77aymovie                               = 0x002DF7F0; // allow_duplicated:True (Size->38)
@78aymovie                               = 0x002DF820; // allow_duplicated:True (Size->26)
// aychrsel.c .rodata
@33aychrsel                              = 0x002DF840; // allow_duplicated:True (Size->12)
@34aychrsel                              = 0x002DF850; // allow_duplicated:True (Size->10)
@35aychrsel                              = 0x002DF860; // allow_duplicated:True (Size->20)
@290aychrsel                             = 0x002DF880; // allow_duplicated:True (Size->56)
@625aychrsel                             = 0x002DF8C0; // allow_duplicated:True (Size->56)
@790aychrsel                             = 0x002DF900; // allow_duplicated:True (Size->56)
@796aychrsel                             = 0x002DF938; // allow_duplicated:True (Size->6)
@797aychrsel                             = 0x002DF940; // allow_duplicated:True (Size->5)
@798aychrsel                             = 0x002DF948; // allow_duplicated:True (Size->6)
@799aychrsel                             = 0x002DF950; // allow_duplicated:True (Size->8)
@800aychrsel                             = 0x002DF958; // allow_duplicated:True (Size->8)
@801aychrsel                             = 0x002DF960; // allow_duplicated:True (Size->6)
@802aychrsel                             = 0x002DF968; // allow_duplicated:True (Size->5)
@803aychrsel                             = 0x002DF970; // allow_duplicated:True (Size->6)
@804aychrsel                             = 0x002DF978; // allow_duplicated:True (Size->8)
@805aychrsel                             = 0x002DF980; // allow_duplicated:True (Size->8)
@806aychrsel                             = 0x002DF988; // allow_duplicated:True (Size->9)
@807aychrsel                             = 0x002DF998; // allow_duplicated:True (Size->8)
@808aychrsel                             = 0x002DF9A0; // allow_duplicated:True (Size->10)
@809aychrsel                             = 0x002DF9B0; // allow_duplicated:True (Size->10)
@811aychrsel                             = 0x002DF9C0; // allow_duplicated:True (Size->10)
@812aychrsel                             = 0x002DF9D0; // allow_duplicated:True (Size->8)
@813aychrsel                             = 0x002DF9D8; // allow_duplicated:True (Size->11)
@814aychrsel                             = 0x002DF9E8; // allow_duplicated:True (Size->8)
@815aychrsel                             = 0x002DF9F0; // allow_duplicated:True (Size->10)
@816aychrsel                             = 0x002DFA00; // allow_duplicated:True (Size->7)
@945aychrsel                             = 0x002DFA08; // allow_duplicated:True (Size->9)
@946aychrsel                             = 0x002DFA18; // allow_duplicated:True (Size->6)
@947aychrsel                             = 0x002DFA20; // allow_duplicated:True (Size->6)
@948aychrsel                             = 0x002DFA28; // allow_duplicated:True (Size->10)
@949aychrsel                             = 0x002DFA38; // allow_duplicated:True (Size->7)
@950aychrsel                             = 0x002DFA40; // allow_duplicated:True (Size->7)
@982aychrsel                             = 0x002DFA48; // allow_duplicated:True (Size->2)
@983aychrsel                             = 0x002DFA50; // allow_duplicated:True (Size->4)
@987aychrsel                             = 0x002DFA60; // allow_duplicated:True (Size->18)
@988aychrsel                             = 0x002DFA78; // allow_duplicated:True (Size->10)
@989aychrsel                             = 0x002DFA88; // allow_duplicated:True (Size->12)
@990aychrsel                             = 0x002DFAA0; // allow_duplicated:True (Size->23)
@991aychrsel                             = 0x002DFAC0; // allow_duplicated:True (Size->18)
@992aychrsel                             = 0x002DFAE0; // allow_duplicated:True (Size->18)
@993aychrsel                             = 0x002DFAF8; // allow_duplicated:True (Size->12)
@994aychrsel                             = 0x002DFB10; // allow_duplicated:True (Size->25)
@995aychrsel                             = 0x002DFB30; // allow_duplicated:True (Size->15)
@996aychrsel                             = 0x002DFB40; // allow_duplicated:True (Size->17)
@997aychrsel                             = 0x002DFB58; // allow_duplicated:True (Size->14)
@1062aychrsel                            = 0x002DFB68; // allow_duplicated:True (Size->3)
@1217aychrsel                            = 0x002DFB70; // allow_duplicated:True (Size->8)
@1218aychrsel                            = 0x002DFB78; // allow_duplicated:True (Size->6)
@1222aychrsel                            = 0x002DFB80; // allow_duplicated:True (Size->11)
@1223aychrsel                            = 0x002DFB90; // allow_duplicated:True (Size->10)
@1224aychrsel                            = 0x002DFBA0; // allow_duplicated:True (Size->13)
@1225aychrsel                            = 0x002DFBB0; // allow_duplicated:True (Size->21)
@1226aychrsel                            = 0x002DFBC8; // allow_duplicated:True (Size->13)
@1227aychrsel                            = 0x002DFBD8; // allow_duplicated:True (Size->15)
@1228aychrsel                            = 0x002DFBE8; // allow_duplicated:True (Size->13)
@1229aychrsel                            = 0x002DFBF8; // allow_duplicated:True (Size->12)
@1413aychrsel                            = 0x002DFC08; // allow_duplicated:True (Size->3)
@1414aychrsel                            = 0x002DFC10; // allow_duplicated:True (Size->56)
@1422aychrsel                            = 0x002DFC48; // allow_duplicated:True (Size->12)
@1423aychrsel                            = 0x002DFC58; // allow_duplicated:True (Size->13)
@1424aychrsel                            = 0x002DFC68; // allow_duplicated:True (Size->10)
@1425aychrsel                            = 0x002DFC78; // allow_duplicated:True (Size->10)
@1426aychrsel                            = 0x002DFC90; // allow_duplicated:True (Size->16)
@1427aychrsel                            = 0x002DFCA0; // allow_duplicated:True (Size->15)
@1428aychrsel                            = 0x002DFCB0; // allow_duplicated:True (Size->11)
@1429aychrsel                            = 0x002DFCC0; // allow_duplicated:True (Size->17)
@1430aychrsel                            = 0x002DFCE0; // allow_duplicated:True (Size->17)
@1645aychrsel                            = 0x002DFCF8; // allow_duplicated:True (Size->4)
@1646aychrsel                            = 0x002DFD00; // allow_duplicated:True (Size->4)
@1688aychrsel                            = 0x002DFD10; // allow_duplicated:True (Size->56)
@1846aychrsel                            = 0x002DFD50; // allow_duplicated:True (Size->24)
@1863aychrsel                            = 0x002DFD68; // allow_duplicated:True (Size->14)
@1864aychrsel                            = 0x002DFD78; // allow_duplicated:True (Size->10)
@1865aychrsel                            = 0x002DFD88; // allow_duplicated:True (Size->11)
@1866aychrsel                            = 0x002DFD98; // allow_duplicated:True (Size->15)
@1867aychrsel                            = 0x002DFDA8; // allow_duplicated:True (Size->7)
@1868aychrsel                            = 0x002DFDB0; // allow_duplicated:True (Size->21)
@1869aychrsel                            = 0x002DFDD0; // allow_duplicated:True (Size->24)
@1870aychrsel                            = 0x002DFDE8; // allow_duplicated:True (Size->12)
@1871aychrsel                            = 0x002DFDF8; // allow_duplicated:True (Size->5)
@1872aychrsel                            = 0x002DFE00; // allow_duplicated:True (Size->14)
@1873aychrsel                            = 0x002DFE10; // allow_duplicated:True (Size->12)
@1874aychrsel                            = 0x002DFE20; // allow_duplicated:True (Size->13)
@1875aychrsel                            = 0x002DFE30; // allow_duplicated:True (Size->14)
@1876aychrsel                            = 0x002DFE40; // allow_duplicated:True (Size->6)
@1877aychrsel                            = 0x002DFE50; // allow_duplicated:True (Size->20)
@1878aychrsel                            = 0x002DFE70; // allow_duplicated:True (Size->31)
@1879aychrsel                            = 0x002DFE90; // allow_duplicated:True (Size->11)
@1880aychrsel                            = 0x002DFEA0; // allow_duplicated:True (Size->6)
@1881aychrsel                            = 0x002DFEA8; // allow_duplicated:True (Size->7)
@1882aychrsel                            = 0x002DFEB0; // allow_duplicated:True (Size->21)
@1883aychrsel                            = 0x002DFEC8; // allow_duplicated:True (Size->10)
@1884aychrsel                            = 0x002DFED8; // allow_duplicated:True (Size->13)
@1885aychrsel                            = 0x002DFEE8; // allow_duplicated:True (Size->13)
@1886aychrsel                            = 0x002DFEF8; // allow_duplicated:True (Size->7)
@1887aychrsel                            = 0x002DFF00; // allow_duplicated:True (Size->24)
@1888aychrsel                            = 0x002DFF20; // allow_duplicated:True (Size->26)
@1889aychrsel                            = 0x002DFF40; // allow_duplicated:True (Size->12)
@1890aychrsel                            = 0x002DFF50; // allow_duplicated:True (Size->6)
@1950aychrsel                            = 0x002DFF58; // allow_duplicated:True (Size->2)
@1951aychrsel                            = 0x002DFF60; // allow_duplicated:True (Size->5)
@11unknown                               = 0x002DFF68; // allow_duplicated:True (Size->12)
@12unknown                               = 0x002DFF78; // allow_duplicated:True (Size->12)
@13unknown                               = 0x002DFF88; // allow_duplicated:True (Size->8)
@14unknown                               = 0x002DFF90; // allow_duplicated:True (Size->13)
@15unknown                               = 0x002DFFA0; // allow_duplicated:True (Size->10)
@16unknown                               = 0x002DFFB0; // allow_duplicated:True (Size->11)
@17unknown                               = 0x002DFFC0; // allow_duplicated:True (Size->13)
@18unknown                               = 0x002DFFD0; // allow_duplicated:True (Size->16)
@19unknown                               = 0x002DFFE0; // allow_duplicated:True (Size->10)
@20unknown                               = 0x002DFFF0; // allow_duplicated:True (Size->11)
@21unknown                               = 0x002E0000; // allow_duplicated:True (Size->14)
@22unknown                               = 0x002E0010; // allow_duplicated:True (Size->33)
@23unknown                               = 0x002E0038; // allow_duplicated:True (Size->11)
@24unknown                               = 0x002E0048; // allow_duplicated:True (Size->9)
@25unknown                               = 0x002E0058; // allow_duplicated:True (Size->15)
@26unknown                               = 0x002E0068; // allow_duplicated:True (Size->11)
@27unknown                               = 0x002E0078; // allow_duplicated:True (Size->11)
@28unknown                               = 0x002E0088; // allow_duplicated:True (Size->15)
@29unknown                               = 0x002E0098; // allow_duplicated:True (Size->10)
@30unknown                               = 0x002E00A8; // allow_duplicated:True (Size->10)
@31unknown                               = 0x002E00B8; // allow_duplicated:True (Size->14)
@32unknown                               = 0x002E00C8; // allow_duplicated:True (Size->8)
@33unknown                               = 0x002E00D0; // allow_duplicated:True (Size->8)
@34unknown                               = 0x002E00D8; // allow_duplicated:True (Size->13)
// ayoption.c .rodata
@371ayoption                             = 0x002E00F0; // allow_duplicated:True (Size->60)
@370ayoption                             = 0x002E0130; // allow_duplicated:True (Size->188)
@377ayoption                             = 0x002E01F0; // allow_duplicated:True (Size->3)
@416ayoption                             = 0x002E01F8; // allow_duplicated:True (Size->10)
@417ayoption                             = 0x002E0208; // allow_duplicated:True (Size->12)
@418ayoption                             = 0x002E0218; // allow_duplicated:True (Size->13)
@419ayoption                             = 0x002E0228; // allow_duplicated:True (Size->5)
@420ayoption                             = 0x002E0230; // allow_duplicated:True (Size->13)
@421ayoption                             = 0x002E0240; // allow_duplicated:True (Size->6)
@422ayoption                             = 0x002E0248; // allow_duplicated:True (Size->12)
@423ayoption                             = 0x002E0258; // allow_duplicated:True (Size->6)
@424ayoption                             = 0x002E0260; // allow_duplicated:True (Size->11)
@425ayoption                             = 0x002E0270; // allow_duplicated:True (Size->8)
@426ayoption                             = 0x002E0280; // allow_duplicated:True (Size->17)
@427ayoption                             = 0x002E0298; // allow_duplicated:True (Size->7)
@625ayoption                             = 0x002E02A0; // allow_duplicated:True (Size->4)
@626ayoption                             = 0x002E02A8; // allow_duplicated:True (Size->8)
@729ayoption                             = 0x002E02B0; // allow_duplicated:True (Size->188)
@735ayoption                             = 0x002E0370; // allow_duplicated:True (Size->10)
@736ayoption                             = 0x002E0380; // allow_duplicated:True (Size->10)
@737ayoption                             = 0x002E0390; // allow_duplicated:True (Size->7)
@738ayoption                             = 0x002E0398; // allow_duplicated:True (Size->13)
@739ayoption                             = 0x002E03A8; // allow_duplicated:True (Size->14)
@740ayoption                             = 0x002E03B8; // allow_duplicated:True (Size->12)    
@741ayoption                             = 0x002E03C8; // allow_duplicated:True (Size->13)    
@742ayoption                             = 0x002E03D8; // allow_duplicated:True (Size->7)     
@743ayoption                             = 0x002E03E0; // allow_duplicated:True (Size->13)    
@744ayoption                             = 0x002E03F0; // allow_duplicated:True (Size->14)    
@745ayoption                             = 0x002E0400; // allow_duplicated:True (Size->9)     
@746ayoption                             = 0x002E0410; // allow_duplicated:True (Size->16)    
@747ayoption                             = 0x002E0420; // allow_duplicated:True (Size->9)     
@748ayoption                             = 0x002E0430; // allow_duplicated:True (Size->8)     
@749ayoption                             = 0x002E0438; // allow_duplicated:True (Size->12)    
@750ayoption                             = 0x002E0448; // allow_duplicated:True (Size->12)    
@751ayoption                             = 0x002E0460; // allow_duplicated:True (Size->16)
@752ayoption                             = 0x002E0470; // allow_duplicated:True (Size->15)
@753ayoption                             = 0x002E0480; // allow_duplicated:True (Size->15)
@754ayoption                             = 0x002E0490; // allow_duplicated:True (Size->11)
@755ayoption                             = 0x002E04A0; // allow_duplicated:True (Size->21)
@756ayoption                             = 0x002E04B8; // allow_duplicated:True (Size->6)
@757ayoption                             = 0x002E04C0; // allow_duplicated:True (Size->11)
@758ayoption                             = 0x002E04D0; // allow_duplicated:True (Size->17)
@759ayoption                             = 0x002E04E8; // allow_duplicated:True (Size->15)
@760ayoption                             = 0x002E04F8; // allow_duplicated:True (Size->10)
@761ayoption                             = 0x002E0508; // allow_duplicated:True (Size->12)
@762ayoption                             = 0x002E0520; // allow_duplicated:True (Size->20)
@763ayoption                             = 0x002E0540; // allow_duplicated:True (Size->24)
@764ayoption                             = 0x002E0558; // allow_duplicated:True (Size->14)
@765ayoption                             = 0x002E0568; // allow_duplicated:True (Size->15)
@766ayoption                             = 0x002E0580; // allow_duplicated:True (Size->17)
@767ayoption                             = 0x002E0598; // allow_duplicated:True (Size->15)
@768ayoption                             = 0x002E05A8; // allow_duplicated:True (Size->13)
@769ayoption                             = 0x002E05B8; // allow_duplicated:True (Size->14)
@770ayoption                             = 0x002E05D0; // allow_duplicated:True (Size->21)
@771ayoption                             = 0x002E05E8; // allow_duplicated:True (Size->12)
@772ayoption                             = 0x002E05F8; // allow_duplicated:True (Size->15)
@773ayoption                             = 0x002E0608; // allow_duplicated:True (Size->10)
@774ayoption                             = 0x002E0618; // allow_duplicated:True (Size->9)
@776ayoption                             = 0x002E0628; // allow_duplicated:True (Size->5)
@777ayoption                             = 0x002E0630; // allow_duplicated:True (Size->5)
@778ayoption                             = 0x002E0638; // allow_duplicated:True (Size->4)
@779ayoption                             = 0x002E0640; // allow_duplicated:True (Size->3)
@780ayoption                             = 0x002E0648; // allow_duplicated:True (Size->6)
@781ayoption                             = 0x002E0650; // allow_duplicated:True (Size->7)
@782ayoption                             = 0x002E0658; // allow_duplicated:True (Size->4)
@783ayoption                             = 0x002E0660; // allow_duplicated:True (Size->4)
@784ayoption                             = 0x002E0668; // allow_duplicated:True (Size->6)
@785ayoption                             = 0x002E0670; // allow_duplicated:True (Size->4)
@786ayoption                             = 0x002E0678; // allow_duplicated:True (Size->4)
@1089ayoption                            = 0x002E0680; // allow_duplicated:True (Size->9)
@1090ayoption                            = 0x002E0690; // allow_duplicated:True (Size->9)
@1091ayoption                            = 0x002E06A0; // allow_duplicated:True (Size->10)
@1092ayoption                            = 0x002E06B0; // allow_duplicated:True (Size->10)
@1093ayoption                            = 0x002E06C0; // allow_duplicated:True (Size->9)
@1094ayoption                            = 0x002E06D0; // allow_duplicated:True (Size->9)
@1206ayoption                            = 0x002E06E0; // allow_duplicated:True (Size->24)
@1215ayoption                            = 0x002E0700; // allow_duplicated:True (Size->16)
@1216ayoption                            = 0x002E0710; // allow_duplicated:True (Size->6)
@1217ayoption                            = 0x002E0718; // allow_duplicated:True (Size->4)
@1218ayoption                            = 0x002E0720; // allow_duplicated:True (Size->16)
@1219ayoption                            = 0x002E0730; // allow_duplicated:True (Size->16)
@1400ayoption                            = 0x002E0740; // allow_duplicated:True (Size->36)
@1424ayoption                            = 0x002E0770; // allow_duplicated:True (Size->18)
@1425ayoption                            = 0x002E0788; // allow_duplicated:True (Size->12)
@1426ayoption                            = 0x002E0798; // allow_duplicated:True (Size->7)
@1427ayoption                            = 0x002E07A0; // allow_duplicated:True (Size->20)
@1560ayoption                            = 0x002E07B8; // allow_duplicated:True (Size->6)
@1587ayoption                            = 0x002E07C0; // allow_duplicated:True (Size->8)
@1588ayoption                            = 0x002E07C8; // allow_duplicated:True (Size->13)
@1755ayoption                            = 0x002E07D8; // allow_duplicated:True (Size->3)
@1756ayoption                            = 0x002E07E0; // allow_duplicated:True (Size->2)
@1807ayoption                            = 0x002E07E8; // allow_duplicated:True (Size->4)
@1808ayoption                            = 0x002E07F0; // allow_duplicated:True (Size->4)
@1809ayoption                            = 0x002E07F8; // allow_duplicated:True (Size->4)
@1810ayoption                            = 0x002E0800; // allow_duplicated:True (Size->4)
@1811ayoption                            = 0x002E0808; // allow_duplicated:True (Size->4)
@1812ayoption                            = 0x002E0810; // allow_duplicated:True (Size->4)
@1813ayoption                            = 0x002E0818; // allow_duplicated:True (Size->3)
@1814ayoption                            = 0x002E0820; // allow_duplicated:True (Size->3)
@1815ayoption                            = 0x002E0828; // allow_duplicated:True (Size->3)
@1816ayoption                            = 0x002E0830; // allow_duplicated:True (Size->3)
@1817ayoption                            = 0x002E0838; // allow_duplicated:True (Size->3)
@1818ayoption                            = 0x002E0840; // allow_duplicated:True (Size->3)
@1819ayoption                            = 0x002E0848; // allow_duplicated:True (Size->4)
@1820ayoption                            = 0x002E0850; // allow_duplicated:True (Size->5)
@1821ayoption                            = 0x002E0858; // allow_duplicated:True (Size->5)
@1822ayoption                            = 0x002E0860; // allow_duplicated:True (Size->5)
@1823ayoption                            = 0x002E0868; // allow_duplicated:True (Size->5)
@1824ayoption                            = 0x002E0870; // allow_duplicated:True (Size->5)
@1955ayoption                            = 0x002E0878; // allow_duplicated:True (Size->14)
@1956ayoption                            = 0x002E0888; // allow_duplicated:True (Size->15)
@1957ayoption                            = 0x002E0898; // allow_duplicated:True (Size->13)
@2033ayoption                            = 0x002E08A8; // allow_duplicated:True (Size->10)
@2034ayoption                            = 0x002E08B8; // allow_duplicated:True (Size->14)
@2035ayoption                            = 0x002E08C8; // allow_duplicated:True (Size->11)
@2036ayoption                            = 0x002E08D8; // allow_duplicated:True (Size->12)
@2037ayoption                            = 0x002E08E8; // allow_duplicated:True (Size->5)
@2038ayoption                            = 0x002E08F0; // allow_duplicated:True (Size->10)
@2039ayoption                            = 0x002E0900; // allow_duplicated:True (Size->5)
@2040ayoption                            = 0x002E0908; // allow_duplicated:True (Size->11)
@2041ayoption                            = 0x002E0918; // allow_duplicated:True (Size->12)
@2042ayoption                            = 0x002E0930; // allow_duplicated:True (Size->18)
@2043ayoption                            = 0x002E0948; // allow_duplicated:True (Size->7)
@2044ayoption                            = 0x002E0950; // allow_duplicated:True (Size->22)
@2045ayoption                            = 0x002E0968; // allow_duplicated:True (Size->7)
@2046ayoption                            = 0x002E0970; // allow_duplicated:True (Size->15)
@2047ayoption                            = 0x002E0980; // allow_duplicated:True (Size->13)
@2049ayoption                            = 0x002E0990; // allow_duplicated:True (Size->17)
@2051ayoption                            = 0x002E09A8; // allow_duplicated:True (Size->2)
@2052ayoption                            = 0x002E09B0; // allow_duplicated:True (Size->2)
@2053ayoption                            = 0x002E09B8; // allow_duplicated:True (Size->2)
@2054ayoption                            = 0x002E09C0; // allow_duplicated:True (Size->3)
@2055ayoption                            = 0x002E09C8; // allow_duplicated:True (Size->3)
@2056ayoption                            = 0x002E09D0; // allow_duplicated:True (Size->3)
@2057ayoption                            = 0x002E09D8; // allow_duplicated:True (Size->3)
@2059ayoption                            = 0x002E09E0; // allow_duplicated:True (Size->8)
@2060ayoption                            = 0x002E09E8; // allow_duplicated:True (Size->11)
@2061ayoption                            = 0x002E09F8; // allow_duplicated:True (Size->9)
@2062ayoption                            = 0x002E0A08; // allow_duplicated:True (Size->12)
@2063ayoption                            = 0x002E0A18; // allow_duplicated:True (Size->8)
@2064ayoption                            = 0x002E0A20; // allow_duplicated:True (Size->12)
@2468ayoption                            = 0x002E0A30; // allow_duplicated:True (Size->164)
// nmvc.c .rodata
@64nmvc                                  = 0x002E0AE0; // allow_duplicated:True (Size->23)
@157nmvc                                 = 0x002E0B00; // allow_duplicated:True (Size->16)
@224nmvc                                 = 0x002E0B10; // allow_duplicated:True (Size->16)
// nmsnd.c .rodata
@30nmsnd                                 = 0x002E0B20; // allow_duplicated:True (Size->17)
@31nmsnd                                 = 0x002E0B40; // allow_duplicated:True (Size->16)
@32nmsnd                                 = 0x002E0B50; // allow_duplicated:True (Size->20)
@33nmsnd                                 = 0x002E0B70; // allow_duplicated:True (Size->19)
@49nmsnd                                 = 0x002E0B90; // allow_duplicated:True (Size->23)
@64nmsnd                                 = 0x002E0BB0; // allow_duplicated:True (Size->18)
@65nmsnd                                 = 0x002E0BD0; // allow_duplicated:True (Size->17)    
@66nmsnd                                 = 0x002E0BF0; // allow_duplicated:True (Size->17)    
@86nmsnd                                 = 0x002E0C10; // allow_duplicated:True (Size->17)
@87nmsnd                                 = 0x002E0C30; // allow_duplicated:True (Size->21)
@88nmsnd                                 = 0x002E0C50; // allow_duplicated:True (Size->19)
@89nmsnd                                 = 0x002E0C70; // allow_duplicated:True (Size->21)
@90nmsnd                                 = 0x002E0C90; // allow_duplicated:True (Size->22)
@156nmsnd                                = 0x002E0CB0; // allow_duplicated:True (Size->17)
@165nmsnd                                = 0x002E0CD0; // allow_duplicated:True (Size->22)
@166nmsnd                                = 0x002E0CF0; // allow_duplicated:True (Size->22)
@181nmsnd                                = 0x002E0D10; // allow_duplicated:True (Size->21)
@188nmsnd                                = 0x002E0D30; // allow_duplicated:True (Size->23)
@225nmsnd                                = 0x002E0D50; // allow_duplicated:True (Size->16)
@226nmsnd                                = 0x002E0D60; // allow_duplicated:True (Size->18)
@227nmsnd                                = 0x002E0D80; // allow_duplicated:True (Size->18)
@247nmsnd                                = 0x002E0DA0; // allow_duplicated:True (Size->25)
@272nmsnd                                = 0x002E0DC0; // allow_duplicated:True (Size->21)
// nmbgm.c .rodata
@38nmbgm                                 = 0x002E0DE0; // allow_duplicated:True (Size->18)
@39nmbgm                                 = 0x002E0E00; // allow_duplicated:True (Size->19)
@40nmbgm                                 = 0x002E0E20; // allow_duplicated:True (Size->23)
@52nmbgm                                 = 0x002E0E40; // allow_duplicated:True (Size->23)
@59nmbgm                                 = 0x002E0E60; // allow_duplicated:True (Size->23)
@134nmbgm                                = 0x002E0E80; // allow_duplicated:True (Size->19)
@163nmbgm                                = 0x002E0EA0; // allow_duplicated:True (Size->17)
@284nmbgm                                = 0x002E0EC0; // allow_duplicated:True (Size->18)
@285nmbgm                                = 0x002E0EE0; // allow_duplicated:True (Size->17)
// nmsq.c .rodata
@34nmsq                                  = 0x002E0F00; // allow_duplicated:True (Size->22)
@45nmsq                                  = 0x002E0F20; // allow_duplicated:True (Size->23)    
@46nmsq                                  = 0x002E0F38; // allow_duplicated:True (Size->13)
@79nmsq                                  = 0x002E0F50; // allow_duplicated:True (Size->25)
@171nmsq                                 = 0x002E0F70; // allow_duplicated:True (Size->22)
@190nmsq                                 = 0x002E0F90; // allow_duplicated:True (Size->20)
@263nmsq                                 = 0x002E0FB0; // allow_duplicated:True (Size->21)
@264nmsq                                 = 0x002E0FD0; // allow_duplicated:True (Size->24)
@265nmsq                                 = 0x002E0FF0; // allow_duplicated:True (Size->20)
@266nmsq                                 = 0x002E1010; // allow_duplicated:True (Size->23)
// nmdisp.c .rodata
@37nmdisp                                = 0x002E1028; // allow_duplicated:True (Size->9)
@38nmdisp                                = 0x002E1038; // allow_duplicated:True (Size->6)
@39nmdisp                                = 0x002E1040; // allow_duplicated:True (Size->6)
@40nmdisp                                = 0x002E1048; // allow_duplicated:True (Size->11)
@41nmdisp                                = 0x002E1058; // allow_duplicated:True (Size->12)
@42nmdisp                                = 0x002E1068; // allow_duplicated:True (Size->9)
@43nmdisp                                = 0x002E1078; // allow_duplicated:True (Size->8)
@44nmdisp                                = 0x002E1080; // allow_duplicated:True (Size->6)
@45nmdisp                                = 0x002E1088; // allow_duplicated:True (Size->7)     
@46nmdisp                                = 0x002E1090; // allow_duplicated:True (Size->10)
@47nmdisp                                = 0x002E10A0; // allow_duplicated:True (Size->7)
@48nmdisp                                = 0x002E10A8; // allow_duplicated:True (Size->14)
@49nmdisp                                = 0x002E10B8; // allow_duplicated:True (Size->11)
@50nmdisp                                = 0x002E10C8; // allow_duplicated:True (Size->11)
@51nmdisp                                = 0x002E10D8; // allow_duplicated:True (Size->11)
@52nmdisp                                = 0x002E10E8; // allow_duplicated:True (Size->8)
@53nmdisp                                = 0x002E10F0; // allow_duplicated:True (Size->6)
@54nmdisp                                = 0x002E10F8; // allow_duplicated:True (Size->15)
@55nmdisp                                = 0x002E1108; // allow_duplicated:True (Size->10)
@56nmdisp                                = 0x002E1118; // allow_duplicated:True (Size->10)
@57nmdisp                                = 0x002E1128; // allow_duplicated:True (Size->4)
@58nmdisp                                = 0x002E1130; // allow_duplicated:True (Size->17)
@59nmdisp                                = 0x002E1150; // allow_duplicated:True (Size->20)
@60nmdisp                                = 0x002E1168; // allow_duplicated:True (Size->12)
@61nmdisp                                = 0x002E1180; // allow_duplicated:True (Size->16)
@62nmdisp                                = 0x002E1190; // allow_duplicated:True (Size->16)
@63nmdisp                                = 0x002E11A0; // allow_duplicated:True (Size->4)
@64nmdisp                                = 0x002E11A8; // allow_duplicated:True (Size->3)
@65nmdisp                                = 0x002E11B0; // allow_duplicated:True (Size->4)     
@66nmdisp                                = 0x002E11B8; // allow_duplicated:True (Size->4)     
@67nmdisp                                = 0x002E11C0; // allow_duplicated:True (Size->4)
@68nmdisp                                = 0x002E11C8; // allow_duplicated:True (Size->4)
@81nmdisp                                = 0x002E11D0; // allow_duplicated:True (Size->5)
@91nmdisp                                = 0x002E11D8; // allow_duplicated:True (Size->6)
@92nmdisp                                = 0x002E11E0; // allow_duplicated:True (Size->6)
@93nmdisp                                = 0x002E11E8; // allow_duplicated:True (Size->7)
@94nmdisp                                = 0x002E11F0; // allow_duplicated:True (Size->11)
@95nmdisp                                = 0x002E1200; // allow_duplicated:True (Size->6)
@96nmdisp                                = 0x002E1208; // allow_duplicated:True (Size->6)
@97nmdisp                                = 0x002E1210; // allow_duplicated:True (Size->8)
@98nmdisp                                = 0x002E1218; // allow_duplicated:True (Size->8)
@99nmdisp                                = 0x002E1220; // allow_duplicated:True (Size->15)
@100nmdisp                               = 0x002E1230; // allow_duplicated:True (Size->8)
@101nmdisp                               = 0x002E1238; // allow_duplicated:True (Size->14)
@102nmdisp                               = 0x002E1248; // allow_duplicated:True (Size->6)
@103nmdisp                               = 0x002E1250; // allow_duplicated:True (Size->16)
@104nmdisp                               = 0x002E1260; // allow_duplicated:True (Size->3)
@105nmdisp                               = 0x002E1268; // allow_duplicated:True (Size->3)
@106nmdisp                               = 0x002E1270; // allow_duplicated:True (Size->3)
@107nmdisp                               = 0x002E1278; // allow_duplicated:True (Size->3)
@108nmdisp                               = 0x002E1280; // allow_duplicated:True (Size->3)
@109nmdisp                               = 0x002E1288; // allow_duplicated:True (Size->3)
@110nmdisp                               = 0x002E1290; // allow_duplicated:True (Size->3)
@111nmdisp                               = 0x002E1298; // allow_duplicated:True (Size->3)
@112nmdisp                               = 0x002E12A0; // allow_duplicated:True (Size->3)
@113nmdisp                               = 0x002E12A8; // allow_duplicated:True (Size->3)
@114nmdisp                               = 0x002E12B0; // allow_duplicated:True (Size->3)
@115nmdisp                               = 0x002E12B8; // allow_duplicated:True (Size->3)
@116nmdisp                               = 0x002E12C0; // allow_duplicated:True (Size->3)
@117nmdisp                               = 0x002E12C8; // allow_duplicated:True (Size->3)
@118nmdisp                               = 0x002E12D0; // allow_duplicated:True (Size->3)
@119nmdisp                               = 0x002E12D8; // allow_duplicated:True (Size->3)
@120nmdisp                               = 0x002E12E0; // allow_duplicated:True (Size->3)
@121nmdisp                               = 0x002E12E8; // allow_duplicated:True (Size->3)
@122nmdisp                               = 0x002E12F0; // allow_duplicated:True (Size->3)
@123nmdisp                               = 0x002E12F8; // allow_duplicated:True (Size->3)
@124nmdisp                               = 0x002E1300; // allow_duplicated:True (Size->3)
@125nmdisp                               = 0x002E1308; // allow_duplicated:True (Size->3)
@126nmdisp                               = 0x002E1310; // allow_duplicated:True (Size->3)
@127nmdisp                               = 0x002E1318; // allow_duplicated:True (Size->3)
@128nmdisp                               = 0x002E1320; // allow_duplicated:True (Size->3)
@129nmdisp                               = 0x002E1328; // allow_duplicated:True (Size->2)
@130nmdisp                               = 0x002E1330; // allow_duplicated:True (Size->2)
@131nmdisp                               = 0x002E1338; // allow_duplicated:True (Size->2)
@132nmdisp                               = 0x002E1340; // allow_duplicated:True (Size->2)
@133nmdisp                               = 0x002E1348; // allow_duplicated:True (Size->2)
@134nmdisp                               = 0x002E1350; // allow_duplicated:True (Size->2)
@135nmdisp                               = 0x002E1358; // allow_duplicated:True (Size->2)
@136nmdisp                               = 0x002E1360; // allow_duplicated:True (Size->2)
@137nmdisp                               = 0x002E1368; // allow_duplicated:True (Size->2)
@138nmdisp                               = 0x002E1370; // allow_duplicated:True (Size->4)
@139nmdisp                               = 0x002E1378; // allow_duplicated:True (Size->4)
@140nmdisp                               = 0x002E1380; // allow_duplicated:True (Size->2)
@141nmdisp                               = 0x002E1388; // allow_duplicated:True (Size->2)
@142nmdisp                               = 0x002E1390; // allow_duplicated:True (Size->6)
@143nmdisp                               = 0x002E1398; // allow_duplicated:True (Size->6)
@144nmdisp                               = 0x002E13A0; // allow_duplicated:True (Size->5)
@145nmdisp                               = 0x002E13A8; // allow_duplicated:True (Size->9)
@146nmdisp                               = 0x002E13B8; // allow_duplicated:True (Size->8)
@147nmdisp                               = 0x002E13C0; // allow_duplicated:True (Size->7)
@148nmdisp                               = 0x002E13C8; // allow_duplicated:True (Size->8)
@149nmdisp                               = 0x002E13D0; // allow_duplicated:True (Size->7)
@150nmdisp                               = 0x002E13D8; // allow_duplicated:True (Size->10)
@151nmdisp                               = 0x002E13E8; // allow_duplicated:True (Size->7)
@152nmdisp                               = 0x002E13F0; // allow_duplicated:True (Size->7)
@153nmdisp                               = 0x002E13F8; // allow_duplicated:True (Size->7)
@154nmdisp                               = 0x002E1400; // allow_duplicated:True (Size->6)
@155nmdisp                               = 0x002E1408; // allow_duplicated:True (Size->6)
@156nmdisp                               = 0x002E1410; // allow_duplicated:True (Size->10)
@157nmdisp                               = 0x002E1420; // allow_duplicated:True (Size->7)
@158nmdisp                               = 0x002E1428; // allow_duplicated:True (Size->13)
@159nmdisp                               = 0x002E1438; // allow_duplicated:True (Size->15)
@160nmdisp                               = 0x002E1448; // allow_duplicated:True (Size->13)
@161nmdisp                               = 0x002E1458; // allow_duplicated:True (Size->12)
@162nmdisp                               = 0x002E1468; // allow_duplicated:True (Size->1)
@163nmdisp                               = 0x002E1470; // allow_duplicated:True (Size->13)
@164nmdisp                               = 0x002E1480; // allow_duplicated:True (Size->9)
@165nmdisp                               = 0x002E1490; // allow_duplicated:True (Size->13)
@166nmdisp                               = 0x002E14A0; // allow_duplicated:True (Size->11)
@167nmdisp                               = 0x002E14B0; // allow_duplicated:True (Size->15)
@168nmdisp                               = 0x002E14C0; // allow_duplicated:True (Size->19)
@169nmdisp                               = 0x002E14E0; // allow_duplicated:True (Size->18)    
@170nmdisp                               = 0x002E1500; // allow_duplicated:True (Size->20)
@171nmdisp                               = 0x002E1518; // allow_duplicated:True (Size->11)
@172nmdisp                               = 0x002E1528; // allow_duplicated:True (Size->14)
@173nmdisp                               = 0x002E1540; // allow_duplicated:True (Size->16)
@174nmdisp                               = 0x002E1550; // allow_duplicated:True (Size->17)
@175nmdisp                               = 0x002E1568; // allow_duplicated:True (Size->14)
@176nmdisp                               = 0x002E1578; // allow_duplicated:True (Size->14)
@177nmdisp                               = 0x002E1590; // allow_duplicated:True (Size->18)
@178nmdisp                               = 0x002E15B0; // allow_duplicated:True (Size->17)
@179nmdisp                               = 0x002E15C8; // allow_duplicated:True (Size->15)
@180nmdisp                               = 0x002E15E0; // allow_duplicated:True (Size->20)
@181nmdisp                               = 0x002E15F8; // allow_duplicated:True (Size->14)
@182nmdisp                               = 0x002E1610; // allow_duplicated:True (Size->16)
@183nmdisp                               = 0x002E1620; // allow_duplicated:True (Size->19)
@184nmdisp                               = 0x002E1640; // allow_duplicated:True (Size->17)
@185nmdisp                               = 0x002E1660; // allow_duplicated:True (Size->17)
@186nmdisp                               = 0x002E1678; // allow_duplicated:True (Size->12)
@187nmdisp                               = 0x002E1688; // allow_duplicated:True (Size->15)
@188nmdisp                               = 0x002E1698; // allow_duplicated:True (Size->11)
@189nmdisp                               = 0x002E16A8; // allow_duplicated:True (Size->11)
@190nmdisp                               = 0x002E16C0; // allow_duplicated:True (Size->17)
@191nmdisp                               = 0x002E16E0; // allow_duplicated:True (Size->19)
@192nmdisp                               = 0x002E16F8; // allow_duplicated:True (Size->13)
@193nmdisp                               = 0x002E1708; // allow_duplicated:True (Size->13)
@194nmdisp                               = 0x002E1720; // allow_duplicated:True (Size->19)
@195nmdisp                               = 0x002E1740; // allow_duplicated:True (Size->19)
@196nmdisp                               = 0x002E1758; // allow_duplicated:True (Size->10)
@197nmdisp                               = 0x002E1768; // allow_duplicated:True (Size->13)
@198nmdisp                               = 0x002E1780; // allow_duplicated:True (Size->20)
@199nmdisp                               = 0x002E17A0; // allow_duplicated:True (Size->20)
@200nmdisp                               = 0x002E17C0; // allow_duplicated:True (Size->16)
@201nmdisp                               = 0x002E17D0; // allow_duplicated:True (Size->11)
@202nmdisp                               = 0x002E17E0; // allow_duplicated:True (Size->9)
@203nmdisp                               = 0x002E17F0; // allow_duplicated:True (Size->8)
@204nmdisp                               = 0x002E17F8; // allow_duplicated:True (Size->13)
@205nmdisp                               = 0x002E1808; // allow_duplicated:True (Size->12)
@206nmdisp                               = 0x002E1818; // allow_duplicated:True (Size->11)
@207nmdisp                               = 0x002E1830; // allow_duplicated:True (Size->16)
@208nmdisp                               = 0x002E1840; // allow_duplicated:True (Size->13)
@209nmdisp                               = 0x002E1850; // allow_duplicated:True (Size->10)
@210nmdisp                               = 0x002E1860; // allow_duplicated:True (Size->20)
@211nmdisp                               = 0x002E1880; // allow_duplicated:True (Size->18)
@212nmdisp                               = 0x002E18A0; // allow_duplicated:True (Size->18)
@213nmdisp                               = 0x002E18B8; // allow_duplicated:True (Size->14)
@214nmdisp                               = 0x002E18D0; // allow_duplicated:True (Size->17)
@215nmdisp                               = 0x002E18F0; // allow_duplicated:True (Size->16)
@216nmdisp                               = 0x002E1900; // allow_duplicated:True (Size->15)
@217nmdisp                               = 0x002E1910; // allow_duplicated:True (Size->15)
@218nmdisp                               = 0x002E1920; // allow_duplicated:True (Size->11)
@219nmdisp                               = 0x002E1930; // allow_duplicated:True (Size->10)
@220nmdisp                               = 0x002E1940; // allow_duplicated:True (Size->10)
@221nmdisp                               = 0x002E1950; // allow_duplicated:True (Size->16)
@222nmdisp                               = 0x002E1960; // allow_duplicated:True (Size->14)
@223nmdisp                               = 0x002E1970; // allow_duplicated:True (Size->15)
@224nmdisp                               = 0x002E1980; // allow_duplicated:True (Size->8)
@225nmdisp                               = 0x002E1990; // allow_duplicated:True (Size->18)
@226nmdisp                               = 0x002E19A8; // allow_duplicated:True (Size->15)
@227nmdisp                               = 0x002E19B8; // allow_duplicated:True (Size->14)
@228nmdisp                               = 0x002E19C8; // allow_duplicated:True (Size->14)
@229nmdisp                               = 0x002E19E0; // allow_duplicated:True (Size->16)
@230nmdisp                               = 0x002E19F0; // allow_duplicated:True (Size->10)
@231nmdisp                               = 0x002E1A00; // allow_duplicated:True (Size->11)
@232nmdisp                               = 0x002E1A10; // allow_duplicated:True (Size->16)
@233nmdisp                               = 0x002E1A20; // allow_duplicated:True (Size->17)
@234nmdisp                               = 0x002E1A40; // allow_duplicated:True (Size->19)
@235nmdisp                               = 0x002E1A58; // allow_duplicated:True (Size->15)
@236nmdisp                               = 0x002E1A70; // allow_duplicated:True (Size->23)
@237nmdisp                               = 0x002E1A88; // allow_duplicated:True (Size->13)
@238nmdisp                               = 0x002E1A98; // allow_duplicated:True (Size->13)
@239nmdisp                               = 0x002E1AA8; // allow_duplicated:True (Size->14)
@240nmdisp                               = 0x002E1AB8; // allow_duplicated:True (Size->10)
@241nmdisp                               = 0x002E1AC8; // allow_duplicated:True (Size->15)
@242nmdisp                               = 0x002E1AD8; // allow_duplicated:True (Size->14)
@243nmdisp                               = 0x002E1AE8; // allow_duplicated:True (Size->10)
@244nmdisp                               = 0x002E1AF8; // allow_duplicated:True (Size->14)
@245nmdisp                               = 0x002E1B08; // allow_duplicated:True (Size->15)
@246nmdisp                               = 0x002E1B18; // allow_duplicated:True (Size->13)
@247nmdisp                               = 0x002E1B28; // allow_duplicated:True (Size->13)
@248nmdisp                               = 0x002E1B40; // allow_duplicated:True (Size->19)
@249nmdisp                               = 0x002E1B60; // allow_duplicated:True (Size->22)
@250nmdisp                               = 0x002E1B80; // allow_duplicated:True (Size->19)
@251nmdisp                               = 0x002E1BA0; // allow_duplicated:True (Size->17)
@252nmdisp                               = 0x002E1BC0; // allow_duplicated:True (Size->16)
@253nmdisp                               = 0x002E1BD0; // allow_duplicated:True (Size->20)
@254nmdisp                               = 0x002E1BF0; // allow_duplicated:True (Size->16)
@255nmdisp                               = 0x002E1C00; // allow_duplicated:True (Size->13)
@256nmdisp                               = 0x002E1C10; // allow_duplicated:True (Size->12)
@257nmdisp                               = 0x002E1C20; // allow_duplicated:True (Size->15)
@258nmdisp                               = 0x002E1C30; // allow_duplicated:True (Size->13)
@259nmdisp                               = 0x002E1C40; // allow_duplicated:True (Size->9)
@260nmdisp                               = 0x002E1C50; // allow_duplicated:True (Size->9)
@261nmdisp                               = 0x002E1C60; // allow_duplicated:True (Size->17)
@262nmdisp                               = 0x002E1C80; // allow_duplicated:True // (Size->17)    
@263nmdisp                               = 0x002E1C98; // allow_duplicated:True (Size->9)
@264nmdisp                               = 0x002E1CA8; // allow_duplicated:True (Size->12)
@265nmdisp                               = 0x002E1CC0; // allow_duplicated:True (Size->22)
@266nmdisp                               = 0x002E1CE0; // allow_duplicated:True (Size->18)
@267nmdisp                               = 0x002E1D00; // allow_duplicated:True (Size->17)
@268nmdisp                               = 0x002E1D18; // allow_duplicated:True (Size->14)
@269nmdisp                               = 0x002E1D28; // allow_duplicated:True (Size->10)
@270nmdisp                               = 0x002E1D38; // allow_duplicated:True (Size->10)
@271nmdisp                               = 0x002E1D48; // allow_duplicated:True (Size->7)
@272nmdisp                               = 0x002E1D50; // allow_duplicated:True (Size->21)
@273nmdisp                               = 0x002E1D70; // allow_duplicated:True (Size->18)
@274nmdisp                               = 0x002E1D88; // allow_duplicated:True (Size->13)
@275nmdisp                               = 0x002E1DA0; // allow_duplicated:True (Size->17)
@276nmdisp                               = 0x002E1DC0; // allow_duplicated:True (Size->29)
@277nmdisp                               = 0x002E1DE0; // allow_duplicated:True (Size->21)
@278nmdisp                               = 0x002E1E00; // allow_duplicated:True (Size->19)
@279nmdisp                               = 0x002E1E18; // allow_duplicated:True (Size->12)
@280nmdisp                               = 0x002E1E28; // allow_duplicated:True (Size->11)
@281nmdisp                               = 0x002E1E38; // allow_duplicated:True (Size->9)
@282nmdisp                               = 0x002E1E48; // allow_duplicated:True (Size->6)
@283nmdisp                               = 0x002E1E50; // allow_duplicated:True (Size->20)
@284nmdisp                               = 0x002E1E70; // allow_duplicated:True (Size->27)
@285nmdisp                               = 0x002E1E90; // allow_duplicated:True (Size->17)
@286nmdisp                               = 0x002E1EB0; // allow_duplicated:True (Size->20)
@287nmdisp                               = 0x002E1ED0; // allow_duplicated:True (Size->17)
@288nmdisp                               = 0x002E1EF0; // allow_duplicated:True (Size->23)
@289nmdisp                               = 0x002E1F10; // allow_duplicated:True (Size->20)
@290nmdisp                               = 0x002E1F30; // allow_duplicated:True (Size->19)
@291nmdisp                               = 0x002E1F50; // allow_duplicated:True (Size->19)
@292nmdisp                               = 0x002E1F68; // allow_duplicated:True (Size->11)
@293nmdisp                               = 0x002E1F80; // allow_duplicated:True (Size->23)
@294nmdisp                               = 0x002E1FA0; // allow_duplicated:True (Size->19)
@295nmdisp                               = 0x002E1FC0; // allow_duplicated:True (Size->33)
@296nmdisp                               = 0x002E1FF0; // allow_duplicated:True (Size->19)
@297nmdisp                               = 0x002E2010; // allow_duplicated:True (Size->19)
@298nmdisp                               = 0x002E2030; // allow_duplicated:True (Size->25)
@299nmdisp                               = 0x002E2050; // allow_duplicated:True (Size->14)
@300nmdisp                               = 0x002E2060; // allow_duplicated:True (Size->16)
@301nmdisp                               = 0x002E2070; // allow_duplicated:True (Size->21)
@302nmdisp                               = 0x002E2090; // allow_duplicated:True (Size->17)
@303nmdisp                               = 0x002E20A8; // allow_duplicated:True (Size->13)
@304nmdisp                               = 0x002E20B8; // allow_duplicated:True (Size->15)
@305nmdisp                               = 0x002E20C8; // allow_duplicated:True (Size->12)
@306nmdisp                               = 0x002E20D8; // allow_duplicated:True (Size->8)
@307nmdisp                               = 0x002E20E0; // allow_duplicated:True (Size->11)
@308nmdisp                               = 0x002E20F0; // allow_duplicated:True (Size->22)
@309nmdisp                               = 0x002E2110; // allow_duplicated:True (Size->16)
@310nmdisp                               = 0x002E2120; // allow_duplicated:True (Size->16)
@311nmdisp                               = 0x002E2130; // allow_duplicated:True (Size->19)
@312nmdisp                               = 0x002E2148; // allow_duplicated:True (Size->13)
@313nmdisp                               = 0x002E2158; // allow_duplicated:True (Size->12)
@314nmdisp                               = 0x002E2168; // allow_duplicated:True (Size->14)
@315nmdisp                               = 0x002E2180; // allow_duplicated:True (Size->20)
@316nmdisp                               = 0x002E21A0; // allow_duplicated:True (Size->20)
@317nmdisp                               = 0x002E21B8; // allow_duplicated:True (Size->15)
@318nmdisp                               = 0x002E21C8; // allow_duplicated:True (Size->10)
@319nmdisp                               = 0x002E21D8; // allow_duplicated:True (Size->15)
@320nmdisp                               = 0x002E21F0; // allow_duplicated:True (Size->16)
@321nmdisp                               = 0x002E2200; // allow_duplicated:True (Size->18)
@322nmdisp                               = 0x002E2220; // allow_duplicated:True (Size->16)
@323nmdisp                               = 0x002E2230; // allow_duplicated:True (Size->19)
@324nmdisp                               = 0x002E2248; // allow_duplicated:True (Size->6)
@325nmdisp                               = 0x002E2250; // allow_duplicated:True (Size->21)
@326nmdisp                               = 0x002E2270; // allow_duplicated:True (Size->20)
@327nmdisp                               = 0x002E2290; // allow_duplicated:True (Size->16)
@328nmdisp                               = 0x002E22A0; // allow_duplicated:True (Size->23)
@329nmdisp                               = 0x002E22C0; // allow_duplicated:True (Size->24)
@330nmdisp                               = 0x002E22E0; // allow_duplicated:True (Size->25)
@331nmdisp                               = 0x002E2300; // allow_duplicated:True (Size->20)
@332nmdisp                               = 0x002E2318; // allow_duplicated:True (Size->15)
@333nmdisp                               = 0x002E2328; // allow_duplicated:True (Size->8)
@334nmdisp                               = 0x002E2330; // allow_duplicated:True (Size->22)
@335nmdisp                               = 0x002E2350; // allow_duplicated:True (Size->22)
@336nmdisp                               = 0x002E2368; // allow_duplicated:True (Size->13)
@337nmdisp                               = 0x002E2380; // allow_duplicated:True (Size->20)
@338nmdisp                               = 0x002E23A0; // allow_duplicated:True (Size->21)
@339nmdisp                               = 0x002E23B8; // allow_duplicated:True (Size->13)
@340nmdisp                               = 0x002E23C8; // allow_duplicated:True (Size->15)
@341nmdisp                               = 0x002E23E0; // allow_duplicated:True (Size->19)
@342nmdisp                               = 0x002E2400; // allow_duplicated:True (Size->22)
@343nmdisp                               = 0x002E2420; // allow_duplicated:True (Size->23)
@344nmdisp                               = 0x002E2438; // allow_duplicated:True (Size->9)
@345nmdisp                               = 0x002E2450; // allow_duplicated:True (Size->16)
@346nmdisp                               = 0x002E2460; // allow_duplicated:True (Size->14)
@347nmdisp                               = 0x002E2470; // allow_duplicated:True (Size->18)
@348nmdisp                               = 0x002E2490; // allow_duplicated:True (Size->18)
@349nmdisp                               = 0x002E24A8; // allow_duplicated:True (Size->6)
@350nmdisp                               = 0x002E24B0; // allow_duplicated:True (Size->24)
@351nmdisp                               = 0x002E24D0; // allow_duplicated:True (Size->21)
@352nmdisp                               = 0x002E24F0; // allow_duplicated:True (Size->20)
@353nmdisp                               = 0x002E2510; // allow_duplicated:True (Size->16)
@354nmdisp                               = 0x002E2520; // allow_duplicated:True (Size->20)
@355nmdisp                               = 0x002E2540; // allow_duplicated:True (Size->17)
@356nmdisp                               = 0x002E2558; // allow_duplicated:True (Size->14)
@357nmdisp                               = 0x002E2570; // allow_duplicated:True (Size->24)
@358nmdisp                               = 0x002E2588; // allow_duplicated:True (Size->14)
@359nmdisp                               = 0x002E2598; // allow_duplicated:True (Size->11)
@360nmdisp                               = 0x002E25A8; // allow_duplicated:True (Size->14)
@361nmdisp                               = 0x002E25C0; // allow_duplicated:True (Size->21)
@362nmdisp                               = 0x002E25E0; // allow_duplicated:True (Size->20)
@363nmdisp                               = 0x002E2600; // allow_duplicated:True (Size->22)
@364nmdisp                               = 0x002E2620; // allow_duplicated:True (Size->24)
@365nmdisp                               = 0x002E2640; // allow_duplicated:True (Size->20)
@366nmdisp                               = 0x002E2660; // allow_duplicated:True (Size->27)
@367nmdisp                               = 0x002E2680; // allow_duplicated:True (Size->8)
@368nmdisp                               = 0x002E2690; // allow_duplicated:True (Size->24)
@369nmdisp                               = 0x002E26B0; // allow_duplicated:True (Size->23)
@370nmdisp                               = 0x002E26D0; // allow_duplicated:True (Size->17)
@371nmdisp                               = 0x002E26F0; // allow_duplicated:True (Size->26)
@372nmdisp                               = 0x002E2710; // allow_duplicated:True (Size->30)
@373nmdisp                               = 0x002E2730; // allow_duplicated:True (Size->15)
@374nmdisp                               = 0x002E2740; // allow_duplicated:True (Size->8)
@375nmdisp                               = 0x002E2750; // allow_duplicated:True (Size->20)
@376nmdisp                               = 0x002E2770; // allow_duplicated:True (Size->25)
@377nmdisp                               = 0x002E2790; // allow_duplicated:True (Size->22)
@378nmdisp                               = 0x002E27B0; // allow_duplicated:True (Size->26)
@379nmdisp                               = 0x002E27D0; // allow_duplicated:True (Size->24)
@380nmdisp                               = 0x002E27E8; // allow_duplicated:True (Size->10)
@381nmdisp                               = 0x002E27F8; // allow_duplicated:True (Size->9)
@382nmdisp                               = 0x002E2808; // allow_duplicated:True (Size->5)
@383nmdisp                               = 0x002E2810; // allow_duplicated:True (Size->6)
@384nmdisp                               = 0x002E2818; // allow_duplicated:True (Size->6)
@385nmdisp                               = 0x002E2820; // allow_duplicated:True (Size->5)
@386nmdisp                               = 0x002E2828; // allow_duplicated:True (Size->6)
@387nmdisp                               = 0x002E2830; // allow_duplicated:True (Size->8)
@388nmdisp                               = 0x002E2838; // allow_duplicated:True (Size->7)
@389nmdisp                               = 0x002E2840; // allow_duplicated:True (Size->5)
@390nmdisp                               = 0x002E2848; // allow_duplicated:True (Size->7)
@391nmdisp                               = 0x002E2850; // allow_duplicated:True (Size->7)
@392nmdisp                               = 0x002E2858; // allow_duplicated:True (Size->5)
@393nmdisp                               = 0x002E2860; // allow_duplicated:True (Size->4)
@394nmdisp                               = 0x002E2868; // allow_duplicated:True (Size->14)
@395nmdisp                               = 0x002E2878; // allow_duplicated:True (Size->10)
@396nmdisp                               = 0x002E2888; // allow_duplicated:True (Size->11)
@397nmdisp                               = 0x002E2898; // allow_duplicated:True (Size->14)
@398nmdisp                               = 0x002E28B0; // allow_duplicated:True (Size->21)
@399nmdisp                               = 0x002E28D0; // allow_duplicated:True (Size->24)
@400nmdisp                               = 0x002E28E8; // allow_duplicated:True (Size->5)
@401nmdisp                               = 0x002E28F0; // allow_duplicated:True (Size->14)
@402nmdisp                               = 0x002E2900; // allow_duplicated:True (Size->12)
@403nmdisp                               = 0x002E2910; // allow_duplicated:True (Size->13)
@404nmdisp                               = 0x002E2920; // allow_duplicated:True (Size->13)
@405nmdisp                               = 0x002E2930; // allow_duplicated:True (Size->20)
@406nmdisp                               = 0x002E2950; // allow_duplicated:True (Size->31)
@407nmdisp                               = 0x002E2970; // allow_duplicated:True (Size->4)
@408nmdisp                               = 0x002E2980; // allow_duplicated:True (Size->21)
@409nmdisp                               = 0x002E2998; // allow_duplicated:True (Size->10)
@410nmdisp                               = 0x002E29A8; // allow_duplicated:True (Size->13)
@411nmdisp                               = 0x002E29B8; // allow_duplicated:True (Size->12)
@412nmdisp                               = 0x002E29D0; // allow_duplicated:True (Size->23)
@413nmdisp                               = 0x002E29F0; // allow_duplicated:True (Size->26)
@414nmdisp                               = 0x002E2A10; // allow_duplicated:True (Size->5)
@415nmdisp                               = 0x002E2A18; // allow_duplicated:True (Size->11)
@416nmdisp                               = 0x002E2A28; // allow_duplicated:True (Size->9)
@417nmdisp                               = 0x002E2A38; // allow_duplicated:True (Size->9)
@418nmdisp                               = 0x002E2A48; // allow_duplicated:True (Size->14)
@419nmdisp                               = 0x002E2A58; // allow_duplicated:True (Size->8)
@420nmdisp                               = 0x002E2A60; // allow_duplicated:True (Size->8)
@421nmdisp                               = 0x002E2A68; // allow_duplicated:True (Size->14)
@422nmdisp                               = 0x002E2A78; // allow_duplicated:True (Size->14)
@423nmdisp                               = 0x002E2A88; // allow_duplicated:True (Size->7)
@424nmdisp                               = 0x002E2A90; // allow_duplicated:True (Size->8)
@425nmdisp                               = 0x002E2A98; // allow_duplicated:True (Size->6)
@426nmdisp                               = 0x002E2AA0; // allow_duplicated:True (Size->13)
@427nmdisp                               = 0x002E2AB0; // allow_duplicated:True (Size->12)
@428nmdisp                               = 0x002E2AC0; // allow_duplicated:True (Size->17)
@429nmdisp                               = 0x002E2AD8; // allow_duplicated:True (Size->13)
@430nmdisp                               = 0x002E2AE8; // allow_duplicated:True (Size->4)
@431nmdisp                               = 0x002E2AF0; // allow_duplicated:True (Size->15)
@432nmdisp                               = 0x002E2B00; // allow_duplicated:True (Size->8)
@433nmdisp                               = 0x002E2B08; // allow_duplicated:True (Size->9)
@434nmdisp                               = 0x002E2B18; // allow_duplicated:True (Size->12)
@435nmdisp                               = 0x002E2B28; // allow_duplicated:True (Size->7)
@436nmdisp                               = 0x002E2B30; // allow_duplicated:True (Size->18)
@437nmdisp                               = 0x002E2B50; // allow_duplicated:True (Size->16)
@438nmdisp                               = 0x002E2B60; // allow_duplicated:True (Size->7)
@439nmdisp                               = 0x002E2B68; // allow_duplicated:True (Size->14)    
@440nmdisp                               = 0x002E2B78; // allow_duplicated:True (Size->15)
@441nmdisp                               = 0x002E2B88; // allow_duplicated:True (Size->12)
@442nmdisp                               = 0x002E2BA0; // allow_duplicated:True (Size->21)
@443nmdisp                               = 0x002E2BC0; // allow_duplicated:True (Size->16)
@444nmdisp                               = 0x002E2BD0; // allow_duplicated:True (Size->3)
@445nmdisp                               = 0x002E2BE0; // allow_duplicated:True (Size->20)    
@446nmdisp                               = 0x002E2BF8; // allow_duplicated:True (Size->7)
@447nmdisp                               = 0x002E2C00; // allow_duplicated:True (Size->12)    
@448nmdisp                               = 0x002E2C10; // allow_duplicated:True (Size->15)    
@449nmdisp                               = 0x002E2C20; // allow_duplicated:True (Size->8)
@450nmdisp                               = 0x002E2C30; // allow_duplicated:True (Size->18)    
@451nmdisp                               = 0x002E2C48; // allow_duplicated:True (Size->15)    
@452nmdisp                               = 0x002E2C58; // allow_duplicated:True (Size->6)     
@453nmdisp                               = 0x002E2C60; // allow_duplicated:True (Size->19)    
@454nmdisp                               = 0x002E2C78; // allow_duplicated:True (Size->7)     
@455nmdisp                               = 0x002E2C80; // allow_duplicated:True (Size->9)     
@456nmdisp                               = 0x002E2C90; // allow_duplicated:True (Size->9)     
@457nmdisp                               = 0x002E2CA0; // allow_duplicated:True (Size->6)     
@458nmdisp                               = 0x002E2CA8; // allow_duplicated:True (Size->2)     
@459nmdisp                               = 0x002E2CB0; // allow_duplicated:True (Size->12)    
@460nmdisp                               = 0x002E2CC0; // allow_duplicated:True (Size->11)    
@461nmdisp                               = 0x002E2CD0; // allow_duplicated:True (Size->12)    
@462nmdisp                               = 0x002E2CE0; // allow_duplicated:True (Size->11)    
@463nmdisp                               = 0x002E2CF0; // allow_duplicated:True (Size->12)
@464nmdisp                               = 0x002E2D00; // allow_duplicated:True (Size->11)
@465nmdisp                               = 0x002E2D10; // allow_duplicated:True (Size->12)
@466nmdisp                               = 0x002E2D20; // allow_duplicated:True (Size->13)
@467nmdisp                               = 0x002E2D30; // allow_duplicated:True (Size->17)
@468nmdisp                               = 0x002E2D48; // allow_duplicated:True (Size->10)
@469nmdisp                               = 0x002E2D58; // allow_duplicated:True (Size->10)
@470nmdisp                               = 0x002E2D68; // allow_duplicated:True (Size->12)
@471nmdisp                               = 0x002E2D78; // allow_duplicated:True (Size->14)
@472nmdisp                               = 0x002E2D88; // allow_duplicated:True (Size->10)
@473nmdisp                               = 0x002E2DA0; // allow_duplicated:True (Size->26)
@474nmdisp                               = 0x002E2DC0; // allow_duplicated:True (Size->10)
@475nmdisp                               = 0x002E2DD0; // allow_duplicated:True (Size->12)
@476nmdisp                               = 0x002E2DE0; // allow_duplicated:True (Size->12)
@477nmdisp                               = 0x002E2DF0; // allow_duplicated:True (Size->16)
@478nmdisp                               = 0x002E2E00; // allow_duplicated:True (Size->11)
@479nmdisp                               = 0x002E2E10; // allow_duplicated:True (Size->32)
@480nmdisp                               = 0x002E2E30; // allow_duplicated:True (Size->12)
@481nmdisp                               = 0x002E2E40; // allow_duplicated:True (Size->15)
@482nmdisp                               = 0x002E2E50; // allow_duplicated:True (Size->17)
@483nmdisp                               = 0x002E2E70; // allow_duplicated:True (Size->16)
@484nmdisp                               = 0x002E2E80; // allow_duplicated:True (Size->16)
@485nmdisp                               = 0x002E2E90; // allow_duplicated:True (Size->21)
@486nmdisp                               = 0x002E2EB0; // allow_duplicated:True (Size->26)
@487nmdisp                               = 0x002E2ED0; // allow_duplicated:True (Size->14)
@488nmdisp                               = 0x002E2EE0; // allow_duplicated:True (Size->4)
@489nmdisp                               = 0x002E2EE8; // allow_duplicated:True (Size->4)
@490nmdisp                               = 0x002E2EF0; // allow_duplicated:True (Size->4)
@491nmdisp                               = 0x002E2EF8; // allow_duplicated:True (Size->4)
@492nmdisp                               = 0x002E2F00; // allow_duplicated:True (Size->4)     
@493nmdisp                               = 0x002E2F08; // allow_duplicated:True (Size->4)
@494nmdisp                               = 0x002E2F10; // allow_duplicated:True (Size->3)
@495nmdisp                               = 0x002E2F18; // allow_duplicated:True (Size->3)
@496nmdisp                               = 0x002E2F20; // allow_duplicated:True (Size->3)
@497nmdisp                               = 0x002E2F28; // allow_duplicated:True (Size->3)
@498nmdisp                               = 0x002E2F30; // allow_duplicated:True (Size->3)
@499nmdisp                               = 0x002E2F38; // allow_duplicated:True (Size->3)
@500nmdisp                               = 0x002E2F40; // allow_duplicated:True (Size->4)
@501nmdisp                               = 0x002E2F48; // allow_duplicated:True (Size->5)
@502nmdisp                               = 0x002E2F50; // allow_duplicated:True (Size->5)
@503nmdisp                               = 0x002E2F58; // allow_duplicated:True (Size->5)
@504nmdisp                               = 0x002E2F60; // allow_duplicated:True (Size->5)
@505nmdisp                               = 0x002E2F68; // allow_duplicated:True (Size->5)
@506nmdisp                               = 0x002E2F70; // allow_duplicated:True (Size->3)
@507nmdisp                               = 0x002E2F78; // allow_duplicated:True (Size->3)
@508nmdisp                               = 0x002E2F80; // allow_duplicated:True (Size->3)
@509nmdisp                               = 0x002E2F88; // allow_duplicated:True (Size->3)
@510nmdisp                               = 0x002E2F90; // allow_duplicated:True (Size->2)
@511nmdisp                               = 0x002E2F98; // allow_duplicated:True (Size->3)
@512nmdisp                               = 0x002E2FA0; // allow_duplicated:True (Size->4)
@513nmdisp                               = 0x002E2FA8; // allow_duplicated:True (Size->4)
@514nmdisp                               = 0x002E2FB0; // allow_duplicated:True (Size->2)
@515nmdisp                               = 0x002E2FB8; // allow_duplicated:True (Size->7)
@516nmdisp                               = 0x002E2FC0; // allow_duplicated:True (Size->3)
@517nmdisp                               = 0x002E2FC8; // allow_duplicated:True (Size->5)
@518nmdisp                               = 0x002E2FD0; // allow_duplicated:True (Size->6)
@519nmdisp                               = 0x002E2FD8; // allow_duplicated:True (Size->8)
@520nmdisp                               = 0x002E2FE0; // allow_duplicated:True (Size->4)
@521nmdisp                               = 0x002E2FE8; // allow_duplicated:True (Size->5)
@522nmdisp                               = 0x002E2FF0; // allow_duplicated:True (Size->10)
@523nmdisp                               = 0x002E3000; // allow_duplicated:True (Size->2)
@524nmdisp                               = 0x002E3008; // allow_duplicated:True (Size->12)
@525nmdisp                               = 0x002E3018; // allow_duplicated:True (Size->12)
@526nmdisp                               = 0x002E3028; // allow_duplicated:True (Size->8)
@527nmdisp                               = 0x002E3030; // allow_duplicated:True (Size->13)
@528nmdisp                               = 0x002E3040; // allow_duplicated:True (Size->10)
@529nmdisp                               = 0x002E3050; // allow_duplicated:True (Size->11)
@530nmdisp                               = 0x002E3060; // allow_duplicated:True (Size->13)
@531nmdisp                               = 0x002E3070; // allow_duplicated:True (Size->16)
@532nmdisp                               = 0x002E3080; // allow_duplicated:True (Size->10)
@533nmdisp                               = 0x002E3090; // allow_duplicated:True (Size->11)
@534nmdisp                               = 0x002E30A0; // allow_duplicated:True (Size->14)
@535nmdisp                               = 0x002E30B0; // allow_duplicated:True (Size->33)
@536nmdisp                               = 0x002E30D8; // allow_duplicated:True (Size->11)
@537nmdisp                               = 0x002E30E8; // allow_duplicated:True (Size->9)
@538nmdisp                               = 0x002E30F8; // allow_duplicated:True (Size->15)
@539nmdisp                               = 0x002E3108; // allow_duplicated:True (Size->11)
@540nmdisp                               = 0x002E3118; // allow_duplicated:True (Size->11)
@541nmdisp                               = 0x002E3128; // allow_duplicated:True (Size->15)
@542nmdisp                               = 0x002E3138; // allow_duplicated:True (Size->10)
@543nmdisp                               = 0x002E3148; // allow_duplicated:True (Size->10)
@544nmdisp                               = 0x002E3158; // allow_duplicated:True (Size->14)
@545nmdisp                               = 0x002E3168; // allow_duplicated:True (Size->8)
@546nmdisp                               = 0x002E3170; // allow_duplicated:True (Size->8)
@547nmdisp                               = 0x002E3178; // allow_duplicated:True (Size->13)
@551nmdisp                               = 0x002E3188; // allow_duplicated:True (Size->11)
@552nmdisp                               = 0x002E3198; // allow_duplicated:True (Size->11)
@553nmdisp                               = 0x002E31A8; // allow_duplicated:True (Size->11)
@580nmdisp                               = 0x002E31B8; // allow_duplicated:True (Size->3)
@800nmdisp                               = 0x002E31C0; // allow_duplicated:True (Size->19)
@860nmdisp                               = 0x002E31E0; // allow_duplicated:True (Size->24)
@926nmdisp                               = 0x002E3200; // allow_duplicated:True (Size->24)
@960nmdisp                               = 0x002E3220; // allow_duplicated:True (Size->24)
@992nmdisp                               = 0x002E3240; // allow_duplicated:True (Size->24)
@1024nmdisp                              = 0x002E3260; // allow_duplicated:True (Size->24)
@1056nmdisp                              = 0x002E3280; // allow_duplicated:True (Size->24)
@1101nmdisp                              = 0x002E3298; // allow_duplicated:True (Size->3)
@1102nmdisp                              = 0x002E32A0; // allow_duplicated:True (Size->6)
@1103nmdisp                              = 0x002E32A8; // allow_duplicated:True (Size->7)
@1124nmdisp                              = 0x002E32B0; // allow_duplicated:True (Size->5)
@1125nmdisp                              = 0x002E32B8; // allow_duplicated:True (Size->5)
@1165nmdisp                              = 0x002E32C0; // allow_duplicated:True (Size->7)
@1166nmdisp                              = 0x002E32C8; // allow_duplicated:True (Size->4)
@1167nmdisp                              = 0x002E32D0; // allow_duplicated:True (Size->4)
@1168nmdisp                              = 0x002E32D8; // allow_duplicated:True (Size->7)
@1169nmdisp                              = 0x002E32E0; // allow_duplicated:True (Size->13)
@1170nmdisp                              = 0x002E32F0; // allow_duplicated:True (Size->3)
@1171nmdisp                              = 0x002E32F8; // allow_duplicated:True (Size->5)
@1172nmdisp                              = 0x002E3300; // allow_duplicated:True (Size->5)
@1173nmdisp                              = 0x002E3310; // allow_duplicated:True (Size->36)
@1306nmdisp                              = 0x002E3340; // allow_duplicated:True (Size->32)
@1330nmdisp                              = 0x002E3360; // allow_duplicated:True (Size->10)
@1331nmdisp                              = 0x002E3370; // allow_duplicated:True (Size->12)
@1332nmdisp                              = 0x002E3380; // allow_duplicated:True (Size->13)
@1333nmdisp                              = 0x002E3390; // allow_duplicated:True (Size->8)
@1334nmdisp                              = 0x002E3398; // allow_duplicated:True (Size->5)
@1335nmdisp                              = 0x002E33A0; // allow_duplicated:True (Size->13)
@1336nmdisp                              = 0x002E33B0; // allow_duplicated:True (Size->6)
@1337nmdisp                              = 0x002E33B8; // allow_duplicated:True (Size->12)
@1338nmdisp                              = 0x002E33C8; // allow_duplicated:True (Size->7)
@1339nmdisp                              = 0x002E33D0; // allow_duplicated:True (Size->15)
@1340nmdisp                              = 0x002E33E0; // allow_duplicated:True (Size->8)
@1341nmdisp                              = 0x002E33F0; // allow_duplicated:True (Size->17)
@1342nmdisp                              = 0x002E3408; // allow_duplicated:True (Size->7)
@1411nmdisp                              = 0x002E3410; // allow_duplicated:True (Size->7)
@1594nmdisp                              = 0x002E3418; // allow_duplicated:True (Size->2)
@1595nmdisp                              = 0x002E3420; // allow_duplicated:True (Size->2)
@1596nmdisp                              = 0x002E3428; // allow_duplicated:True (Size->2)
@1597nmdisp                              = 0x002E3430; // allow_duplicated:True (Size->2)
@1598nmdisp                              = 0x002E3438; // allow_duplicated:True (Size->2)
@1599nmdisp                              = 0x002E3440; // allow_duplicated:True (Size->3)
@1600nmdisp                              = 0x002E3448; // allow_duplicated:True (Size->3)
@1601nmdisp                              = 0x002E3450; // allow_duplicated:True (Size->3)
@1602nmdisp                              = 0x002E3458; // allow_duplicated:True (Size->3)
@1603nmdisp                              = 0x002E3460; // allow_duplicated:True (Size->2)
@1604nmdisp                              = 0x002E3470; // allow_duplicated:True (Size->36)
@1645nmdisp                              = 0x002E34A0; // allow_duplicated:True (Size->36)
@1769nmdisp                              = 0x002E34C8; // allow_duplicated:True (Size->10)
@1770nmdisp                              = 0x002E34D8; // allow_duplicated:True (Size->12)
@1771nmdisp                              = 0x002E34E8; // allow_duplicated:True (Size->14)
@1826nmdisp                              = 0x002E34F8; // allow_duplicated:True (Size->6)
@1827nmdisp                              = 0x002E3500; // allow_duplicated:True (Size->12)
@1888nmdisp                              = 0x002E3510; // allow_duplicated:True (Size->8)
@1889nmdisp                              = 0x002E3518; // allow_duplicated:True (Size->8)
@2352nmdisp                              = 0x002E3520; // allow_duplicated:True (Size->4)
@2353nmdisp                              = 0x002E3528; // allow_duplicated:True (Size->6)
@2354nmdisp                              = 0x002E3530; // allow_duplicated:True (Size->6)
@2355nmdisp                              = 0x002E3538; // allow_duplicated:True (Size->6)
@2356nmdisp                              = 0x002E3540; // allow_duplicated:True (Size->3)
@2357nmdisp                              = 0x002E3548; // allow_duplicated:True (Size->3)
@2358nmdisp                              = 0x002E3550; // allow_duplicated:True (Size->4)
@2466nmdisp                              = 0x002E3558; // allow_duplicated:True (Size->4)
@2568nmdisp                              = 0x002E3560; // allow_duplicated:True (Size->10)
@2569nmdisp                              = 0x002E3570; // allow_duplicated:True (Size->12)
@2570nmdisp                              = 0x002E3580; // allow_duplicated:True (Size->24)
@2580nmdisp                              = 0x002E3598; // allow_duplicated:True (Size->14)
@2581nmdisp                              = 0x002E35B0; // allow_duplicated:True (Size->20)
@2582nmdisp                              = 0x002E35C8; // allow_duplicated:True (Size->11)
@2608nmdisp                              = 0x002E35D8; // allow_duplicated:True (Size->9)
@2609nmdisp                              = 0x002E35E8; // allow_duplicated:True (Size->9)
@2610nmdisp                              = 0x002E35F8; // allow_duplicated:True (Size->5)
@2611nmdisp                              = 0x002E3600; // allow_duplicated:True (Size->8)
@2612nmdisp                              = 0x002E3608; // allow_duplicated:True (Size->11)
@2613nmdisp                              = 0x002E3618; // allow_duplicated:True (Size->10)
@2614nmdisp                              = 0x002E3628; // allow_duplicated:True (Size->13)
@2615nmdisp                              = 0x002E3638; // allow_duplicated:True (Size->12)
@2616nmdisp                              = 0x002E3648; // allow_duplicated:True (Size->8)
@2735nmdisp                              = 0x002E3650; // allow_duplicated:True (Size->12)
@2736nmdisp                              = 0x002E3660; // allow_duplicated:True (Size->13)
@2737nmdisp                              = 0x002E3670; // allow_duplicated:True (Size->8)
@2775nmdisp                              = 0x002E3678; // allow_duplicated:True (Size->5)
@2776nmdisp                              = 0x002E3680; // allow_duplicated:True (Size->7)
@2777nmdisp                              = 0x002E3688; // allow_duplicated:True (Size->6)
@2799nmdisp                              = 0x002E3690; // allow_duplicated:True (Size->9)
@2811nmdisp                              = 0x002E36A0; // allow_duplicated:True (Size->9)
@2815nmdisp                              = 0x002E36B0; // allow_duplicated:True (Size->11)
@2816nmdisp                              = 0x002E36C0; // allow_duplicated:True (Size->14)
@2817nmdisp                              = 0x002E36D0; // allow_duplicated:True (Size->13)
@2848nmdisp                              = 0x002E36E0; // allow_duplicated:True (Size->10)
@2849nmdisp                              = 0x002E36F0; // allow_duplicated:True (Size->6)
@2850nmdisp                              = 0x002E36F8; // allow_duplicated:True (Size->13)
@2851nmdisp                              = 0x002E3708; // allow_duplicated:True (Size->9)
@2852nmdisp                              = 0x002E3718; // allow_duplicated:True (Size->10)
@2853nmdisp                              = 0x002E3728; // allow_duplicated:True (Size->11)
@2854nmdisp                              = 0x002E3740; // allow_duplicated:True (Size->17)
@2855nmdisp                              = 0x002E3758; // allow_duplicated:True (Size->10)
@2856nmdisp                              = 0x002E3770; // allow_duplicated:True (Size->20)
@2857nmdisp                              = 0x002E3790; // allow_duplicated:True (Size->18)
@2858nmdisp                              = 0x002E37B0; // allow_duplicated:True (Size->22)
@2859nmdisp                              = 0x002E37C8; // allow_duplicated:True (Size->13)
@2860nmdisp                              = 0x002E37D8; // allow_duplicated:True (Size->6)
@2861nmdisp                              = 0x002E37E0; // allow_duplicated:True (Size->11)
@2862nmdisp                              = 0x002E37F0; // allow_duplicated:True (Size->27)
@2863nmdisp                              = 0x002E3810; // allow_duplicated:True (Size->19)
@2864nmdisp                              = 0x002E3828; // allow_duplicated:True (Size->8)
@2865nmdisp                              = 0x002E3830; // allow_duplicated:True (Size->14)
@2866nmdisp                              = 0x002E3840; // allow_duplicated:True (Size->10)
@2867nmdisp                              = 0x002E3850; // allow_duplicated:True (Size->16)
@2868nmdisp                              = 0x002E3860; // allow_duplicated:True (Size->15)
@2869nmdisp                              = 0x002E3870; // allow_duplicated:True (Size->12)
@2870nmdisp                              = 0x002E3880; // allow_duplicated:True (Size->13)
@2871nmdisp                              = 0x002E3890; // allow_duplicated:True (Size->21)
@2872nmdisp                              = 0x002E38A8; // allow_duplicated:True (Size->13)
@2873nmdisp                              = 0x002E38C0; // allow_duplicated:True (Size->21)
@2979nmdisp                              = 0x002E38D8; // allow_duplicated:True (Size->15)
@2980nmdisp                              = 0x002E38F0; // allow_duplicated:True (Size->17)
@2981nmdisp                              = 0x002E3908; // allow_duplicated:True (Size->15)
@3030nmdisp                              = 0x002E3918; // allow_duplicated:True (Size->9)
@3031nmdisp                              = 0x002E3930; // allow_duplicated:True (Size->36)
@3035nmdisp                              = 0x002E3958; // allow_duplicated:True (Size->11)
@3036nmdisp                              = 0x002E3968; // allow_duplicated:True (Size->10)
@3037nmdisp                              = 0x002E3978; // allow_duplicated:True (Size->12)
@3038nmdisp                              = 0x002E3988; // allow_duplicated:True (Size->14)
@3039nmdisp                              = 0x002E39A0; // allow_duplicated:True (Size->24)
@3040nmdisp                              = 0x002E39B8; // allow_duplicated:True (Size->11)
@3041nmdisp                              = 0x002E39C8; // allow_duplicated:True (Size->7)
@3042nmdisp                              = 0x002E39D0; // allow_duplicated:True (Size->4)
@3043nmdisp                              = 0x002E39D8; // allow_duplicated:True (Size->10)
@3044nmdisp                              = 0x002E39E8; // allow_duplicated:True (Size->11)
@3045nmdisp                              = 0x002E39F8; // allow_duplicated:True (Size->14)
@3046nmdisp                              = 0x002E3A10; // allow_duplicated:True (Size->17)
@3047nmdisp                              = 0x002E3A30; // allow_duplicated:True (Size->19)
@3048nmdisp                              = 0x002E3A48; // allow_duplicated:True (Size->12)
@3049nmdisp                              = 0x002E3A58; // allow_duplicated:True (Size->8)
@3050nmdisp                              = 0x002E3A60; // allow_duplicated:True (Size->15)
@3051nmdisp                              = 0x002E3A70; // allow_duplicated:True (Size->15)
@3052nmdisp                              = 0x002E3A80; // allow_duplicated:True (Size->12)
@3053nmdisp                              = 0x002E3A90; // allow_duplicated:True (Size->17)
@3054nmdisp                              = 0x002E3AB0; // allow_duplicated:True (Size->24)
@3055nmdisp                              = 0x002E3AC8; // allow_duplicated:True (Size->15)
@3056nmdisp                              = 0x002E3AD8; // allow_duplicated:True (Size->8)
@3103nmdisp                              = 0x002E3AE0; // allow_duplicated:True (Size->13)
@3104nmdisp                              = 0x002E3AF0; // allow_duplicated:True (Size->13)
@3105nmdisp                              = 0x002E3B00; // allow_duplicated:True (Size->15)
@3106nmdisp                              = 0x002E3B10; // allow_duplicated:True (Size->18)
@3107nmdisp                              = 0x002E3B28; // allow_duplicated:True (Size->10)
@3108nmdisp                              = 0x002E3B38; // allow_duplicated:True (Size->10)
@3110nmdisp                              = 0x002E3B48; // allow_duplicated:True (Size->7)
@3111nmdisp                              = 0x002E3B50; // allow_duplicated:True (Size->11)
@3112nmdisp                              = 0x002E3B60; // allow_duplicated:True (Size->7)
@3113nmdisp                              = 0x002E3B68; // allow_duplicated:True (Size->10)
@3114nmdisp                              = 0x002E3B80; // allow_duplicated:True (Size->17)
@3115nmdisp                              = 0x002E3B98; // allow_duplicated:True (Size->10)
@3116nmdisp                              = 0x002E3BA8; // allow_duplicated:True (Size->8)
@3117nmdisp                              = 0x002E3BB0; // allow_duplicated:True (Size->14)
@3119nmdisp                              = 0x002E3BC0; // allow_duplicated:True (Size->5)
@3120nmdisp                              = 0x002E3BC8; // allow_duplicated:True (Size->7)
@3121nmdisp                              = 0x002E3BD0; // allow_duplicated:True (Size->6)
@3122nmdisp                              = 0x002E3BD8; // allow_duplicated:True (Size->5)
@3123nmdisp                              = 0x002E3BE0; // allow_duplicated:True (Size->8)
@3124nmdisp                              = 0x002E3BE8; // allow_duplicated:True (Size->6)
@3125nmdisp                              = 0x002E3BF0; // allow_duplicated:True (Size->6)
@3251nmdisp                              = 0x002E3BF8; // allow_duplicated:True (Size->4)
@3252nmdisp                              = 0x002E3C00; // allow_duplicated:True (Size->5)
@3253nmdisp                              = 0x002E3C08; // allow_duplicated:True (Size->8)
@3295nmdisp                              = 0x002E3C10; // allow_duplicated:True (Size->28)
@3414nmdisp                              = 0x002E3C30; // allow_duplicated:True (Size->7)
@3415nmdisp                              = 0x002E3C38; // allow_duplicated:True (Size->13)
@3416nmdisp                              = 0x002E3C48; // allow_duplicated:True (Size->6)
@3433nmdisp                              = 0x002E3C50; // allow_duplicated:True (Size->10)
@3434nmdisp                              = 0x002E3C60; // allow_duplicated:True (Size->11)
@3435nmdisp                              = 0x002E3C70; // allow_duplicated:True (Size->10)
@3489nmdisp                              = 0x002E3C80; // allow_duplicated:True (Size->24)
@3549nmdisp                              = 0x002E3CA0; // allow_duplicated:True (Size->24)
@3581nmdisp                              = 0x002E3CC0; // allow_duplicated:True (Size->24)
@3645nmdisp                              = 0x002E3CE0; // allow_duplicated:True (Size->24)
@3677nmdisp                              = 0x002E3D00; // allow_duplicated:True (Size->24)
@4233nmdisp                              = 0x002E3D20; // allow_duplicated:True (Size->32)
@5174nmdisp                              = 0x002E3D40; // allow_duplicated:True (Size->24)
@5222nmdisp                              = 0x002E3D60; // allow_duplicated:True (Size->24)
@5264nmdisp                              = 0x002E3D80; // allow_duplicated:True (Size->24)
@5357nmdisp                              = 0x002E3DA0; // allow_duplicated:True (Size->24)
@5541nmdisp                              = 0x002E3DC0; // allow_duplicated:True (Size->28)
@5612nmdisp                              = 0x002E3DE0; // allow_duplicated:True (Size->28)
@5611nmdisp                              = 0x002E3E00; // allow_duplicated:True (Size->36)
@5702nmdisp                              = 0x002E3E30; // allow_duplicated:True (Size->28)
@5747nmdisp                              = 0x002E3E50; // allow_duplicated:True (Size->24)
@6272nmdisp                              = 0x002E3E70; // allow_duplicated:True (Size->18)
@6346nmdisp                              = 0x002E3E90; // allow_duplicated:True (Size->55)
@6347nmdisp                              = 0x002E3ED0; // allow_duplicated:True (Size->55)
// nmdraw.c .rodata
@48nmdraw                                = 0x002E3F08; // allow_duplicated:True (Size->7)
@49nmdraw                                = 0x002E3F10; // allow_duplicated:True (Size->9)
@50nmdraw                                = 0x002E3F20; // allow_duplicated:True (Size->7)
@51nmdraw                                = 0x002E3F28; // allow_duplicated:True (Size->7)
@52nmdraw                                = 0x002E3F30; // allow_duplicated:True (Size->5)
@53nmdraw                                = 0x002E3F38; // allow_duplicated:True (Size->7)
@54nmdraw                                = 0x002E3F40; // allow_duplicated:True (Size->5)
@55nmdraw                                = 0x002E3F48; // allow_duplicated:True (Size->11)
@56nmdraw                                = 0x002E3F58; // allow_duplicated:True (Size->6)
@57nmdraw                                = 0x002E3F60; // allow_duplicated:True (Size->8)
@58nmdraw                                = 0x002E3F68; // allow_duplicated:True (Size->3)
@59nmdraw                                = 0x002E3F70; // allow_duplicated:True (Size->7)
@60nmdraw                                = 0x002E3F78; // allow_duplicated:True (Size->7)
@61nmdraw                                = 0x002E3F80; // allow_duplicated:True (Size->7)
@62nmdraw                                = 0x002E3F88; // allow_duplicated:True (Size->7)
@63nmdraw                                = 0x002E3F90; // allow_duplicated:True (Size->11)
@64nmdraw                                = 0x002E3FA0; // allow_duplicated:True (Size->1)
@65nmdraw                                = 0x002E3FB0; // allow_duplicated:True (Size->18)    
@66nmdraw                                = 0x002E3FC8; // allow_duplicated:True (Size->9)     
@67nmdraw                                = 0x002E3FD8; // allow_duplicated:True (Size->10)
@68nmdraw                                = 0x002E3FE8; // allow_duplicated:True (Size->13)
@69nmdraw                                = 0x002E3FF8; // allow_duplicated:True (Size->9)
@70nmdraw                                = 0x002E4008; // allow_duplicated:True (Size->7)
@71nmdraw                                = 0x002E4010; // allow_duplicated:True (Size->19)
@72nmdraw                                = 0x002E4028; // allow_duplicated:True (Size->11)
@73nmdraw                                = 0x002E4038; // allow_duplicated:True (Size->15)
@92nmdraw                                = 0x002E4048; // allow_duplicated:True (Size->7)
@93nmdraw                                = 0x002E4050; // allow_duplicated:True (Size->4)
@94nmdraw                                = 0x002E4058; // allow_duplicated:True (Size->4)
@131nmdraw                               = 0x002E4060; // allow_duplicated:True (Size->10)
@132nmdraw                               = 0x002E4070; // allow_duplicated:True (Size->14)
@136nmdraw                               = 0x002E4080; // allow_duplicated:True (Size->2)
@226nmdraw                               = 0x002E4088; // allow_duplicated:True (Size->3)
@227nmdraw                               = 0x002E4090; // allow_duplicated:True (Size->3)
@228nmdraw                               = 0x002E4098; // allow_duplicated:True (Size->5)
// knreplay.c .rodata
@108knreplay                             = 0x002E40A0; // allow_duplicated:True (Size->36)
@101knreplay                             = 0x002E40D0; // allow_duplicated:True (Size->32)
@231knreplay                             = 0x002E40F0; // allow_duplicated:True (Size->32)
@230knreplay                             = 0x002E4110; // allow_duplicated:True (Size->32)
@429knreplay                             = 0x002E4130; // allow_duplicated:True (Size->104)
@466knreplay                             = 0x002E41A0; // allow_duplicated:True (Size->60)
@545knreplay                             = 0x002E41E0; // allow_duplicated:True (Size->108)
@588knreplay                             = 0x002E4250; // allow_duplicated:True (Size->36)
@622knreplay                             = 0x002E4280; // allow_duplicated:True (Size->36)
// spev01.c .rodata
vspev01Dram                              = 0x002E42B0; // (Size->96)    
@1099                                    = 0x002E4310; // allow_duplicated:True size:0x20
// aycreate.c .rodata
@197aycreate                             = 0x002E4330; // allow_duplicated:True (Size->76)
@341aycreate                             = 0x002E4380; // allow_duplicated:True (Size->76)
@345aycreate                             = 0x002E43D0; // allow_duplicated:True (Size->9)
@346aycreate                             = 0x002E43E0; // allow_duplicated:True (Size->6)
@347aycreate                             = 0x002E43E8; // allow_duplicated:True (Size->8)
@350aycreate                             = 0x002E43F0; // allow_duplicated:True (Size->22)
@351aycreate                             = 0x002E4408; // allow_duplicated:True (Size->5)
@352aycreate                             = 0x002E4410; // allow_duplicated:True (Size->11)
@353aycreate                             = 0x002E4420; // allow_duplicated:True (Size->5)
@354aycreate                             = 0x002E4428; // allow_duplicated:True (Size->8)
@355aycreate                             = 0x002E4430; // allow_duplicated:True (Size->23)
@356aycreate                             = 0x002E4448; // allow_duplicated:True (Size->6)
@357aycreate                             = 0x002E4450; // allow_duplicated:True (Size->14)
@358aycreate                             = 0x002E4460; // allow_duplicated:True (Size->6)
@359aycreate                             = 0x002E4468; // allow_duplicated:True (Size->12)
@360aycreate                             = 0x002E4480; // allow_duplicated:True (Size->25)
@361aycreate                             = 0x002E44A0; // allow_duplicated:True (Size->8)
@362aycreate                             = 0x002E44A8; // allow_duplicated:True (Size->11)
@363aycreate                             = 0x002E44B8; // allow_duplicated:True (Size->14)
@484aycreate                             = 0x002E44D0; // allow_duplicated:True (Size->73)
@485aycreate                             = 0x002E4520; // allow_duplicated:True (Size->80)
@486aycreate                             = 0x002E4570; // allow_duplicated:True (Size->93)
@488aycreate                             = 0x002E45D0; // allow_duplicated:True (Size->4)
@489aycreate                             = 0x002E45D8; // allow_duplicated:True (Size->4)
@490aycreate                             = 0x002E45E0; // allow_duplicated:True (Size->4)
@663aycreate                             = 0x002E45E8; // allow_duplicated:True (Size->3)     
@768aycreate                             = 0x002E45F0; // allow_duplicated:True (Size->11)
@769aycreate                             = 0x002E4600; // allow_duplicated:True (Size->14)
@770aycreate                             = 0x002E4610; // allow_duplicated:True (Size->6)
@771aycreate                             = 0x002E4618; // allow_duplicated:True (Size->6)
@772aycreate                             = 0x002E4620; // allow_duplicated:True (Size->14)
@773aycreate                             = 0x002E4630; // allow_duplicated:True (Size->14)
@774aycreate                             = 0x002E4640; // allow_duplicated:True (Size->18)
@775aycreate                             = 0x002E4658; // allow_duplicated:True (Size->9)
@776aycreate                             = 0x002E4668; // allow_duplicated:True (Size->12)
@777aycreate                             = 0x002E4680; // allow_duplicated:True (Size->17)
@778aycreate                             = 0x002E4698; // allow_duplicated:True (Size->11)
@779aycreate                             = 0x002E46A8; // allow_duplicated:True (Size->14)
@780aycreate                             = 0x002E46B8; // allow_duplicated:True (Size->10)
@781aycreate                             = 0x002E46D0; // allow_duplicated:True (Size->19)
@841aycreate                             = 0x002E46E8; // allow_duplicated:True (Size->4)
@842aycreate                             = 0x002E46F0; // allow_duplicated:True (Size->4)
@843aycreate                             = 0x002E46F8; // allow_duplicated:True (Size->7)
@844aycreate                             = 0x002E4700; // allow_duplicated:True (Size->11)
@845aycreate                             = 0x002E4710; // allow_duplicated:True (Size->6)
@846aycreate                             = 0x002E4718; // allow_duplicated:True (Size->13)
@847aycreate                             = 0x002E4728; // allow_duplicated:True (Size->5)
@848aycreate                             = 0x002E4730; // allow_duplicated:True (Size->9)
@850aycreate                             = 0x002E4740; // allow_duplicated:True (Size->5)
@851aycreate                             = 0x002E4748; // allow_duplicated:True (Size->7)
@852aycreate                             = 0x002E4750; // allow_duplicated:True (Size->8)
@853aycreate                             = 0x002E4758; // allow_duplicated:True (Size->6)
@854aycreate                             = 0x002E4760; // allow_duplicated:True (Size->9)
@855aycreate                             = 0x002E4770; // allow_duplicated:True (Size->9)
@856aycreate                             = 0x002E4780; // allow_duplicated:True (Size->6)
@857aycreate                             = 0x002E4788; // allow_duplicated:True (Size->6)
@928aycreate                             = 0x002E4790; // allow_duplicated:True (Size->3)
@933aycreate                             = 0x002E4798; // allow_duplicated:True (Size->5)
@934aycreate                             = 0x002E47A0; // allow_duplicated:True (Size->11)
@935aycreate                             = 0x002E47B0; // allow_duplicated:True (Size->5)
@936aycreate                             = 0x002E47B8; // allow_duplicated:True (Size->7)
@937aycreate                             = 0x002E47C0; // allow_duplicated:True (Size->13)
@938aycreate                             = 0x002E47D0; // allow_duplicated:True (Size->6)
@939aycreate                             = 0x002E47D8; // allow_duplicated:True (Size->12)
@940aycreate                             = 0x002E47E8; // allow_duplicated:True (Size->7)
@941aycreate                             = 0x002E47F0; // allow_duplicated:True (Size->6)
@942aycreate                             = 0x002E47F8; // allow_duplicated:True (Size->6)
@943aycreate                             = 0x002E4800; // allow_duplicated:True (Size->5)
@944aycreate                             = 0x002E4808; // allow_duplicated:True (Size->10)
@945aycreate                             = 0x002E4818; // allow_duplicated:True (Size->8)
@946aycreate                             = 0x002E4820; // allow_duplicated:True (Size->7)
@947aycreate                             = 0x002E4828; // allow_duplicated:True (Size->6)
@948aycreate                             = 0x002E4830; // allow_duplicated:True (Size->12)
@949aycreate                             = 0x002E4840; // allow_duplicated:True (Size->5)
@950aycreate                             = 0x002E4848; // allow_duplicated:True (Size->11)
@951aycreate                             = 0x002E4858; // allow_duplicated:True (Size->11)
@952aycreate                             = 0x002E4868; // allow_duplicated:True (Size->8)
@953aycreate                             = 0x002E4870; // allow_duplicated:True (Size->8)
@954aycreate                             = 0x002E4880; // allow_duplicated:True (Size->16)
@955aycreate                             = 0x002E4890; // allow_duplicated:True (Size->7)
@956aycreate                             = 0x002E4898; // allow_duplicated:True (Size->8)
@957aycreate                             = 0x002E48A0; // allow_duplicated:True (Size->16)
@958aycreate                             = 0x002E48B0; // allow_duplicated:True (Size->9)
@959aycreate                             = 0x002E48C0; // allow_duplicated:True (Size->17)
@960aycreate                             = 0x002E48D8; // allow_duplicated:True (Size->6)
@961aycreate                             = 0x002E48E0; // allow_duplicated:True (Size->8)
@963aycreate                             = 0x002E48E8; // allow_duplicated:True (Size->6)
@964aycreate                             = 0x002E48F0; // allow_duplicated:True (Size->6)
@965aycreate                             = 0x002E48F8; // allow_duplicated:True (Size->6)
@966aycreate                             = 0x002E4900; // allow_duplicated:True (Size->6)
@967aycreate                             = 0x002E4908; // allow_duplicated:True (Size->7)
@968aycreate                             = 0x002E4910; // allow_duplicated:True (Size->7)
@969aycreate                             = 0x002E4918; // allow_duplicated:True (Size->7)
@970aycreate                             = 0x002E4920; // allow_duplicated:True (Size->7)
@971aycreate                             = 0x002E4928; // allow_duplicated:True (Size->6)
@972aycreate                             = 0x002E4930; // allow_duplicated:True (Size->6)
@973aycreate                             = 0x002E4938; // allow_duplicated:True (Size->6)
@974aycreate                             = 0x002E4940; // allow_duplicated:True (Size->6)
@975aycreate                             = 0x002E4948; // allow_duplicated:True (Size->6)
@976aycreate                             = 0x002E4950; // allow_duplicated:True (Size->7)
@977aycreate                             = 0x002E4958; // allow_duplicated:True (Size->5)
@978aycreate                             = 0x002E4960; // allow_duplicated:True (Size->5)
@979aycreate                             = 0x002E4968; // allow_duplicated:True (Size->5)
@980aycreate                             = 0x002E4970; // allow_duplicated:True (Size->5)
@981aycreate                             = 0x002E4978; // allow_duplicated:True (Size->7)
@982aycreate                             = 0x002E4980; // allow_duplicated:True (Size->7)
@983aycreate                             = 0x002E4988; // allow_duplicated:True (Size->7)
@984aycreate                             = 0x002E4990; // allow_duplicated:True (Size->7)
@985aycreate                             = 0x002E4998; // allow_duplicated:True (Size->5)
@986aycreate                             = 0x002E49A0; // allow_duplicated:True (Size->5)
@987aycreate                             = 0x002E49A8; // allow_duplicated:True (Size->5)
@988aycreate                             = 0x002E49B0; // allow_duplicated:True (Size->5)
@989aycreate                             = 0x002E49B8; // allow_duplicated:True (Size->5)
@990aycreate                             = 0x002E49C0; // allow_duplicated:True (Size->6)
@991aycreate                             = 0x002E49C8; // allow_duplicated:True (Size->9)
@992aycreate                             = 0x002E49D8; // allow_duplicated:True (Size->9)
@993aycreate                             = 0x002E49E8; // allow_duplicated:True (Size->9)
@994aycreate                             = 0x002E49F8; // allow_duplicated:True (Size->9)
@1118aycreate                            = 0x002E4A08; // allow_duplicated:True (Size->6)
@1119aycreate                            = 0x002E4A10; // allow_duplicated:True (Size->5)
@1120aycreate                            = 0x002E4A18; // allow_duplicated:True (Size->6)
@1121aycreate                            = 0x002E4A20; // allow_duplicated:True (Size->8)
@1122aycreate                            = 0x002E4A28; // allow_duplicated:True (Size->8)
@1123aycreate                            = 0x002E4A30; // allow_duplicated:True (Size->6)
@1124aycreate                            = 0x002E4A38; // allow_duplicated:True (Size->5)
@1125aycreate                            = 0x002E4A40; // allow_duplicated:True (Size->6)
@1126aycreate                            = 0x002E4A48; // allow_duplicated:True (Size->8)
@1127aycreate                            = 0x002E4A50; // allow_duplicated:True (Size->8)
@1128aycreate                            = 0x002E4A58; // allow_duplicated:True (Size->9)
@1129aycreate                            = 0x002E4A68; // allow_duplicated:True (Size->8)
@1130aycreate                            = 0x002E4A70; // allow_duplicated:True (Size->10)
@1131aycreate                            = 0x002E4A80; // allow_duplicated:True (Size->10)
@1230aycreate                            = 0x002E4A90; // allow_duplicated:True (Size->4)
@1235aycreate                            = 0x002E4AA0; // allow_duplicated:True (Size->25)
@1236aycreate                            = 0x002E4AC0; // allow_duplicated:True (Size->26)
@1237aycreate                            = 0x002E4AE0; // allow_duplicated:True (Size->27)
@1238aycreate                            = 0x002E4B00; // allow_duplicated:True (Size->26)
@1239aycreate                            = 0x002E4B20; // allow_duplicated:True (Size->1)
@1240aycreate                            = 0x002E4B30; // allow_duplicated:True (Size->35)
@1241aycreate                            = 0x002E4B60; // allow_duplicated:True (Size->33)
@1242aycreate                            = 0x002E4B90; // allow_duplicated:True (Size->32)
@1243aycreate                            = 0x002E4BB0; // allow_duplicated:True (Size->4)
@1244aycreate                            = 0x002E4BC0; // allow_duplicated:True (Size->32)
@1245aycreate                            = 0x002E4BE0; // allow_duplicated:True (Size->30)
@1246aycreate                            = 0x002E4C00; // allow_duplicated:True (Size->37)
@1247aycreate                            = 0x002E4C30; // allow_duplicated:True (Size->31)
@1248aycreate                            = 0x002E4C50; // allow_duplicated:True (Size->19)
@1249aycreate                            = 0x002E4C70; // allow_duplicated:True (Size->33)
@1250aycreate                            = 0x002E4CA0; // allow_duplicated:True (Size->26)
@1251aycreate                            = 0x002E4CC0; // allow_duplicated:True (Size->32)
@1252aycreate                            = 0x002E4CE0; // allow_duplicated:True (Size->37)
@1253aycreate                            = 0x002E4D10; // allow_duplicated:True (Size->25)
@1254aycreate                            = 0x002E4D30; // allow_duplicated:True (Size->27)
@1255aycreate                            = 0x002E4D50; // allow_duplicated:True (Size->28)
@1256aycreate                            = 0x002E4D70; // allow_duplicated:True (Size->37)
@1257aycreate                            = 0x002E4DA0; // allow_duplicated:True (Size->27)
@1258aycreate                            = 0x002E4DC0; // allow_duplicated:True (Size->13)
@1260aycreate                            = 0x002E4DD0; // allow_duplicated:True (Size->4)
@1261aycreate                            = 0x002E4DD8; // allow_duplicated:True (Size->3)     
@1262aycreate                            = 0x002E4DE0; // allow_duplicated:True (Size->3)
@1263aycreate                            = 0x002E4DE8; // allow_duplicated:True (Size->5)
@1264aycreate                            = 0x002E4DF0; // allow_duplicated:True (Size->4)
@1265aycreate                            = 0x002E4DF8; // allow_duplicated:True (Size->4)
// akEffect.c .rodata
_ssinfo                                  = 0x002E4E00; // (Size->192)   
_ssinfo2                                 = 0x002E4EC0; // (Size->192)   
_1024sintable45                          = 0x002E4F80; // (Size->36)    
lens$142                                 = 0x002E4FB0; // (Size->128)   
@301                                     = 0x002E5030; // allow_duplicated:True (Size->36)
stq$531                                  = 0x002E5060; // (Size->32)    
rgba$663                                 = 0x002E5080; // (Size->16)    
v0$664                                   = 0x002E5090; // (Size->48)    
// ayresult.c .rodata
@274ayresult                             = 0x002E50C0; // allow_duplicated:True (Size->32)
@273ayresult                             = 0x002E50E0; // allow_duplicated:True (Size->140)
@461ayresult                             = 0x002E5170; // allow_duplicated:True (Size->128)
@468ayresult                             = 0x002E51F0; // allow_duplicated:True (Size->6)
@469ayresult                             = 0x002E51F8; // allow_duplicated:True (Size->7)
@470ayresult                             = 0x002E5200; // allow_duplicated:True (Size->13)
@471ayresult                             = 0x002E5210; // allow_duplicated:True (Size->12)
@472ayresult                             = 0x002E5220; // allow_duplicated:True (Size->12)
@473ayresult                             = 0x002E5230; // allow_duplicated:True (Size->12)
@474ayresult                             = 0x002E5240; // allow_duplicated:True (Size->12)
@475ayresult                             = 0x002E5250; // allow_duplicated:True (Size->5)
@476ayresult                             = 0x002E5258; // allow_duplicated:True (Size->14)
@477ayresult                             = 0x002E5268; // allow_duplicated:True (Size->7)
@478ayresult                             = 0x002E5270; // allow_duplicated:True (Size->21)
@479ayresult                             = 0x002E5288; // allow_duplicated:True (Size->11)
@480ayresult                             = 0x002E52A0; // allow_duplicated:True (Size->19)
@481ayresult                             = 0x002E52C0; // allow_duplicated:True (Size->23)
@482ayresult                             = 0x002E52D8; // allow_duplicated:True (Size->11)
@483ayresult                             = 0x002E52E8; // allow_duplicated:True (Size->8)
@484ayresult                             = 0x002E52F0; // allow_duplicated:True (Size->10)
@485ayresult                             = 0x002E5300; // allow_duplicated:True (Size->9)
@486ayresult                             = 0x002E5310; // allow_duplicated:True (Size->14)
@487ayresult                             = 0x002E5320; // allow_duplicated:True (Size->20)
@488ayresult                             = 0x002E5340; // allow_duplicated:True (Size->24)
@489ayresult                             = 0x002E5360; // allow_duplicated:True (Size->21)
@490ayresult                             = 0x002E5380; // allow_duplicated:True (Size->17)
@491ayresult                             = 0x002E5398; // allow_duplicated:True (Size->8)
@609ayresult                             = 0x002E53A0; // allow_duplicated:True (Size->14)
@610ayresult                             = 0x002E53B0; // allow_duplicated:True (Size->10)
@611ayresult                             = 0x002E53C0; // allow_duplicated:True (Size->11)
@612ayresult                             = 0x002E53D0; // allow_duplicated:True (Size->15)
@613ayresult                             = 0x002E53E0; // allow_duplicated:True (Size->7)
@614ayresult                             = 0x002E53F0; // allow_duplicated:True (Size->21)
@615ayresult                             = 0x002E5410; // allow_duplicated:True (Size->24)
@616ayresult                             = 0x002E5430; // allow_duplicated:True (Size->25)
@617ayresult                             = 0x002E5450; // allow_duplicated:True (Size->5)
@618ayresult                             = 0x002E5458; // allow_duplicated:True (Size->14)
@619ayresult                             = 0x002E5468; // allow_duplicated:True (Size->12)
@620ayresult                             = 0x002E5478; // allow_duplicated:True (Size->13)
@621ayresult                             = 0x002E5488; // allow_duplicated:True (Size->14)
@622ayresult                             = 0x002E5498; // allow_duplicated:True (Size->6)
@623ayresult                             = 0x002E54A0; // allow_duplicated:True (Size->20)
@624ayresult                             = 0x002E54C0; // allow_duplicated:True (Size->31)
@625ayresult                             = 0x002E54E0; // allow_duplicated:True (Size->27)
@626ayresult                             = 0x002E5500; // allow_duplicated:True (Size->6)
@627ayresult                             = 0x002E5508; // allow_duplicated:True (Size->7)
@628ayresult                             = 0x002E5510; // allow_duplicated:True (Size->21)
@629ayresult                             = 0x002E5528; // allow_duplicated:True (Size->10)
@630ayresult                             = 0x002E5538; // allow_duplicated:True (Size->13)
@631ayresult                             = 0x002E5548; // allow_duplicated:True (Size->13)
@632ayresult                             = 0x002E5558; // allow_duplicated:True (Size->7)
@633ayresult                             = 0x002E5560; // allow_duplicated:True (Size->24)
@634ayresult                             = 0x002E5580; // allow_duplicated:True (Size->26)
@635ayresult                             = 0x002E55A0; // allow_duplicated:True (Size->25)
@636ayresult                             = 0x002E55C0; // allow_duplicated:True (Size->6)
@700ayresult                             = 0x002E55C8; // allow_duplicated:True (Size->3)
@701ayresult                             = 0x002E55D0; // allow_duplicated:True (Size->2)
@702ayresult                             = 0x002E55D8; // allow_duplicated:True (Size->5)
@828ayresult                             = 0x002E55E0; // allow_duplicated:True (Size->128)
@862ayresult                             = 0x002E5660; // allow_duplicated:True (Size->4)
@863ayresult                             = 0x002E5668; // allow_duplicated:True (Size->4)
@864ayresult                             = 0x002E5670; // allow_duplicated:True (Size->4)
@865ayresult                             = 0x002E5678; // allow_duplicated:True (Size->4)
@866ayresult                             = 0x002E5680; // allow_duplicated:True (Size->4)
@867ayresult                             = 0x002E5688; // allow_duplicated:True (Size->4)
@868ayresult                             = 0x002E5690; // allow_duplicated:True (Size->3)
@869ayresult                             = 0x002E5698; // allow_duplicated:True (Size->3)
@870ayresult                             = 0x002E56A0; // allow_duplicated:True (Size->3)
@871ayresult                             = 0x002E56A8; // allow_duplicated:True (Size->3)
@872ayresult                             = 0x002E56B0; // allow_duplicated:True (Size->3)
@873ayresult                             = 0x002E56B8; // allow_duplicated:True (Size->3)
@874ayresult                             = 0x002E56C0; // allow_duplicated:True (Size->4)
@875ayresult                             = 0x002E56C8; // allow_duplicated:True (Size->5)
@876ayresult                             = 0x002E56D0; // allow_duplicated:True (Size->5)
@877ayresult                             = 0x002E56D8; // allow_duplicated:True (Size->5)
@878ayresult                             = 0x002E56E0; // allow_duplicated:True (Size->5)
@879ayresult                             = 0x002E56E8; // allow_duplicated:True (Size->5)
@924ayresult                             = 0x002E56F0; // allow_duplicated:True (Size->6)
@925ayresult                             = 0x002E56F8; // allow_duplicated:True (Size->5)
@926ayresult                             = 0x002E5700; // allow_duplicated:True (Size->6)
@927ayresult                             = 0x002E5708; // allow_duplicated:True (Size->8)
@928ayresult                             = 0x002E5710; // allow_duplicated:True (Size->8)
@929ayresult                             = 0x002E5718; // allow_duplicated:True (Size->6)
@930ayresult                             = 0x002E5720; // allow_duplicated:True (Size->8)
@931ayresult                             = 0x002E5728; // allow_duplicated:True (Size->9)
@932ayresult                             = 0x002E5738; // allow_duplicated:True (Size->8)
@933ayresult                             = 0x002E5740; // allow_duplicated:True (Size->10)
@934ayresult                             = 0x002E5750; // allow_duplicated:True (Size->10)
@936ayresult                             = 0x002E5760; // allow_duplicated:True (Size->23)
@937ayresult                             = 0x002E5780; // allow_duplicated:True (Size->17)
@938ayresult                             = 0x002E57A0; // allow_duplicated:True (Size->16)
@939ayresult                             = 0x002E57B0; // allow_duplicated:True (Size->23)
@940ayresult                             = 0x002E57C8; // allow_duplicated:True (Size->13)
@941ayresult                             = 0x002E57D8; // allow_duplicated:True (Size->12)
@942ayresult                             = 0x002E57F0; // allow_duplicated:True (Size->23)
@943ayresult                             = 0x002E5810; // allow_duplicated:True (Size->16)
@944ayresult                             = 0x002E5820; // allow_duplicated:True (Size->14)
@1071ayresult                            = 0x002E5830; // allow_duplicated:True (Size->5)
@1101ayresult                            = 0x002E5838; // allow_duplicated:True (Size->14)
@1102ayresult                            = 0x002E5848; // allow_duplicated:True (Size->4)
@1103ayresult                            = 0x002E5850; // allow_duplicated:True (Size->3)
@1104ayresult                            = 0x002E5860; // allow_duplicated:True (Size->16)
@1105ayresult                            = 0x002E5870; // allow_duplicated:True (Size->3)
@1106ayresult                            = 0x002E5878; // allow_duplicated:True (Size->5)
@1107ayresult                            = 0x002E5880; // allow_duplicated:True (Size->12)
@1108ayresult                            = 0x002E5890; // allow_duplicated:True (Size->4)
@1109ayresult                            = 0x002E5898; // allow_duplicated:True (Size->4)
@1185ayresult                            = 0x002E58A0; // allow_duplicated:True (Size->13)
@1186ayresult                            = 0x002E58B0; // allow_duplicated:True (Size->20)
@1187ayresult                            = 0x002E58D0; // allow_duplicated:True (Size->25)
@1248ayresult                            = 0x002E58F0; // allow_duplicated:True (Size->32)
@1256ayresult                            = 0x002E5910; // allow_duplicated:True (Size->12)
@1257ayresult                            = 0x002E5920; // allow_duplicated:True (Size->13)
@1258ayresult                            = 0x002E5930; // allow_duplicated:True (Size->10)
@1259ayresult                            = 0x002E5940; // allow_duplicated:True (Size->16)
@1260ayresult                            = 0x002E5950; // allow_duplicated:True (Size->11)
@1261ayresult                            = 0x002E5960; // allow_duplicated:True (Size->17)    
@1663ayresult                            = 0x002E5980; // allow_duplicated:True (Size->28)
@1662ayresult                            = 0x002E59A0; // allow_duplicated:True (Size->28)
@1673ayresult                            = 0x002E59C0; // allow_duplicated:True (Size->8)
@1674ayresult                            = 0x002E59C8; // allow_duplicated:True (Size->7)
@1730ayresult                            = 0x002E59D0; // allow_duplicated:True (Size->17)
@1731ayresult                            = 0x002E59F0; // allow_duplicated:True (Size->16)
@1732ayresult                            = 0x002E5A00; // allow_duplicated:True (Size->10)
@1733ayresult                            = 0x002E5A10; // allow_duplicated:True (Size->12)
@1734ayresult                            = 0x002E5A20; // allow_duplicated:True (Size->30)
@1735ayresult                            = 0x002E5A40; // allow_duplicated:True (Size->19)
@1736ayresult                            = 0x002E5A60; // allow_duplicated:True (Size->18)
@1737ayresult                            = 0x002E5A78; // allow_duplicated:True (Size->12)
@1738ayresult                            = 0x002E5A90; // allow_duplicated:True (Size->29)
@1739ayresult                            = 0x002E5AB0; // allow_duplicated:True (Size->25)
@1740ayresult                            = 0x002E5AD0; // allow_duplicated:True (Size->17)
@1741ayresult                            = 0x002E5AE8; // allow_duplicated:True (Size->14)
@1889ayresult                            = 0x002E5AF8; // allow_duplicated:True (Size->4)
@1897ayresult                            = 0x002E5B00; // allow_duplicated:True (Size->16)
@1898ayresult                            = 0x002E5B10; // allow_duplicated:True (Size->19)
@1899ayresult                            = 0x002E5B30; // allow_duplicated:True (Size->24)
@1970ayresult                            = 0x002E5B50; // allow_duplicated:True (Size->20)
@1971ayresult                            = 0x002E5B70; // allow_duplicated:True (Size->24)
@1972ayresult                            = 0x002E5B90; // allow_duplicated:True (Size->21)
@2041ayresult                            = 0x002E5BA8; // allow_duplicated:True (Size->4)
@2042ayresult                            = 0x002E5BB0; // allow_duplicated:True (Size->10)
@2043ayresult                            = 0x002E5BC0; // allow_duplicated:True (Size->4)
@2044ayresult                            = 0x002E5BC8; // allow_duplicated:True (Size->15)
@2045ayresult                            = 0x002E5BE0; // allow_duplicated:True (Size->17)
@2099ayresult                            = 0x002E5BF8; // allow_duplicated:True (Size->10)
@2100ayresult                            = 0x002E5C08; // allow_duplicated:True (Size->9)
@2101ayresult                            = 0x002E5C18; // allow_duplicated:True (Size->5)
@2102ayresult                            = 0x002E5C20; // allow_duplicated:True (Size->6)
@2103ayresult                            = 0x002E5C28; // allow_duplicated:True (Size->9)
@2104ayresult                            = 0x002E5C38; // allow_duplicated:True (Size->11)
@2105ayresult                            = 0x002E5C48; // allow_duplicated:True (Size->6)
@2106ayresult                            = 0x002E5C50; // allow_duplicated:True (Size->5)
@2107ayresult                            = 0x002E5C58; // allow_duplicated:True (Size->6)
// spev04.c .rodata
vspev04HorsePos                          = 0x002E5C60; // (Size->192)   
vspev04Lamp                              = 0x002E5D20; // (Size->32)    
vspev04Window                            = 0x002E5D40; // (Size->144)   
vspev04Chip                              = 0x002E5DD0; // (Size->24)    
@1464spev04                              = 0x002E5DF0; // allow_duplicated:True (Size->36)
@1495spev04                              = 0x002E5E20; // allow_duplicated:True (Size->32)
@1734spev04                              = 0x002E5E40; // allow_duplicated:True (Size->32)
// spev08.c .rodata
vspev08BoundObject                       = 0x002E5E60; // (Size->32)    
vspev08ObjectSe                          = 0x002E5E80; // (Size->300)   
vspev08GlassSe                           = 0x002E5FB0; // (Size->12)    
vspev08SnowMachineInfo0                  = 0x002E5FC0; // (Size->384)   
ScissorObj$179                           = 0x002E6140; // (Size->200)   
DisableObj$180                           = 0x002E6208; // (Size->12)    
DisableRail$181                          = 0x002E6220; // (Size->60)    
Warp1P$182                               = 0x002E6260; // (Size->32)    
sp_tbl$183                               = 0x002E6280; // (Size->88)    
Gap2Hit                                  = 0x002E62E0; // (Size->32)    
Gap2HpHit                                = 0x002E6300; // (Size->48)    
AirGapHit$240                            = 0x002E6330; // (Size->48)    
JumpGapHit$241                           = 0x002E6360; // (Size->40)    
GrindGapHit$242                          = 0x002E6390; // (Size->48)    
SnowmachineHit$243                       = 0x002E63C0; // (Size->32)    
GapRail$397                              = 0x002E63E0; // (Size->24)    
GapObj$543                               = 0x002E6400; // (Size->48)    
liftman$766                              = 0x002E6430; // (Size->48)    
// nmact.c .rodata
@226nmact                                = 0x002E6460; // allow_duplicated:True (Size->16)
@234nmact                                = 0x002E6470; // allow_duplicated:True (Size->40)
@233nmact                                = 0x002E64A0; // allow_duplicated:True (Size->40)
@232nmact                                = 0x002E64D0; // allow_duplicated:True (Size->40)
@231nmact                                = 0x002E6500; // allow_duplicated:True (Size->40)
@230nmact                                = 0x002E6530; // allow_duplicated:True (Size->40)
@229nmact                                = 0x002E6560; // allow_duplicated:True (Size->40)
@228nmact                                = 0x002E6590; // allow_duplicated:True (Size->40)
@227nmact                                = 0x002E65C0; // allow_duplicated:True (Size->40)
@258nmact                                = 0x002E65F0; // allow_duplicated:True (Size->16)
@349nmact                                = 0x002E6600; // allow_duplicated:True (Size->40)
@348nmact                                = 0x002E6630; // allow_duplicated:True (Size->40)
@347nmact                                = 0x002E6660; // allow_duplicated:True (Size->40)
@345nmact                                = 0x002E6690; // allow_duplicated:True (Size->40)
@390nmact                                = 0x002E66C0; // allow_duplicated:True (Size->22)
@432nmact                                = 0x002E66E0; // allow_duplicated:True (Size->40)
@431nmact                                = 0x002E6710; // allow_duplicated:True (Size->40)
// spev02.c .rodata
vspev02HorsePos                          = 0x002E6740; // (Size->192)   
vspev02Lamp                              = 0x002E6800; // (Size->88)    
@1384spev02                              = 0x002E6860; // allow_duplicated:True (Size->24)
// spev03.c .rodata
vspev03BonkDram                          = 0x002E6880; // (Size->88)    
// spev06.c .rodata
vspev06ObjectSe                          = 0x002E68E0; // (Size->324)   
vspev06FountainInfo0                     = 0x002E6A30; // (Size->192)   
vspev06SnowGunInfo0                      = 0x002E6AF0; // (Size->192)   
vspev06Glass                             = 0x002E6BB0; // (Size->144)   
vspev06SkateLight                        = 0x002E6C40; // (Size->136)   
vspev06Flag                              = 0x002E6CD0; // (Size->88)    
vspev06Flag2                             = 0x002E6D30; // (Size->64)    
ScissorObj$253                           = 0x002E6D70; // (Size->484)   
DisableObj$254                           = 0x002E6F60; // (Size->204)   
DisableRail$255                          = 0x002E7030; // (Size->80)    
BoundObject$256                          = 0x002E7080; // (Size->164)   
sp_tbl$257                               = 0x002E7130; // (Size->88)    
//Gap2Hit                                  = 0x002E7190; // (Size->64)    
AirGapHit$309                            = 0x002E71D0; // (Size->24)    
Dram$756                                 = 0x002E71F0; // (Size->112)   
Win$757                                  = 0x002E7260; // (Size->208)   
@1003                                    = 0x002E7330; // allow_duplicated:True (Size->15)
@1004                                    = 0x002E7340; // allow_duplicated:True (Size->5)
@1005                                    = 0x002E7348; // allow_duplicated:True (Size->12)
@1006                                    = 0x002E7358; // allow_duplicated:True (Size->4)
@1007                                    = 0x002E7360; // allow_duplicated:True (Size->14)
@1008                                    = 0x002E7370; // allow_duplicated:True (Size->7)
@1020                                    = 0x002E7378; // allow_duplicated:True (Size->14)
@1021                                    = 0x002E7388; // allow_duplicated:True (Size->6)
// spev07.c .rodata
@262spev07                               = 0x002E7390; // allow_duplicated:True // (Size->32)    
@325spev07                               = 0x002E73B0; // allow_duplicated:True (Size->32)
// kncore.c .rodata
mat$444kncore                            = 0x002E73D0; // (Size->64)    
// nmevent.c .rodata
@42nmevent                               = 0x002E7410; // allow_duplicated:True (Size->16)
@67nmevent                               = 0x002E7420; // allow_duplicated:True (Size->16)
// akEvEfct.c .rodata
stq$495akEvEfct                          = 0x002E7430; // (Size->32)    
// nmtrick.c .rodata
@261nmtrick                              = 0x002E7450; // allow_duplicated:True (Size->28)
@260nmtrick                              = 0x002E7470; // allow_duplicated:True (Size->28)
@259nmtrick                              = 0x002E7490; // allow_duplicated:True (Size->28)
@460nmtrick                              = 0x002E74B0; // allow_duplicated:True (Size->3)
@461nmtrick                              = 0x002E74B8; // allow_duplicated:True (Size->4)
@462nmtrick                              = 0x002E74C0; // allow_duplicated:True (Size->5)     
@463nmtrick                              = 0x002E74C8; // allow_duplicated:True (Size->4)
@464nmtrick                              = 0x002E74D0; // allow_duplicated:True (Size->2)
@465nmtrick                              = 0x002E74D8; // allow_duplicated:True (Size->6)
@466nmtrick                              = 0x002E74E0; // allow_duplicated:True (Size->4)
@467nmtrick                              = 0x002E74E8; // allow_duplicated:True (Size->3)
@468nmtrick                              = 0x002E74F0; // allow_duplicated:True (Size->3)
@469nmtrick                              = 0x002E74F8; // allow_duplicated:True (Size->3)
@548nmtrick                              = 0x002E7500; // allow_duplicated:True (Size->6)
@549nmtrick                              = 0x002E7508; // allow_duplicated:True (Size->6)
@580nmtrick                              = 0x002E7510; // allow_duplicated:True (Size->96)
// end of game .c file related .rodata
//.rodata                                  = 0x002E7570; // (Region->LOCAL)  (Type->SECTION)
_overlay_group_addresses                 = 0x002E7680; // (Region->GLOBAL) (Type->NOTYPE) 
//__exception_table_end__                  = 0x002E7680; // (Region->GLOBAL) (Type->NOTYPE) 
//__exception_table_start__                = 0x002E7680; // (Region->GLOBAL) (Type->NOTYPE) 
//__static_init_end                        = 0x002E7680; // (Region->GLOBAL) (Type->NOTYPE) 
//__static_init                            = 0x002E7680; // (Region->GLOBAL) (Type->NOTYPE) 
__data_end                               = 0x002E7684; // (Region->GLOBAL) (Type->NOTYPE) 
vgmsysScrMode                            = 0x002E7700; // (Size->4)     
vsppScrWidth                             = 0x002E7704; //  (Size->4)     
vsppScrHeight                            = 0x002E7708; //  (Size->4)     
vsppMediaType                            = 0x002E770C; // (Size->4)     
@296                                     = 0x002E7710; // allow_duplicated:True (Size->6)
@656                                     = 0x002E7718; // allow_duplicated:True (Size->4)     
vktactParamG_jump_up                     = 0x002E771C; // (Size->4)     
vktactParamG_jump_down                   = 0x002E7720; // (Size->4)     
vktactParamG_air                         = 0x002E7724; // (Size->4)     
vktactParamG_hpair                       = 0x002E7728; // (Size->4)     
vktactParamHangRate                      = 0x002E772C; // (Size->4)     
vktactParamSpt_time                      = 0x002E7730; // (Size->4)     
vktactParamSpt_charge_time               = 0x002E7734; // (Size->4)     
vktactParamSpt_one_stock_tp              = 0x002E7738; // (Size->4)     
vktactParamBal_lean_gravity_min          = 0x002E773C; // (Size->4)     
vktactParamBal_lean_gravity_max          = 0x002E7740; // (Size->4)     
vktactParamBal_lean_limit                = 0x002E7744; // (Size->4)     
vktactParamBal_lean_start_dir            = 0x002E7748; // (Size->4)     
vktactParamBal_lean_acc_inp              = 0x002E774C; // (Size->4)     
vktactParamBal_lean_acc_fr_base          = 0x002E7750; // (Size->4)     
vktactParamBal_lean_acc_fr_rate          = 0x002E7754; // (Size->4)     
vktactParamBal_start_input               = 0x002E7758; // (Size->4)     
vktactParamPts_hold_pts_rate_grab        = 0x002E775C; // (Size->4)     
vktactParamPts_hold_pts_rate_plant       = 0x002E7760; // (Size->4)     
vktactParamPts_hold_pts_rate_grind       = 0x002E7764; // (Size->4)     
vktactParamPts_switch_bonus              = 0x002E7768; // (Size->4)     
vktactParamPts_perfect_bonus             = 0x002E776C; // (Size->4)     
vktactParamPts_sloppy_bonus              = 0x002E7770; // (Size->4)     
vktactParamPts_sicktime_bonus            = 0x002E7774; // (Size->4)     
vktactParamPts_sicktime_start            = 0x002E7778; // (Size->4)     
vktactParamHpOver_accel                  = 0x002E777C; // (Size->4)     
vktactParamHpOver_jump_rate              = 0x002E7780; // (Size->4)     
vktactMatTumbleAng_touch                 = 0x002E7788; // (Size->8)     
vktactCmdToRevert                        = 0x002E7790; // (Size->4)     
vktactCmdToJump                          = 0x002E7798; // (Size->8)     
@366                                     = 0x002E77A0; // allow_duplicated:True (Size->4)
@1860                                    = 0x002E77A8; // allow_duplicated:True (Size->8)
@1861                                    = 0x002E77B0; // allow_duplicated:True (Size->8)
@1862                                    = 0x002E77B8; // allow_duplicated:True (Size->8)
@1863                                    = 0x002E77C0; // allow_duplicated:True (Size->8)
vktmfdbgMenuText2                        = 0x002E77C8; // (Size->8)     
vktmfdbgMenuFunc2                        = 0x002E77D0; // (Size->8)     
vktmfdbgMenuUseNum2                      = 0x002E77D8; // (Size->8)     
vktmfdbgMenuNumText_2d                   = 0x002E77E0; // (Size->8)     
@293                                     = 0x002E77E8; // allow_duplicated:True (Size->8)
vspDisp2D                                = 0x002E77F0; //  (Size->4)     
vayCode                                  = 0x002E77F4; // (Size->4)     
@1219                                    = 0x002E77F8; // allow_duplicated:True (Size->8)
@1785                                    = 0x002E7800; // allow_duplicated:True (Size->7)
@1786                                    = 0x002E7808; // allow_duplicated:True (Size->3)
vknViewFlg_2P                            = 0x002E7810; // (Size->8)     
max$232                                  = 0x002E7818; // (Size->4)     
rate1$295                                = 0x002E781C; // (Size->4)     
rate2$296                                = 0x002E7820; // (Size->4)     
rate3$297                                = 0x002E7824; // (Size->4)     
a$432                                    = 0x002E7828; // (Size->4)     
b$433                                    = 0x002E782C; // (Size->4)     
dt$477                                   = 0x002E7830; // (Size->4)     
angy$553                                 = 0x002E7834; // (Size->4)     
f$554                                    = 0x002E7838; // (Size->4)     
@58                                      = 0x002E783C; // allow_duplicated:True (Size->4)
@59                                      = 0x002E7840; // allow_duplicated:True (Size->4)
vnmtblPauseCareerItem                    = 0x002E7848; // (Size->7)     
vnmtblPauseMatchItem                     = 0x002E7850; // (Size->6)     
vnmtblPauseFreeItem                      = 0x002E7858; // (Size->7)     
vnmtblTutoEnd                            = 0x002E7860; // (Size->8)     
@250                                     = 0x002E7868; // allow_duplicated:True (Size->6)
@258                                     = 0x002E7870; // allow_duplicated:True (Size->8)
cut_max$53                               = 0x002E7878; // (Size->4)     
rate$310                                 = 0x002E787C; // (Size->4)     
vspev01Length                            = 0x002E7880; // (Size->4)     
@1252                                    = 0x002E7888; // allow_duplicated:True (Size->8)
@1263                                    = 0x002E7890; // allow_duplicated:True (Size->8)
@1255                                    = 0x002E7898; // allow_duplicated:True (Size->8)
@1969                                    = 0x002E78A0; // allow_duplicated:True (Size->4)
rad180                                   = 0x002E78A4; // (Size->4)     
def$434                                  = 0x002E78A8; // (Size->4)     
xsize$435                                = 0x002E78AC; // (Size->4)     
ysize$436                                = 0x002E78B0; // (Size->4)     
acc$437                                  = 0x002E78B4; // (Size->4)     
distance$439                             = 0x002E78B8; // (Size->4)     
abe$440                                  = 0x002E78BC; // (Size->4)     
add$441                                  = 0x002E78C0; // (Size->4)     
sub$442                                  = 0x002E78C4; // (Size->4)     
time$443                                 = 0x002E78C8; // (Size->4)     
skip$444                                 = 0x002E78CC; // (Size->4)     
cnt$569                                  = 0x002E78D0; // (Size->4)     
deg$659                                  = 0x002E78D4; // (Size->4)     
num$660                                  = 0x002E78D8; // (Size->4)     
@506                                     = 0x002E78E0; // allow_duplicated:True (Size->8)
@522                                     = 0x002E78E8; // allow_duplicated:True (Size->8)
@146                                     = 0x002E78F0; // allow_duplicated:True (Size->8)
distance$258                             = 0x002E78F8; // (Size->4)     
frame$973                                = 0x002E78FC; // (Size->4)     
vspev07TexScrInfo_num                    = 0x002E7900; // (Size->4)     
spev07Lift1Rail_num                      = 0x002E7904; // (Size->4)     
spev07Lift2Rail_num                      = 0x002E7908; // (Size->4)     
spev07LiftPos_num                        = 0x002E790C; // (Size->4)     
spev07Lift1ID_num                        = 0x002E7910; // (Size->4)     
spev07Lift2ID_num                        = 0x002E7914; // (Size->4)     
@177                                     = 0x002E7918; // allow_duplicated:True (Size->8)
vknRandSeed                              = 0x002E7920; // (Size->4)     
max$180                                  = 0x002E7924; // (Size->4)     
hit_on$221                               = 0x002E7928; // (Size->4)     
hit_on$301                               = 0x002E792C; // (Size->4)     
hit_on$386                               = 0x002E7930; // (Size->4)     
_randcnt                                 = 0x002E7934; // (Size->2)     
xsize$86                                 = 0x002E7938; // (Size->4)     
ysize$87                                 = 0x002E793C; // (Size->4)     
acc$88                                   = 0x002E7940; // (Size->4)     
up$89                                    = 0x002E7944; // (Size->4)     
abe$90                                   = 0x002E7948; // (Size->4)     
add$91                                   = 0x002E794C; // (Size->4)     
sub$92                                   = 0x002E7950; // (Size->4)     
time$93                                  = 0x002E7954; // (Size->4)     
skip$94                                  = 0x002E7958; // (Size->4)     
vgmsysNextScrMode                        = 0x002E7980; // (Size->4)     

// SBSS Section Start
//_fbss                                    = 0x002E7980; // (Region->GLOBAL) (Type->NOTYPE) 
// main.c
vgmsysPreScrMode                         = 0x002E7984; // (Size->4)     
vgmsysScrChangeCol                       = 0x002E7988; // (Size->4)     
vgmsysDivide30Frame                      = 0x002E798C; // (Size->4)     
vgmsysDivideActiveWid                    = 0x002E7990; // (Size->4)     
vgmsysDivideType                         = 0x002E7994; // (Size->4)     
vgmsysDivideLine                         = 0x002E7998; // (Size->4)     
vgmsysWndBlurPow                         = 0x002E79A0; // (Size->8)     
vgmsysBlurPow                            = 0x002E79A8; // (Size->4)     
vgmsysEndFunc                            = 0x002E79AC; //  (Size->4)     
vgmsysFrameFunc                          = 0x002E79B0; //  (Size->4)     
vgmsysClock                              = 0x002E79B8; //  (Size->8)     
vgmsysAbuf                               = 0x002E79C0; //  (Size->4)     
vgmsysAbufmem                            = 0x002E79C4; //  (Size->4)     
vgmsysVif1Pkt                            = 0x002E79C8; //  (Size->4)     
vgmsysGifPkt                             = 0x002E79CC; //  (Size->4)   
// cdvd.c  
vuldvdReadMode                           = 0x002E79D0; // (Size->4)     
vuldvdReadAddr                           = 0x002E79D4; // (Size->4)   
// coord.c  
vulcodCamera                             = 0x002E79D8; // (Size->4)    
// pad.c 
vulpadSlotNum                            = 0x002E79E0; // (Size->8)     
vulpadAct0MinLv                          = 0x002E79E8; // (Size->4)     
vulpadRepFrame                           = 0x002E79EC; // (Size->4)     
vulpadAnaRef                             = 0x002E79F0; // (Size->4)   
// sd.c  
vulsdBatchCnt                            = 0x002E79F4; // (Size->4)     
vulsdBatchRet                            = 0x002E79F8; // (Size->4)     
vulsdBatchIop                            = 0x002E79FC; // (Size->4)     
// system.c
vulsysFlg_dispString                     = 0x002E7A00; //  (Size->1)  
// mv2ext.c   
isCountVblank                            = 0x002E7A04; // (Size->4)     
vblankCount                              = 0x002E7A08; // (Size->4)     
isFrameEnd                               = 0x002E7A0C; // (Size->4)     
isUp                                     = 0x002E7A10; // (Size->4)     
handler_error                            = 0x002E7A14; // (Size->4)     
vulmovTagAddrPtr                         = 0x002E7A18; // (Size->4)     
tex_fbp                                  = 0x002E7A1C; // (Size->4)    
// movie2.c 
vulmov2VintBlock                         = 0x002E7A20; //  (Size->4)     
vulmov2initStat                          = 0x002E7A24; // (Size->4)     
vulmov2videoDecTh                        = 0x002E7A28; // (Size->4)     
defaultTh                                = 0x002E7A2C; // (Size->4)   
// TEX.c  
vultexSystem                             = 0x002E7A30; // (Size->4) 
// ktact.c    
@5231                                    = 0x002E7A38; // allow_duplicated:True (Size->8)
@5232                                    = 0x002E7A40; // allow_duplicated:True (Size->8)
vktactParamMaxLanding                    = 0x002E7A48; // (Size->4)     
vktactParamMinLanding                    = 0x002E7A4C; // (Size->4)     
vktactParamCmnLanding                    = 0x002E7A50; // (Size->4)     
vktactParamMaxGrind                      = 0x002E7A54; // (Size->4)     
vktactParamMinGrind                      = 0x002E7A58; // (Size->4)     
vktactParamCmnGrind                      = 0x002E7A5C; // (Size->4)     
vktactParamMaxSpin                       = 0x002E7A60; // (Size->4)     
vktactParamMinSpin                       = 0x002E7A64; // (Size->4)     
vktactParamCmnSpin                       = 0x002E7A68; // (Size->4)     
vktactParamMaxCmnSpeed                   = 0x002E7A6C; // (Size->4)     
vktactParamMinCmnSpeed                   = 0x002E7A70; // (Size->4)     
vktactParamCmnCmnSpeed                   = 0x002E7A74; // (Size->4)     
vktactParamMaxMaxSpeed                   = 0x002E7A78; // (Size->4)     
vktactParamMinMaxSpeed                   = 0x002E7A7C; // (Size->4)     
vktactParamCmnMaxSpeed                   = 0x002E7A80; // (Size->4)     
vktactParamMaxQuickTurn                  = 0x002E7A84; // (Size->4)     
vktactParamMinQuickTurn                  = 0x002E7A88; // (Size->4)     
vktactParamCmnQuickTurn                  = 0x002E7A8C; // (Size->4)     
vktactParamMaxSitTurn                    = 0x002E7A90; // (Size->4)     
vktactParamMinSitTurn                    = 0x002E7A94; // (Size->4)     
vktactParamCmnSitTurn                    = 0x002E7A98; // (Size->4)     
vktactParamMaxTurn                       = 0x002E7A9C; // (Size->4)     
vktactParamMinTurn                       = 0x002E7AA0; // (Size->4)     
vktactParamCmnTurn                       = 0x002E7AA4; // (Size->4)     
vktactParamMaxJumpPower                  = 0x002E7AA8; // (Size->4)     
vktactParamMinJumpPower                  = 0x002E7AAC; // (Size->4)     
vktactParamCmnJumpPower                  = 0x002E7AB0; // (Size->4)     
vktactParamMaxRetRate                    = 0x002E7AB4; // (Size->4)     
vktactParamMinRetRate                    = 0x002E7AB8; // (Size->4)     
vktactParamCmnRetRate                    = 0x002E7ABC; // (Size->4)     
vktactNumObj_head                        = 0x002E7AC0; // (Size->4)     
vktactNumHit_head                        = 0x002E7AC4; // (Size->4)     
vktactNumObj_body                        = 0x002E7AC8; // (Size->4)     
vktactNumHit_body                        = 0x002E7ACC; // (Size->4)     
vktactSlideWater                         = 0x002E7AD0; // (Size->4)     
vktactColObj                             = 0x002E7AD4; // (Size->4)     
vktactColVec                             = 0x002E7AD8; // (Size->4)     
vktactColHit                             = 0x002E7ADC; // (Size->4)     
vktactIsSliding                          = 0x002E7AE0; // (Size->4)     
vktactNumObj                             = 0x002E7AE4; // (Size->4)     
vktactNumVec                             = 0x002E7AE8; // (Size->4)     
vktactNumHit                             = 0x002E7AEC; // (Size->4) 
// nmfont.c    
vnmfontLangType                          = 0x002E7AF0; // (Size->4)    
// ktmenu.c 
vktmenuResumable                         = 0x002E7AF4; // (Size->4)     
vktmenuDispCount                         = 0x002E7AF8; // (Size->4)     
vktmenuCurrentItem                       = 0x002E7AFC; // (Size->4)     
vktmenuNumItem                           = 0x002E7B00; // (Size->4)  
// spinit.c  
vspenvSecret                             = 0x002E7B04; //  (Size->4)     
vspenvReplay                             = 0x002E7B08; //  (Size->8)     
vspenvOption                             = 0x002E7B10; //  (Size->4)     
vspenvGame                               = 0x002E7B14; //  (Size->4)   
// spload.c
vsploadDemoNo                            = 0x002E7B18; // (Size->4)     
vsploadDemoData                          = 0x002E7B1C; // (Size->4)  
// gmpad.c   
vgmsysPadResume                          = 0x002E7B20; // (Size->4)     
vgmsysPadAllowPause                      = 0x002E7B24; //  (Size->4)     
vgmsysPadPrePausePid                     = 0x002E7B28; //  (Size->4)     
vgmsysPadPausePid                        = 0x002E7B2C; //  (Size->4)     
vgmsysPad                                = 0x002E7B30; //  (Size->8)     
vgmsysPadSoftReset                       = 0x002E7B38; //  (Size->4)     
vgmsysPadAllowSoftReset                  = 0x002E7B3C; //  (Size->4) 
// spfree.c    
vspChangeScreen                          = 0x002E7B40; // (Size->4)     
vspIntroCutNum                           = 0x002E7B44; // (Size->4)     
vspReplay                                = 0x002E7B48; //  (Size->8)     
vspVsWid                                 = 0x002E7B50; // (Size->4)     
vspWndFadePercent                        = 0x002E7B58; // (Size->8)     
vspFadePercent                           = 0x002E7B60; // (Size->4)     
vspFadeCol                               = 0x002E7B64; // (Size->4)     
vspEvent                                 = 0x002E7B68; // (Size->4)     
vspLocalVif1PktBuff                      = 0x002E7B6C; // (Size->4)     
vspLocalGifPktBuff                       = 0x002E7B70; // (Size->4)     
vspEventCamera                           = 0x002E7B74; // (Size->4)     
vspPlayIntro                             = 0x002E7B78; // (Size->4)     
vspInitHorse                             = 0x002E7B7C; //  (Size->4)     
vspEndRunReplay                          = 0x002E7B80; //  (Size->4)     
vspEndRun                                = 0x002E7B84; //  (Size->4)     
// tmevent.c
vtmevVibData                             = 0x002E7B88; // (Size->8)     
vtmevWarp                                = 0x002E7B90; //  (Size->4)     
vtmevEnd                                 = 0x002E7B94; // (Size->4)     
vtmevFinishPlayer                        = 0x002E7B98; // (Size->4)     
vtmevDrawPlayer                          = 0x002E7B9C; // (Size->4)     
vtmevDraw                                = 0x002E7BA0; // (Size->4)     
vtmevPlayer                              = 0x002E7BA4; // (Size->4)     
vtmevMain                                = 0x002E7BA8; // (Size->4)     
vtmevReset                               = 0x002E7BAC; // (Size->4)     
vtmevInit                                = 0x002E7BB0; // (Size->4)     
// ayselect.c
vaySelData                               = 0x002E7BB4; //  (Size->4)     
vayStateFlg                              = 0x002E7BB8; //  (Size->4)   
// aymcard.c  
vayTmpFile                               = 0x002E7BBC; // (Size->4)     
vayLoadFile                              = 0x002E7BC0; // (Size->4)     
vayMcSys                                 = 0x002E7BC4; // (Size->4)   
// aymodsel.c  
vayModeData                              = 0x002E7BC8; // (Size->4)     
vayMovCount_aymod                        = 0x002E7BCC; // allow_duplicated:True (Size->4)     
vayNewCareer                             = 0x002E7BD0; //  (Size->4)     
vayDemoSwitch                            = 0x002E7BD4; //  (Size->4)  
// aymovie.c   
vayMovCount_aymov                        = 0x002E7BD8; // allow_duplicated:True (Size->4)     
vayMovStep                               = 0x002E7BDC; // (Size->4)     
vayMovKind                               = 0x002E7BE0; //  (Size->4)  
// aychrsel.c   
vayChrdata                               = 0x002E7BE4; // (Size->4)    
// kncamera.c 
vknViewFlg_1P                            = 0x002E7BE8; // (Size->4)     
@589                                     = 0x002E7BF0; // allow_duplicated:True (Size->8)
// ayoption.c  
vayOptData                               = 0x002E7BF8; // (Size->4)  
// nmvc.c   
vnmvcPause                               = 0x002E7BFC; // (Size->4)    
// nmbgm.c 
vnmbgmRandom                             = 0x002E7C00; // (Size->4)     
vnmbgmSelect                             = 0x002E7C04; // (Size->4)     
vnmbgmPause                              = 0x002E7C08; // (Size->4)     
// nmsq.c
vnmsqExit                                = 0x002E7C0C; // (Size->4)     
vnmsqFadeCnt                             = 0x002E7C10; // (Size->4)     
vnmsqInterMVol                           = 0x002E7C14; // (Size->4)     
vnmsqMidiState                           = 0x002E7C18; // (Size->8)     
vnmsqMidiOperate                         = 0x002E7C20; // (Size->8)     
vnmsqSqAddr                              = 0x002E7C28; // (Size->8)     
vnmsqPause                               = 0x002E7C30; // (Size->4)    
// nmdisp.c 
vnmdispReplay                            = 0x002E7C38; // (Size->8)     
vnmdispEntryNum                          = 0x002E7C40; // (Size->1)     
vnmdispScoreRank                         = 0x002E7C44; // (Size->1)     
vnmdispHighScore                         = 0x002E7C48; // (Size->8)     
vnmdispCombLine                          = 0x002E7C50; // (Size->1)     
vnmdispTimeRenew                         = 0x002E7C54; // (Size->4)     
vnmdispStatisSearch                      = 0x002E7C58; // (Size->4)     
vnmdispStatistics                        = 0x002E7C60; // (Size->8)     
vnmdispStatisFlow                        = 0x002E7C68; // (Size->1)     
vnmdispCareerSearch                      = 0x002E7C6C; // (Size->4)     
vnmdispLevelCareer                       = 0x002E7C70; // (Size->8)     
vnmdispSoftCount                         = 0x002E7C78; // (Size->8)     
vnmdispSoftAdd                           = 0x002E7C80; // (Size->1)     
vnmdispSoftNum                           = 0x002E7C84; // (Size->1)     
vnmdispSoftPos                           = 0x002E7C88; // (Size->4)     
vnmdispSoft                              = 0x002E7C90; // (Size->8)     
vnmdispLevelSearch                       = 0x002E7C98; // (Size->1)     
vnmdispLevelGoals                        = 0x002E7CA0; // (Size->8)     
vnmdispLevelFlow                         = 0x002E7CA8; // (Size->1)     
vnmdispResultFade                        = 0x002E7CB0; // (Size->8)     
vnmdispResultFlow                        = 0x002E7CB8; // (Size->1)     
vnmdispHorseMesType                      = 0x002E7CBC; // (Size->1)     
vnmdispHorseMes                          = 0x002E7CC0; // (Size->8)     
vnmdispHorseEnterPos                     = 0x002E7CC8; // (Size->8)     
vnmdispHorseEnter                        = 0x002E7CD0; // (Size->8)     
vnmdispHorseGet                          = 0x002E7CD8; // (Size->8)     
vnmdispHorsePts                          = 0x002E7CE0; // (Size->8)     
vnmdispHorseNum                          = 0x002E7CE8; // (Size->4)     
vnmdispHorseWordNum                      = 0x002E7CEC; // (Size->4)     
vnmdispHorseSet                          = 0x002E7CF0; // (Size->4)     
vnmdispHorseAccept                       = 0x002E7CF4; // (Size->4)     
vnmdispHorseFlow                         = 0x002E7CF8; // (Size->1)     
vnmdispInvalid                           = 0x002E7CFC; // (Size->4)     
vnmdispDraw                              = 0x002E7D00; // (Size->8)     
vnmdispLose                              = 0x002E7D08; // (Size->8)     
vnmdispWin                               = 0x002E7D10; // (Size->8)     
vnmdispScrBottom                         = 0x002E7D18; // (Size->8)     
vnmdispScrCenter                         = 0x002E7D20; // (Size->8)     
vnmdispScrDivExp                         = 0x002E7D28; // (Size->4)     
vnmdispScrDiv                            = 0x002E7D2C; // (Size->4)     
vnmdispOutMesPos                         = 0x002E7D30; // (Size->8)     
vnmdispBoostMeterLen                     = 0x002E7D38; // (Size->2)     
vnmdispSpMeterLen                        = 0x002E7D3C; // (Size->2)     
vnmdispTrickNameLine                     = 0x002E7D40; // (Size->2)     
vnmdispTrickEffectType                   = 0x002E7D48; // (Size->8)     
vnmdispTrickSuccess                      = 0x002E7D50; // (Size->8)     
vnmdispTrickEnd                          = 0x002E7D58; // (Size->8)     
vnmdispTrickStart                        = 0x002E7D60; // (Size->8)     
vnmdispStancePos                         = 0x002E7D68; // (Size->8)     
vnmdispFakie                             = 0x002E7D70; // (Size->8)     
vnmdispTimeLeft                          = 0x002E7D78; // (Size->8)     
vnmdispParamPosDown                      = 0x002E7D80; // (Size->4)     
vnmdispParamPosUp                        = 0x002E7D84; // (Size->4)     
vnmdispParamPosRight                     = 0x002E7D88; // (Size->4)     
vnmdispParamPosLeft                      = 0x002E7D8C; // (Size->4)     
vnmdispParam                             = 0x002E7D90; // (Size->8)     
vnmdispAllow                             = 0x002E7D98; // (Size->8)     
vnmdispCameraUp                          = 0x002E7DA0; // (Size->4)     
vnmdispSyncDetail                        = 0x002E7DA4; // (Size->4)     
vnmdispSndDebug                          = 0x002E7DA8; // (Size->4)     
vnmdispPauseDebug2d                      = 0x002E7DAC; // (Size->4)     
vnmdispPauseDebugTop                     = 0x002E7DB0; // (Size->1)     
vnmdispPauseDebugItem                    = 0x002E7DB4; // (Size->1)     
vnmdispPauseDebugFlow                    = 0x002E7DB8; // (Size->1)     
vnmdispPauseDebug                        = 0x002E7DC0; // (Size->8)     
vnmdispTutoMesNum                        = 0x002E7DC8; // (Size->4)     
vnmdispTutoMesFlag                       = 0x002E7DCC; // (Size->4)     
vnmdispTutoMes                           = 0x002E7DD0; // (Size->8)     
vnmdispPauseTutorial                     = 0x002E7DD8; // (Size->8)     
vnmdispPauseTrickCate                    = 0x002E7DE0; // (Size->4)     
vnmdispPauseTrick                        = 0x002E7DE8; // (Size->8)     
vnmdispSelectIntTbl                      = 0x002E7DF0; // (Size->4)     
vnmdispSelectInt                         = 0x002E7DF4; // (Size->4)     
vnmdispSelectCnt                         = 0x002E7DF8; // (Size->4)     
vnmdispSelectFlow                        = 0x002E7DFC; // (Size->1)     
vnmdispVolume                            = 0x002E7E00; // (Size->8)     
vnmdispPauseSoundItem                    = 0x002E7E08; // (Size->1)     
vnmdispPauseSound                        = 0x002E7E10; // (Size->8)     
vnmdispPauseRetry                        = 0x002E7E18; // (Size->8)     
vnmdispPauseSelect                       = 0x002E7E20; // (Size->8)     
vnmdispMenuItem                          = 0x002E7E28; // (Size->8)     
vnmdispPauseMenu                         = 0x002E7E30; // (Size->8)     
vnmdispPauseCancel                       = 0x002E7E38; // (Size->4)     
vnmdispPauseItem                         = 0x002E7E3C; // (Size->1)     
vnmdispPauseFlow                         = 0x002E7E40; // (Size->1)     
vnmdispPause                             = 0x002E7E48; // (Size->8)     
vnmdispIntrCancel                        = 0x002E7E50; // (Size->4)     
vnmdispIntr                              = 0x002E7E58; // (Size->8)     
vnmdispBackGround                        = 0x002E7E60; // (Size->8)     
vnmdispOpeAccept                         = 0x002E7E68; // (Size->4)     
vnmdispOpeConnect                        = 0x002E7E6C; // (Size->4)     
vnmdispOpe                               = 0x002E7E70; // (Size->8)     
vnmdispDivSide                           = 0x002E7E78; // (Size->4)     
vnmdispDivMode                           = 0x002E7E7C; // (Size->4)     
vnmdispOtherMode                         = 0x002E7E80; // (Size->4)     
vnmdispDebug                             = 0x002E7E84; // (Size->4)     
vnmdispMode                              = 0x002E7E88; // (Size->1)     
vnmdispLang                              = 0x002E7E8C; // (Size->4)     
vnmdispSecret                            = 0x002E7E90; // (Size->4)     
vnmdispOption                            = 0x002E7E94; // (Size->4)     
vnmdispModeEnv                           = 0x002E7E98; // (Size->4)     
vnmdispCharEnv                           = 0x002E7E9C; // (Size->4)     
vnmdispCrsEnv                            = 0x002E7EA0; // (Size->4)     
vnmdispSoftData                          = 0x002E7EA4; // (Size->4)     
vnmdispTexData                           = 0x002E7EA8; // (Size->4)     
vnmdispGame2d                            = 0x002E7EAC; // (Size->4)     
// knreplay.c
vknIntro_Top                             = 0x002E7EB0; // (Size->4)     
vknBlock                                 = 0x002E7EB4; // (Size->4)     
vknCube                                  = 0x002E7EB8; // (Size->4)     
vknHead                                  = 0x002E7EBC; // (Size->4)     
// spev01.c
vspev01Shift                             = 0x002E7EC0; // (Size->4)     
vspev01LoopVol                           = 0x002E7EC8; // (Size->8)     
vspev01LoopID                            = 0x002E7ED0; // (Size->8)     
vspev01Slow                              = 0x002E7ED8; // (Size->4)     
vspev01LiftManVoice                      = 0x002E7EE0; // (Size->8)     
vspev01CameraFlag                        = 0x002E7EE8; // (Size->4)     
vspev01CameraCounter                     = 0x002E7EEC; // (Size->4)     
vspev01LogoEvCam                         = 0x002E7EF0; // (Size->4)     
vspev01Ski                               = 0x002E7EF4; // (Size->4)     
vspev01Lift2                             = 0x002E7EF8; // (Size->4)     
vspev01Lift1                             = 0x002E7EFC; // (Size->4)     
vspev01LiftManMdl                        = 0x002E7F00; // (Size->4)     
vspev01TowerMdl                          = 0x002E7F04; // (Size->4)     
vspev01CameraMdl                         = 0x002E7F08; // (Size->4)     
vspev01EventMdl                          = 0x002E7F0C; // (Size->4)     
vspev01AnimFrame                         = 0x002E7F10; // (Size->4)  
// aycreate.c   
vayCreate                                = 0x002E7F14; // (Size->4)     
// akEffect.c
_effecttex                               = 0x002E7F18; // (Size->4)     
// ayresult.c
vayResData                               = 0x002E7F1C; // (Size->4)     
// spev04.c
vspev04View                              = 0x002E7F20; // (Size->8)     
vspev04DrawLen                           = 0x002E7F28; // (Size->8)     
vspev04Neon                              = 0x002E7F30; // (Size->4)     
vspev04Fountain                          = 0x002E7F34; // (Size->4)     
vspev04SnowBallPiece2                    = 0x002E7F38; // (Size->4)     
vspev04SnowBallPiece1                    = 0x002E7F3C; // (Size->4)     
vspev04SnowBallClash                     = 0x002E7F40; // (Size->4)     
vspev04SnowBallFall                      = 0x002E7F44; // (Size->4)     
vspev04SnowSpout2                        = 0x002E7F48; // (Size->4)     
vspev04SnowSpout1                        = 0x002E7F4C; // (Size->4)     
vspev04Smoke                             = 0x002E7F50; // (Size->4)     
vspev04SlotCnt                           = 0x002E7F54; // (Size->4)     
vspev04ChipCnt                           = 0x002E7F58; // (Size->4)     
vspev04ChipNo                            = 0x002E7F5C; // (Size->4)     
vspev04StaffMdl                          = 0x002E7F60; // (Size->4)     
vspev04CraneMdl                          = 0x002E7F64; // (Size->4)     
vspev04SnowBallMdl                       = 0x002E7F68; // (Size->4)     
vspev04EventMdl                          = 0x002E7F6C; // (Size->4)     
vspev04SnowBallPos                       = 0x002E7F70; // (Size->4)     
vspev04Gond2Add                          = 0x002E7F74; // (Size->4)     
vspev04Gond1Add                          = 0x002E7F78; // (Size->4)     
vspev04LiftAdd                           = 0x002E7F7C; // (Size->4)     
vspev04Lift                              = 0x002E7F80; // (Size->4)     
vspev04CraneCnt                          = 0x002E7F84; // (Size->4)     
vspev04RailCnt                           = 0x002E7F88; // (Size->4)   
// tieffect.c  
up$438                                   = 0x002E7F8C; // (Size->4)  
// spev08.c   
vspev08EventData                         = 0x002E7F90; // (Size->4)    
// nmact.c 
vnmactVibData                            = 0x002E7F94; // (Size->4)     
vnmactVoiceVol                           = 0x002E7F98; // (Size->8)     
vnmactActSpeed                           = 0x002E7FA0; // (Size->8)     
vnmactCamLen                             = 0x002E7FA8; // (Size->8)     
vnmactEdge                               = 0x002E7FB0; // (Size->8)     
vnmactAttr                               = 0x002E7FB8; // (Size->8)     
vnmactSlide                              = 0x002E7FC0; // (Size->8)    
// spev02.c 
vspev02View                              = 0x002E7FC8; // (Size->8)     
vspev02WagonClash                        = 0x002E7FD0; // (Size->4)     
vspev02SnowSpout2                        = 0x002E7FD4; // (Size->4)     
vspev02SnowSpout1                        = 0x002E7FD8; // (Size->4)     
vspev02Smoke                             = 0x002E7FDC; // (Size->4)     
vspev02StaffMdl                          = 0x002E7FE0; // (Size->4)     
vspev02YuppieMdl                         = 0x002E7FE4; // (Size->4)     
vspev02WagonMdl                          = 0x002E7FE8; // (Size->4)     
vspev02EventMdl                          = 0x002E7FEC; // (Size->4)     
vspev02LiftAdd                           = 0x002E7FF0; // (Size->4)     
vspev02Lift                              = 0x002E7FF4; // (Size->4)     
vspev02YuppieCnt                         = 0x002E7FF8; // (Size->4)     
vspev02PipeCnt                           = 0x002E8000; // (Size->8)     
vspev02LampCnt                           = 0x002E8008; // (Size->8)     
vspev02ChairCnt                          = 0x002E8010; // (Size->8)     
vspev02GlassCnt                          = 0x002E8018; // (Size->8)     
vspev02SpoutCnt                          = 0x002E8020; // (Size->4)     
vspev02CafeCnt                           = 0x002E8024; // (Size->4)
// spev03.c     
taru_flg                                 = 0x002E8028; // (Size->4)     
taru_count                               = 0x002E802C; // (Size->4)     
vspev03LoopLR                            = 0x002E8030; // (Size->8)     
vspev03LoopVol                           = 0x002E8038; // (Size->8)     
vspev03LoopID                            = 0x002E8040; // (Size->8)     
vspev03Smoke                             = 0x002E8048; // (Size->4)     
vspev03Lift                              = 0x002E804C; // (Size->4)     
vspev03Mode                              = 0x002E8050; // (Size->4)     
vspev03MotMdlCtrl                        = 0x002E8054; // (Size->4)     
vspev03MotMdl                            = 0x002E8058; // (Size->4)  
// spev06.c   
vspev06EventData                         = 0x002E805C; // (Size->4)    
// spev07.c 
t$335                                    = 0x002E8060; // (Size->4)     
t$283                                    = 0x002E8064; // (Size->4)     
t$218                                    = 0x002E8068; // (Size->4)     
spev07GlobalFrame                        = 0x002E806C; // (Size->4)     
spev07Sound                              = 0x002E8070; // (Size->4)     
spev07Lift2                              = 0x002E8074; // (Size->4)     
spev07Lift1                              = 0x002E8078; // (Size->4)     
spev07MotMdl                             = 0x002E807C; // (Size->4)     
cnt_cnt$721                              = 0x002E8080; // (Size->4)   
// spev05.c  
vspev05Smoke                             = 0x002E8084; // (Size->4)     
vspev05LoopLR                            = 0x002E8088; // (Size->8)     
vspev05LoopVol                           = 0x002E8090; // (Size->8)     
vspev05LoopID                            = 0x002E8098; // (Size->8)     
vspev05MotMdlCtrl                        = 0x002E80A0; // (Size->4)     
vspev05MotMdl                            = 0x002E80A4; // (Size->4)     
vspev05CloudDown                         = 0x002E80A8; // (Size->4)     
vspev05CloudUp                           = 0x002E80AC; // (Size->4)     
vspev05Lift                              = 0x002E80B0; // (Size->4)     
cloud_flg                                = 0x002E80B8; // (Size->8)     
fog_flg                                  = 0x002E80C0; // (Size->8) 
// nmevent.c    
vnmeventSearchRes                        = 0x002E80C8; // (Size->4)    
// nmtrick.c 
vnmtrickLang                             = 0x002E80CC; // (Size->4)     
vnmtrickModeEnv                          = 0x002E80D0; // (Size->4)     
vnmtrickCharEnv                          = 0x002E80D4; // (Size->4)     
vnmtrickCrsEnv                           = 0x002E80D8; // (Size->4)     
// SBSS Section End

// BSS Section Start
// SDK and Lib BSS
__bss_start                              = 0x002E80DC; // (Region->GLOBAL) (Type->NOTYPE)  
_args                                    = 0x002E8100; // (Region->LOCAL)  (Type->NOTYPE) 
local_mb                                 = 0x002E8248; // (Region->LOCAL)  (Type->NOTYPE) 
local_addr                               = 0x002E824C; // (Region->LOCAL)  (Type->NOTYPE) 
_dma_num                                 = 0x002E8250; // (Region->LOCAL)  (Type->NOTYPE) 
_ch4dmaFlg                               = 0x002E8254; // (Region->LOCAL)  (Type->NOTYPE) 
_d4_qwc                                  = 0x002E8258; // (Region->LOCAL)  (Type->NOTYPE) 
_d4_madr                                 = 0x002E825C; // (Region->LOCAL)  (Type->NOTYPE) 
_sprtagdata                              = 0x002E8280; // (Size->512)   
_bstag                                   = 0x002E8480; // (Size->2064)  
stack.6                                  = 0x002E8C90; // (Region->LOCAL)  (Type->NOTYPE) 
topSema                                  = 0x002E9090; // (Region->LOCAL)  (Type->NOTYPE) 
topArg                                   = 0x002E9098; // (Region->LOCAL)  (Type->NOTYPE) 
userarea                                 = 0x002E94A0; // (Region->LOCAL)  (Type->NOTYPE) 
q.3                                      = 0x002E9500; // (Region->LOCAL)  (Type->NOTYPE) 
tinfo                                    = 0x002E9610; // (Region->LOCAL)  (Type->NOTYPE) 
wbuf                                     = 0x002E9640; // (Region->LOCAL)  (Type->NOTYPE) 
rbuf                                     = 0x002E9780; // (Region->LOCAL)  (Type->NOTYPE) 
linebuf                                  = 0x002E98C0; // (Region->LOCAL)  (Type->NOTYPE) 
_pckt_buffer                             = 0x002E9940; // (Region->LOCAL)  (Type->NOTYPE) 
_send_buffer                             = 0x002E99C0; // (Region->LOCAL)  (Type->NOTYPE) 
_csdata                                  = 0x002E9A00; // (Region->LOCAL)  (Type->NOTYPE) 
sif0_handleid                            = 0x002E9A14; // (Region->LOCAL)  (Type->NOTYPE) 
//_data_table                              = 0x002E9A18; //  (Region->LOCAL)  (Type->NOTYPE) 
_sys_buffer                              = 0x002E9A40; // (Region->LOCAL)  (Type->NOTYPE) 
soft_reg                                 = 0x002E9B40; // (Region->LOCAL)  (Type->NOTYPE) 
_packet_buffer                           = 0x002E9BC0; // (Region->LOCAL)  (Type->NOTYPE) 
_free_buffer                             = 0x002EA3C0; // (Region->LOCAL)  (Type->NOTYPE) 
_free_buffer2                            = 0x002EABC0; // (Region->LOCAL)  (Type->NOTYPE) 
//_data_table                              = 0x002EB3C0; // (Region->LOCAL)  (Type->NOTYPE) 
rcv_adr.30                               = 0x002EB400; // (Region->LOCAL)  (Type->NOTYPE) 
ip0.55                                   = 0x002EB404; // (Region->LOCAL)  (Type->NOTYPE) 
_send_data                               = 0x002EB440; // (Region->LOCAL)  (Type->NOTYPE) 
_rcv_data_rpc                            = 0x002EC080; // (Region->LOCAL)  (Type->NOTYPE) 
_rcv_data_cmd                            = 0x002EC0C0; // (Region->LOCAL)  (Type->NOTYPE) 
_iob                                     = 0x002EC500; // (Region->LOCAL)  (Type->NOTYPE) 
_cd                                      = 0x002EC700; // (Region->LOCAL)  (Type->NOTYPE) 
_fsversion                               = 0x002EC728; // (Region->LOCAL)  (Type->NOTYPE) 
_sif_FsRcv_Data                          = 0x002EC740; // (Region->LOCAL)  (Type->NOTYPE) 
_sif_FsPoff_Data                         = 0x002EC780; // (Region->LOCAL)  (Type->NOTYPE) 
//cd                                       = 0x002EC7C0; // (Region->LOCAL)  (Type->NOTYPE) 
sdata                                    = 0x002EC840; // (Region->LOCAL)  (Type->NOTYPE) 
_lih_data                                = 0x002EC880; // (Region->LOCAL)  (Type->NOTYPE) 
_senddata                                = 0x002EC980; // (Region->LOCAL)  (Type->NOTYPE) 
//cd                                       = 0x002ECB80; // (Region->LOCAL)  (Type->NOTYPE) 
_lfversion                               = 0x002ECBA8; // (Region->LOCAL)  (Type->NOTYPE) 
padsif                                   = 0x002ECC40; // (Region->LOCAL)  (Type->NOTYPE) 
PadInfo                                  = 0x002ECC90; // (Region->LOCAL)  (Type->NOTYPE) 
dma_iop_data                             = 0x002ECD80; // (Region->LOCAL)  (Type->NOTYPE) 
buffer                                   = 0x002ECF80; // (Region->LOCAL)  (Type->NOTYPE) 
sceCdCbfunc                              = 0x002ED000; // (Region->LOCAL)  (Type->NOTYPE) 
sceCdPoffCbfunc                          = 0x002ED004; // (Region->LOCAL)  (Type->NOTYPE) 
sceCdPoffCbdata                          = 0x002ED008; // (Region->LOCAL)  (Type->NOTYPE) 
sceCdPoffCbfunc_num                      = 0x002ED00C; // (Region->LOCAL)  (Type->NOTYPE) 
my_thid                                  = 0x002ED010; // (Region->LOCAL)  (Type->NOTYPE) 
my_th_info                               = 0x002ED018; // (Region->LOCAL)  (Type->NOTYPE) 
cb_tp                                    = 0x002ED048; // (Region->LOCAL)  (Type->NOTYPE) 
_sf_data                                 = 0x002ED080; // (Region->LOCAL)  (Type->NOTYPE) 
sfrdata                                  = 0x002ED1C0; // (Region->LOCAL)  (Type->NOTYPE) 
cdrdsf                                   = 0x002ED200; // (Region->LOCAL)  (Type->NOTYPE) 
cdit                                     = 0x002ED228; // (Region->LOCAL)  (Type->NOTYPE) 
cddr                                     = 0x002ED250; // (Region->LOCAL)  (Type->NOTYPE) 
_i_mode                                  = 0x002ED280; // (Region->LOCAL)  (Type->NOTYPE) 
_dr_mode                                 = 0x002ED290; // (Region->LOCAL)  (Type->NOTYPE) 
dum_mode                                 = 0x002ED298; // (Region->LOCAL)  (Type->NOTYPE) 
mcClientID                               = 0x002ED2C0; // (Region->LOCAL)  (Type->NOTYPE) 
typeAddr                                 = 0x002ED2E8; // (Region->LOCAL)  (Type->NOTYPE) 
freeAddr                                 = 0x002ED2EC; // (Region->LOCAL)  (Type->NOTYPE) 
formAddr                                 = 0x002ED2F0; // (Region->LOCAL)  (Type->NOTYPE) 
buffFileInfo                             = 0x002ED300; // (Region->LOCAL)  (Type->NOTYPE) 
sifParamOrd                              = 0x002ED340; // (Region->LOCAL)  (Type->NOTYPE) 
sifParamFname                            = 0x002ED370; // (Region->LOCAL)  (Type->NOTYPE) 
sifParamNext                             = 0x002ED7C0; // (Region->LOCAL)  (Type->NOTYPE) 
currentDir                               = 0x002ED880; // (Region->LOCAL)  (Type->NOTYPE) 
retval                                   = 0x002EE880; // (Region->LOCAL)  (Type->NOTYPE) 
transData.6                              = 0x002EE8C0; // (Region->LOCAL)  (Type->NOTYPE) 
stack                                    = 0x002EE8D0; // (Region->LOCAL)  (Type->NOTYPE) 
sbuff                                    = 0x002EEA00; // (Region->LOCAL)  (Type->NOTYPE) 
sceSd_gCd                                = 0x002EEA40; // (Region->LOCAL)  (Type->NOTYPE) 
//thenan.3                                 = 0x002EEA68; // (Region->LOCAL)  (Type->NOTYPE) 
//thenan.3                                 = 0x002EEA80; // (Region->LOCAL)  (Type->NOTYPE) 
// SDK/Lib BSS END

// Game BSS Start
// main.c
vgmsysInitFunc                           = 0x002EEA90; //  (Size->128)   
vgmsysFrameBuffer                        = 0x002EEB10; //  (Size->1936)  
_vgmsysVif1Pkt                           = 0x002EF2A0; // (Size->32)    
_vgmsysGifPkt                            = 0x002EF2C0; // (Size->20)  
// cdvd.c  
vuldvdFD                                 = 0x002EF2E0; // size:0x24
vuldvdQue                                = 0x002EF310; // size:0x1000
vuldvdData                               = 0x002F0310; // size:0x2000
vuldvdHead                               = 0x002F2310; // size:0x10    
vuldvdSystem                             = 0x002F2320; // size:0x30
// coord.c 
vulcodWVmat                              = 0x002F2350; // (Size->64)    
vulcodVSmat                              = 0x002F2390; // (Size->64) 
// heap.c   
heapinfo                                 = 0x002F23D0; // (Size->40) 
// mcard.c   
vulmcCardData                            = 0x002F2400; // (Size->2560)  
vulmcDir                                 = 0x002F2E00; // (Size->1280)  
vulmcSysInfo                             = 0x002F3300; // (Size->68)   
// pad.c 
vulpadInfo                               = 0x002F3350; // (Size->736)   
vulpadActBuf                             = 0x002F3630; // (Size->12)    
vulpadDmaBuf                             = 0x002F3640; // (Size->512)   
vulpadOption                             = 0x002F3840; // (Size->16)   
// sd.c 
vulsdBatch                               = 0x002F3850; // (Size->512) 
// system.c  
vulsysSystem                             = 0x002F3A50; //  (Size->864)  
// mv2ext.c 
vulmovTagAddr                            = 0x002F3DB0; // (Size->24)    
vulmov2Sysinfo                           = 0x002F3DD0; //  (Size->272)   
vulmov2videoDecStack                     = 0x002F3F00; // (Size->4)     
// movie2.c
defStack                                 = 0x002F3F40; // (Size->2048)  
// tmcrs.c
g_davidBodyBoundIndices                  = 0x002F4740; //  (Size->32768) 
g_davidBodyBounds                        = 0x002FC740; //  (Size->32768) 
vtmcrsLocalPacket                        = 0x00304740; // (Size->16)    
vtmcrsLocalPacketAddr                    = 0x00304750; // (Size->4096)  
vtmcrsEventSystem                        = 0x00305750; // (Size->20)    
vtmcrsEventModel                         = 0x00305770; // (Size->1536)  
vtmcrsObjectData                         = 0x00305D70; // (Size->40)    
vtmcrsBG                                 = 0x00305DA0; // (Size->96)    
vtmcrsAnimTexData                        = 0x00305E00; // (Size->1280)  
vtmcrsScrollTexData                      = 0x00306300; // (Size->1280)  
vtmcrsTexSystem                          = 0x00306800; // (Size->4208)  
vtmcrsBonkData                           = 0x00307870; // (Size->16)    
vtmcrsRailData                           = 0x00307880; // (Size->16)    
vtmcrsVectordata                         = 0x00307890; // (Size->16)    
vtmcrsHitData                            = 0x003078A0; // (Size->16)    
vtmcrsAlphaModel                         = 0x003078B0; // (Size->16)    
vtmcrsDrawModel                          = 0x003078C0; // (Size->480)   
vtmcrsBaseModel                          = 0x00307AA0; // (Size->160)   
vtmcrsSystem                             = 0x00307B40; // (Size->868)   
vtmcrsDivideNum                          = 0x00307EB0; //  (Size->16)
// ktact.c    
@528                                     = 0x00307EC0; // allow_duplicated:True (Size->16)
@4383                                    = 0x00307ED0; // allow_duplicated:True (Size->16)
@4384                                    = 0x00307EE0; // allow_duplicated:True (Size->16)
@4385                                    = 0x00307EF0; // allow_duplicated:True (Size->16)
@4386                                    = 0x00307F00; // allow_duplicated:True (Size->16)
col_obs$6401                             = 0x00307F10; // (Size->1536)  
col_obs$6372                             = 0x00308510; // (Size->12288) 
col_hit$6310                             = 0x0030B510; // (Size->196608)
col_hp$5169                              = 0x0033B510; // (Size->3072)  
col_rail$5168                            = 0x0033C110; // (Size->1536)  
col_hp$5090                              = 0x0033C710; // (Size->3072)  
col_rail$5089                            = 0x0033D310; // (Size->3072)  
col_vec$5052                             = 0x0033DF10; // (Size->6144)  
col_hit$4547                             = 0x0033F710; // (Size->24576) 
vktactColObj_head                        = 0x00345710; // (Size->1536)  
vktactColHit_head                        = 0x00345D10; // (Size->1536)  
vktactColObj_body                        = 0x00346310; // (Size->1536)  
vktactColHit_body                        = 0x00346910; // (Size->1536)  
vktactColSliding                         = 0x00346F10; // (Size->96)    
// nmfont.c
vnmfontTexData                           = 0x00346F70; // (Size->32)    
vnmfontScrRate                           = 0x00346F90; // (Size->16)    
vnmfontScrSize                           = 0x00346FA0; // (Size->16)    
vnmfontOption                            = 0x00346FB0; // (Size->96)    
// ktmenu.c
vktmenuList                              = 0x00347010; // (Size->960) 
// spinit.c  
vspenvDemo                               = 0x003473D0; //  (Size->32)    
vspenvBestTime                           = 0x003473F0; //  (Size->32)    
vspenvRecord                             = 0x00347410; //  (Size->192)   
vspenvEnv                                = 0x003474D0; //  (Size->381152)
vsptblCheats                             = 0x003A45B0; //  (Size->40)    
vsptblLevelGoalStr                       = 0x003A45E0; //  (Size->96)    
// spload.c
vsploadEnvMap                            = 0x003A4640; // (Size->32)    
vsploadCreate                            = 0x003A4660; // (Size->464)   
vsploadReplayHead                        = 0x003A4830; // (Size->16)    
vsploadLocalAddr                         = 0x003A4840; // (Size->1024)  
vsploadLocalPacket                       = 0x003A4C40; // (Size->16)    
vsploadGameEtc                           = 0x003A4C50; // (Size->156)   
vsploadGame2D                            = 0x003A4CF0; // (Size->1280)  
vsploadCourse                            = 0x003A51F0; // (Size->956)   
vsploadCharacter                         = 0x003A55B0; // (Size->4848)  
vsploadGameCommon                        = 0x003A68A0; // (Size->16)    
vsploadSelect                            = 0x003A68B0; // (Size->91936) 
vsploadMovie                             = 0x003BCFD0; // (Size->16)    
vsploadVibration                         = 0x003BCFE0; // (Size->96)    
vsploadIcon                              = 0x003BD040; // (Size->28)    
vsploadCommon                            = 0x003BD060; // (Size->608)   
vsploadSystem                            = 0x003BD2C0; // (Size->48)    
vsploadSoundData                         = 0x003BD2F0; // (Size->100)   
// gmpad.c
vgmsysPadNull                            = 0x003BD360; // (Size->96)    
vgmsysPadInfo                            = 0x003BD3C0; // (Size->192)  
// ktrider.c 
vspRider                                 = 0x003BD480; //  (Size->32)  
// spfree.c  
vspDispVsScore                           = 0x003BD4A0; //  (Size->16)    
vspDispResult                            = 0x003BD4B0; //  (Size->4168)  
vspDispEnvChar                           = 0x003BE500; //  (Size->112)   
vspDispEnv                               = 0x003BE570; //  (Size->32)    
vspVsData                                = 0x003BE590; //  (Size->4236)  
vspModeData                              = 0x003BF620; //  (Size->92)    
vspLocalVif1Pkt                          = 0x003BF680; // (Size->32)    
vspLocalGifPkt                           = 0x003BF6A0; // (Size->16)    
vspSystemMatrix                          = 0x003BF6B0; //  (Size->1664) 
// tmevent.c 
vtmevLight                               = 0x003BFD30; // (Size->160)   
vtmevCourse                              = 0x003BFDD0; // (Size->96)    
vtmevObject                              = 0x003BFE30; // (Size->800)   
vtmevFlag                                = 0x003C0150; // (Size->1024)  
vtmevCounter                             = 0x003C0550; // (Size->528)   
vtmevVs                                  = 0x003C0760; // (Size->672)   
vtmevWarpSystem                          = 0x003C0A00; // (Size->400)   
vtmevSystem                              = 0x003C0B90; // (Size->80)   
// aymodsel.c 
vakSnowFall                              = 0x003C0BE0; // (Size->96)   
// aychrsel.c 
vayChardata                              = 0x003C0C40; // (Size->88)  
// kncamera.c  
vknCamera                                = 0x003C0CA0; // (Size->608)   
// nmvc.c
vnmvcState                               = 0x003C0F00; // (Size->128)   
vnmvcOperate                             = 0x003C0F80; // (Size->128)   
vnmvcOption                              = 0x003C1000; // (Size->32)    
vnmvcResult                              = 0x003C1020; // (Size->48)    
vnmsndResult                             = 0x003C1080; // (Size->120)   
vnmsndFrameSend                          = 0x003C1100; // (Size->1808)  
vnmsndFrame                              = 0x003C1840; // (Size->1808)  
vnmsndInit                               = 0x003C1F80; // (Size->64)    
vnmsndRpcBuf                             = 0x003C1FC0; // (Size->2048)  
vnmsndCd                                 = 0x003C27C0; // (Size->40)   
// nmbgm.c 
vnmbgmQue                                = 0x003C27F0; // (Size->32)    
vnmbgmOption                             = 0x003C2810; // (Size->16)    
vnmbgmResult                             = 0x003C2820; // (Size->32)  
// nmsq.c  
vnmsqQue                                 = 0x003C2840; // (Size->32)    
vnmsqSesqState                           = 0x003C2860; // (Size->256)   
vnmsqSesqOperate                         = 0x003C2960; // (Size->256)   
vnmsqOption                              = 0x003C2A60; // (Size->32)    
vnmsqHdAddr                              = 0x003C2A80; // (Size->16)    
vnmsqResult                              = 0x003C2A90; // (Size->32)    
// nmdisp.c
vnmdispHighScorePos                      = 0x003C2AB0; // (Size->28)    
vnmdispCombList                          = 0x003C2AD0; // (Size->456)   
vnmdispStatisticsPos                     = 0x003C2CA0; // (Size->64)    
vnmdispCareerItem                        = 0x003C2CE0; // (Size->16)    
vnmdispLevelCareerPos                    = 0x003C2CF0; // (Size->20)    
vnmdispLevelMark                         = 0x003C2D10; // (Size->72)    
vnmdispLevelGoalsPos                     = 0x003C2D60; // (Size->44)    
vnmdispHorseMesPos                       = 0x003C2D90; // (Size->16)    
vnmdispHorseWord                         = 0x003C2DA0; // (Size->16)    
vnmdispLosePos                           = 0x003C2DB0; // (Size->16)    
vnmdispWinPos                            = 0x003C2DC0; // (Size->16)    
vnmdispLineImagePos                      = 0x003C2DD0; // (Size->20)    
vnmdispLineImage                         = 0x003C2DF0; // (Size->40)    
vnmdispOutMes                            = 0x003C2E20; // (Size->16)    
vnmdispLevelMesInfo                      = 0x003C2E30; // (Size->32)    
vnmdispLevelMesPos                       = 0x003C2E50; // (Size->32)    
vnmdispLevelMes                          = 0x003C2E70; // (Size->64)    
vnmdispSpMeter                           = 0x003C2EB0; // (Size->16)    
vnmdispTotalScore                        = 0x003C2EC0; // (Size->16)    
vnmdispTrickPtsInfo                      = 0x003C2ED0; // (Size->1056)  
vnmdispTrickPtsDraw                      = 0x003C32F0; // (Size->32)    
vnmdispTrickPts                          = 0x003C3310; // (Size->16)    
vnmdispTrickNameInfo                     = 0x003C3320; // (Size->12384) 
vnmdispTrickNameList                     = 0x003C6380; // (Size->456)   
vnmdispTrickName                         = 0x003C6550; // (Size->16)    
vnmdispBalance                           = 0x003C6560; // (Size->16)    
vnmdispBalanceInfo                       = 0x003C6570; // (Size->32)    
vnmdispStance                            = 0x003C6590; // (Size->16)    
vnmdispGapList                           = 0x003C65A0; // (Size->72)    
vnmdispPauseDebugPos                     = 0x003C65F0; // (Size->20)    
vnmdispLevelGoalList                     = 0x003C6610; // (Size->72)    
vnmdispTrickList                         = 0x003C6660; // (Size->648)   
vnmdispPauseSoundPos                     = 0x003C68F0; // (Size->24)    
vnmdispPauseSelectPos                    = 0x003C6910; // (Size->16)    
vnmdispPausePos                          = 0x003C6920; // (Size->40)    
vnmdispBestTime                          = 0x003C6950; // (Size->32)    
vnmdispRecord                            = 0x003C6970; // (Size->192)   
// nmdraw.c
vnmdrawScrRate                           = 0x003C6A30; // (Size->16)    
vnmdrawScrSize                           = 0x003C6A40; // (Size->16)  
// knreplay.c  
old$648                                  = 0x003C6A50; // (Size->16)    
vknEvent                                 = 0x003C6A60; // (Size->64)    
vknIntro                                 = 0x003C6AA0; // (Size->320)   
vknReplay                                = 0x003C6BE0; // (Size->384)   
vknMainData                              = 0x003C6D60; // (Size->160) 
// spev01.c  
vspev01Smoke                             = 0x003C6E00; // (Size->32)    
vspev01Shutter                           = 0x003C6E20; // (Size->120)   
vspev01LiftMan                           = 0x003C6EA0; // (Size->96)    
vspev01Camera                            = 0x003C6F00; // (Size->192)   
vspev01Logo                              = 0x003C6FC0; // (Size->288)   
// spev04.c
vspev04Debug                             = 0x003C70E0; // (Size->12)    
vspev04Light                             = 0x003C70F0; // (Size->160)   
vspev04SeFountain                        = 0x003C7190; // (Size->16)    
vspev04SeSnowBall                        = 0x003C71A0; // (Size->16)    
vspev04SeLift                            = 0x003C71B0; // (Size->16)    
vspev04LampBreak                         = 0x003C71C0; // (Size->16)    
vspev04Staff                             = 0x003C71D0; // (Size->192)   
vspev04SnowBall                          = 0x003C7290; // (Size->64)    
vspev04Gond2                             = 0x003C72D0; // (Size->48)    
vspev04Gond1                             = 0x003C7300; // (Size->48)    
vspev04TexNeon2                          = 0x003C7330; // (Size->120)   
vspev04TexNeon                           = 0x003C73B0; // (Size->120)   
// spev08.c
vspev08TexScrool                         = 0x003C7430; // (Size->240)
// spev02.c   
vspev02Light                             = 0x003C7520; // (Size->160)   
vspev02SeYuppie                          = 0x003C75C0; // (Size->80)    
vspev02SeWagon                           = 0x003C7610; // (Size->16)    
vspev02SeLift                            = 0x003C7620; // (Size->16)    
vspev02Staff                             = 0x003C7630; // (Size->96)    
vspev02Yuppie                            = 0x003C7690; // (Size->240)   
vspev02Gond2                             = 0x003C7780; // (Size->48)    
vspev02Gond1                             = 0x003C77B0; // (Size->48)    
vspev02Gear                              = 0x003C77E0; // (Size->144)  
// spev03.c 
@264                                     = 0x003C7870; // allow_duplicated:True (Size->16)
@547                                     = 0x003C7880; // allow_duplicated:True (Size->16)
@561                                     = 0x003C7890; // allow_duplicated:True (Size->16)
@598                                     = 0x003C78A0; // allow_duplicated:True (Size->16)
@660                                     = 0x003C78B0; // allow_duplicated:True (Size->16)
@688                                     = 0x003C78C0; // allow_duplicated:True (Size->16)
@370                                     = 0x003C78D0; // allow_duplicated:True (Size->16)
// spev07.c
ava3now$278                              = 0x003C78E0; // (Size->16)    
ava2now$277                              = 0x003C78F0; // (Size->16)    
ava1now$276                              = 0x003C7900; // (Size->16)    
viewnow$206                              = 0x003C7910; // (Size->16)    
vspev07TexScrool                         = 0x003C7920; // (Size->120)   
spev07Blind                              = 0x003C79A0; // (Size->80)    
spev07Cannon                             = 0x003C79F0; // (Size->144)   
spev07MultiSpark                         = 0x003C7A80; // (Size->48)    
spev07MultiSmoke                         = 0x003C7AB0; // (Size->32)   
// spev05.c
@176spev05                               = 0x003C7AD0; // allow_duplicated:True (Size->16)
@354spev05                               = 0x003C7AE0; // allow_duplicated:True (Size->16)
@411spev05                               = 0x003C7AF0; // allow_duplicated:True (Size->16)
@438spev05                               = 0x003C7B00; // allow_duplicated:True (Size->16)
@479spev05                               = 0x003C7B10; // allow_duplicated:True (Size->16)
@497spev05                               = 0x003C7B20; // allow_duplicated:True (Size->16)
@708spev05                               = 0x003C7B30; // allow_duplicated:True (Size->16)
@718spev05                               = 0x003C7B40; // allow_duplicated:True (Size->16)
@720spev05                               = 0x003C7B50; // allow_duplicated:True (Size->16)
@775spev05                               = 0x003C7B60; // allow_duplicated:True (Size->16)
@895spev05                               = 0x003C7B70; // allow_duplicated:True (Size->16)
@907spev05                               = 0x003C7B80; // allow_duplicated:True (Size->16)
@909spev05                               = 0x003C7B90; // allow_duplicated:True (Size->16)
@999spev05                               = 0x003C7BA0; // allow_duplicated:True (Size->16)
@1041spev05                              = 0x003C7BB0; // allow_duplicated:True (Size->16)
vspev05SnowMobileCtrl                    = 0x003C7BC0; // (Size->160)   
vspev05Smoke2                            = 0x003C7C60; // (Size->32)    
vspev05SnowMobilePos                     = 0x003C7C80; // (Size->16)    
spev05Blind                              = 0x003C7C90; // (Size->80)    
vspev05CloudSea                          = 0x003C7CE0; // (Size->160)   
vspev05LiftData                          = 0x003C7D80; // (Size->648)   
// knevent.c
vknPop_Rot                               = 0x003C8010; // (Size->16)    
vknPop_Pos                               = 0x003C8020; // (Size->16)    
vknCore                                  = 0x003C8030; // (Size->160)   
vknGameEvent                             = 0x003C80D0; // (Size->64)    
// akEvEffct.c
_Effect                                  = 0x003C8110; // (Size->1840) 
// nmtrick.c 
vnmtrickInfo                             = 0x003C8840; // (Size->4128)  
// tmetc.c
vtmetcSystem                             = 0x003C9860; // (Size->40)
errno                                    = 0x003C9888; // (Size->4)     
// BSS END //

//.vu.ss                                   = 0x003C9900; // (Region->LOCAL)  (Type->SECTION) # vubss start?
__bss_end                                = 0x003C9900; // (Region->GLOBAL) (Type->NOTYPE) 
_stack                                   = 0x01FF0000; // (Region->GLOBAL) (Type->NOTYPE) 
_heap_size                               = 0xFFFFFFFF; // (Region->GLOBAL) (Type->NOTYPE) 

D_10000                                  = 0x10000; // ignore:true
D_FFFF                                   = 0xFFFF; // ignore:true
D_FFFFF                                  = 0xFFFFF; // ignore:true
D_FFFFFF                                 = 0xFFFFFF; // ignore:true
D_00200001                               = 0x200001; // ignore:true
D_002D71A2                               = 0x2D71A2; // ignore:true
D_002D71A3                               = 0x2D71A3; // ignore:true
D_002D71A5                               = 0x2D71A5; // ignore:true
D_002D71A6                               = 0x2D71A6; // ignore:true
D_002D71A7                               = 0x2D71A7; // ignore:true
D_20000010                               = 0x20000010; // ignore:true
D_20000020                               = 0x20000020; // ignore:true
D_20000050                               = 0x20000050; // ignore:true
D_80000000                               = 0x80000000; // ignore:true
D_80000002                               = 0x80000002; // ignore:true
D_E0002000                               = 0xE0002000; // ignore:true
D_20000140                               = 0x20000140; // ignore:true
D_6FFFFFF8                               = 0x6FFFFFF8; // ignore:true
D_70000008                               = 0x70000008; // ignore:true
D_70000010                               = 0x70000010; // ignore:true
D_70000170                               = 0x70000170; // ignore:true
D_700001B0                               = 0x700001B0; // ignore:true
